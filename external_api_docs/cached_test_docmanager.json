{"default_devices": ["2214d9f0-4404-4bf6-a0d0-aaee20458d66", "22e11820-64fa-4bed-ad8f-f98ef66de298", "363f714d-e4fe-4052-a78c-f8c97542e709", "415228e4-456c-44b1-8602-70f98c67fba8", "51f02f33-4b43-11bf-2a6d-e7b5cf5be0ee", "571f0327-6507-4674-b9cf-fe68f7d9522d", "67ba495a-7982-42f0-a24a-0b1ffcb9e041", "6c645f61-0b82-235f-e476-8a6afc0e73dc", "8e20883f-c444-4edf-86bf-64e74c1d70e2", "c4b4a179-6f75-48ed-a6b3-95080be6afc6"], "device_names": {"8e20883f-c444-4edf-86bf-64e74c1d70e2": "[TV] Samsung 8 Series (82)", "22e11820-64fa-4bed-ad8f-f98ef66de298": "meross-Light-Strip", "51f02f33-4b43-11bf-2a6d-e7b5cf5be0ee": "[refrigerator] Samsung (LCD)", "571f0327-6507-4674-b9cf-fe68f7d9522d": "meross-Light-Strip", "363f714d-e4fe-4052-a78c-f8c97542e709": "meross-Light-Strip", "6c645f61-0b82-235f-e476-8a6afc0e73dc": "[dishwasher] Samsung", "c4b4a179-6f75-48ed-a6b3-95080be6afc6": "meross-Light-Strip", "415228e4-456c-44b1-8602-70f98c67fba8": "[TV] Samsung The Frame (49)", "2214d9f0-4404-4bf6-a0d0-aaee20458d66": "c2c-switch", "67ba495a-7982-42f0-a24a-0b1ffcb9e041": "sercomm.rc8335.default"}, "device_capabilities": ["odict", ["2214d9f0-4404-4bf6-a0d0-aaee20458d66", [["odict", ["capability_id", "switch"], ["capability_info", ["odict", ["attributes", ["odict", ["switch", ["odict", ["enumCommands", [["odict", ["command", "on"], ["value", "on"]], ["odict", ["command", "off"], ["value", "off"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["on", "off"]], ["title", "SwitchState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["off", ["odict", ["arguments", []], ["name", "off"]]], ["on", ["odict", ["arguments", []], ["name", "on"]]]]], ["ephemeral", false], ["id", "switch"], ["name", "Switch"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "refresh"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["refresh", ["odict", ["arguments", []], ["name", "refresh"]]]]], ["ephemeral", false], ["id", "refresh"], ["name", "Refresh"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "healthCheck"], ["capability_info", ["odict", ["attributes", ["odict", ["DeviceWatch-DeviceStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["reason", ["odict", ["enum", ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["value", ["odict", ["enum", ["online", "offline"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["DeviceWatch-Enroll", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["hubHardwareId", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]], ["protocol", ["odict", ["enum", ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]], ["title", "DeviceHealthProtocol"], ["type", "string"]]], ["scheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]]]], ["title", "DeviceHealthEnroll"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["checkInterval", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["hubHardwareId", ["odict", ["pattern", "^[0-9a-fA-F]{4}$"], ["type", "string"]]], ["offlinePingable", ["odict", ["enum", ["0", "1"]], ["type", "string"]]], ["protocol", ["odict", ["enum", ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]], ["title", "DeviceHealthProtocol"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["unit", ["odict", ["default", "s"], ["enum", ["s"]], ["type", "string"]]], ["value", ["odict", ["maximum", 604800], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["healthStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["reason", ["odict", ["enum", ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["value", ["odict", ["enum", ["online", "offline"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["ping", ["odict", ["arguments", []], ["name", "ping"]]]]], ["ephemeral", false], ["id", "healthCheck"], ["name", "Health Check"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]]]], ["22e11820-64fa-4bed-ad8f-f98ef66de298", [["odict", ["capability_id", "switch"], ["capability_info", ["odict", ["attributes", ["odict", ["switch", ["odict", ["enumCommands", [["odict", ["command", "on"], ["value", "on"]], ["odict", ["command", "off"], ["value", "off"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["on", "off"]], ["title", "SwitchState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["off", ["odict", ["arguments", []], ["name", "off"]]], ["on", ["odict", ["arguments", []], ["name", "on"]]]]], ["ephemeral", false], ["id", "switch"], ["name", "Switch"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "switchLevel"], ["capability_info", ["odict", ["attributes", ["odict", ["level", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "%"], ["enum", ["%"]], ["type", "string"]]], ["value", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["title", "IntegerPercent"], ["type", "object"]]], ["setter", "setLevel"]]]]], ["commands", ["odict", ["setLevel", ["odict", ["arguments", [["odict", ["name", "level"], ["optional", false], ["schema", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]], ["odict", ["name", "rate"], ["optional", true], ["schema", ["odict", ["minimum", 0], ["title", "PositiveInteger"], ["type", "integer"]]]]]], ["name", "setLevel"]]]]], ["ephemeral", false], ["id", "switchLevel"], ["name", "Switch Level"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "colorTemperature"], ["capability_info", ["odict", ["attributes", ["odict", ["colorTemperature", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "K"], ["enum", ["K"]], ["type", "string"]]], ["value", ["odict", ["maximum", 30000], ["minimum", 1], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]], ["setter", "setColorTemperature"]]]]], ["commands", ["odict", ["setColorTemperature", ["odict", ["arguments", [["odict", ["name", "temperature"], ["optional", false], ["schema", ["odict", ["maximum", 30000], ["minimum", 1], ["type", "integer"]]]]]], ["name", "setColorTemperature"]]]]], ["ephemeral", false], ["id", "colorTemperature"], ["name", "Color Temperature"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "colorControl"], ["capability_info", ["odict", ["attributes", ["odict", ["color", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["setter", "setColor"]]], ["hue", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]], ["required", []], ["type", "object"]]], ["setter", "setHue"]]], ["saturation", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]], ["required", []], ["type", "object"]]], ["setter", "setSaturation"]]]]], ["commands", ["odict", ["setColor", ["odict", ["arguments", [["odict", ["name", "color"], ["optional", false], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["hex", ["odict", ["maxLength", 7], ["type", "string"]]], ["hue", ["odict", ["type", "number"]]], ["level", ["odict", ["type", "integer"]]], ["saturation", ["odict", ["type", "number"]]], ["switch", ["odict", ["maxLength", 3], ["type", "string"]]]]], ["title", "COLOR_MAP"], ["type", "object"]]]]]], ["name", "setColor"]]], ["setHue", ["odict", ["arguments", [["odict", ["name", "hue"], ["optional", false], ["schema", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]]], ["name", "setHue"]]], ["setSaturation", ["odict", ["arguments", [["odict", ["name", "saturation"], ["optional", false], ["schema", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]]], ["name", "setSaturation"]]]]], ["ephemeral", false], ["id", "colorControl"], ["name", "Color Control"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "healthCheck"], ["capability_info", ["odict", ["attributes", ["odict", ["DeviceWatch-DeviceStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["reason", ["odict", ["enum", ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["value", ["odict", ["enum", ["online", "offline"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["DeviceWatch-Enroll", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["hubHardwareId", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]], ["protocol", ["odict", ["enum", ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]], ["title", "DeviceHealthProtocol"], ["type", "string"]]], ["scheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]]]], ["title", "DeviceHealthEnroll"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["checkInterval", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["hubHardwareId", ["odict", ["pattern", "^[0-9a-fA-F]{4}$"], ["type", "string"]]], ["offlinePingable", ["odict", ["enum", ["0", "1"]], ["type", "string"]]], ["protocol", ["odict", ["enum", ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]], ["title", "DeviceHealthProtocol"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["unit", ["odict", ["default", "s"], ["enum", ["s"]], ["type", "string"]]], ["value", ["odict", ["maximum", 604800], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["healthStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["reason", ["odict", ["enum", ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["value", ["odict", ["enum", ["online", "offline"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["ping", ["odict", ["arguments", []], ["name", "ping"]]]]], ["ephemeral", false], ["id", "healthCheck"], ["name", "Health Check"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]]]], ["363f714d-e4fe-4052-a78c-f8c97542e709", [["odict", ["capability_id", "switch"], ["capability_info", ["odict", ["attributes", ["odict", ["switch", ["odict", ["enumCommands", [["odict", ["command", "on"], ["value", "on"]], ["odict", ["command", "off"], ["value", "off"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["on", "off"]], ["title", "SwitchState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["off", ["odict", ["arguments", []], ["name", "off"]]], ["on", ["odict", ["arguments", []], ["name", "on"]]]]], ["ephemeral", false], ["id", "switch"], ["name", "Switch"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "switchLevel"], ["capability_info", ["odict", ["attributes", ["odict", ["level", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "%"], ["enum", ["%"]], ["type", "string"]]], ["value", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["title", "IntegerPercent"], ["type", "object"]]], ["setter", "setLevel"]]]]], ["commands", ["odict", ["setLevel", ["odict", ["arguments", [["odict", ["name", "level"], ["optional", false], ["schema", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]], ["odict", ["name", "rate"], ["optional", true], ["schema", ["odict", ["minimum", 0], ["title", "PositiveInteger"], ["type", "integer"]]]]]], ["name", "setLevel"]]]]], ["ephemeral", false], ["id", "switchLevel"], ["name", "Switch Level"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "colorTemperature"], ["capability_info", ["odict", ["attributes", ["odict", ["colorTemperature", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "K"], ["enum", ["K"]], ["type", "string"]]], ["value", ["odict", ["maximum", 30000], ["minimum", 1], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]], ["setter", "setColorTemperature"]]]]], ["commands", ["odict", ["setColorTemperature", ["odict", ["arguments", [["odict", ["name", "temperature"], ["optional", false], ["schema", ["odict", ["maximum", 30000], ["minimum", 1], ["type", "integer"]]]]]], ["name", "setColorTemperature"]]]]], ["ephemeral", false], ["id", "colorTemperature"], ["name", "Color Temperature"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "colorControl"], ["capability_info", ["odict", ["attributes", ["odict", ["color", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["setter", "setColor"]]], ["hue", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]], ["required", []], ["type", "object"]]], ["setter", "setHue"]]], ["saturation", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]], ["required", []], ["type", "object"]]], ["setter", "setSaturation"]]]]], ["commands", ["odict", ["setColor", ["odict", ["arguments", [["odict", ["name", "color"], ["optional", false], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["hex", ["odict", ["maxLength", 7], ["type", "string"]]], ["hue", ["odict", ["type", "number"]]], ["level", ["odict", ["type", "integer"]]], ["saturation", ["odict", ["type", "number"]]], ["switch", ["odict", ["maxLength", 3], ["type", "string"]]]]], ["title", "COLOR_MAP"], ["type", "object"]]]]]], ["name", "setColor"]]], ["setHue", ["odict", ["arguments", [["odict", ["name", "hue"], ["optional", false], ["schema", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]]], ["name", "setHue"]]], ["setSaturation", ["odict", ["arguments", [["odict", ["name", "saturation"], ["optional", false], ["schema", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]]], ["name", "setSaturation"]]]]], ["ephemeral", false], ["id", "colorControl"], ["name", "Color Control"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "healthCheck"], ["capability_info", ["odict", ["attributes", ["odict", ["DeviceWatch-DeviceStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["reason", ["odict", ["enum", ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["value", ["odict", ["enum", ["online", "offline"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["DeviceWatch-Enroll", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["hubHardwareId", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]], ["protocol", ["odict", ["enum", ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]], ["title", "DeviceHealthProtocol"], ["type", "string"]]], ["scheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]]]], ["title", "DeviceHealthEnroll"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["checkInterval", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["hubHardwareId", ["odict", ["pattern", "^[0-9a-fA-F]{4}$"], ["type", "string"]]], ["offlinePingable", ["odict", ["enum", ["0", "1"]], ["type", "string"]]], ["protocol", ["odict", ["enum", ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]], ["title", "DeviceHealthProtocol"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["unit", ["odict", ["default", "s"], ["enum", ["s"]], ["type", "string"]]], ["value", ["odict", ["maximum", 604800], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["healthStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["reason", ["odict", ["enum", ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["value", ["odict", ["enum", ["online", "offline"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["ping", ["odict", ["arguments", []], ["name", "ping"]]]]], ["ephemeral", false], ["id", "healthCheck"], ["name", "Health Check"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]]]], ["415228e4-456c-44b1-8602-70f98c67fba8", [["odict", ["capability_id", "ocf"], ["capability_info", ["odict", ["attributes", ["odict", ["di", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["dmv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["icv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mndt", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnfv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnhw", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnml", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnmn", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnmo", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnos", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnpv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnsl", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["n", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["pi", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["st", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["vid", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]]]], ["commands", ["odict", ["postOcfCommand", ["odict", ["arguments", [["odict", ["name", "href"], ["optional", false], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]], ["odict", ["name", "value"], ["optional", false], ["schema", ["odict", ["title", "JsonObject"], ["type", "object"]]]]]], ["name", "postOcfCommand"]]]]], ["ephemeral", false], ["id", "ocf"], ["name", "Ocf"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "switch"], ["capability_info", ["odict", ["attributes", ["odict", ["switch", ["odict", ["enumCommands", [["odict", ["command", "on"], ["value", "on"]], ["odict", ["command", "off"], ["value", "off"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["on", "off"]], ["title", "SwitchState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["off", ["odict", ["arguments", []], ["name", "off"]]], ["on", ["odict", ["arguments", []], ["name", "on"]]]]], ["ephemeral", false], ["id", "switch"], ["name", "Switch"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "audioVolume"], ["capability_info", ["odict", ["attributes", ["odict", ["volume", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "%"], ["enum", ["%"]], ["type", "string"]]], ["value", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["title", "IntegerPercent"], ["type", "object"]]], ["setter", "setVolume"]]]]], ["commands", ["odict", ["setVolume", ["odict", ["arguments", [["odict", ["name", "volume"], ["optional", false], ["schema", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]]]], ["name", "setVolume"]]], ["volumeDown", ["odict", ["arguments", []], ["name", "volumeDown"]]], ["volumeUp", ["odict", ["arguments", []], ["name", "volumeUp"]]]]], ["ephemeral", false], ["id", "audioVolume"], ["name", "Audio Volume"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "audioMute"], ["capability_info", ["odict", ["attributes", ["odict", ["mute", ["odict", ["enumCommands", [["odict", ["command", "mute"], ["value", "muted"]], ["odict", ["command", "unmute"], ["value", "unmuted"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["muted", "unmuted"]], ["title", "MuteState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]], ["setter", "setMute"]]]]], ["commands", ["odict", ["mute", ["odict", ["arguments", []], ["name", "mute"]]], ["setMute", ["odict", ["arguments", [["odict", ["name", "state"], ["optional", false], ["schema", ["odict", ["enum", ["muted", "unmuted"]], ["title", "MuteState"], ["type", "string"]]]]]], ["name", "setMute"]]], ["unmute", ["odict", ["arguments", []], ["name", "unmute"]]]]], ["ephemeral", false], ["id", "audioMute"], ["name", "Audio Mute"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "tvChannel"], ["capability_info", ["odict", ["attributes", ["odict", ["tvChannel", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["setter", "setTvChannel"]]], ["tvChannelName", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["setter", "setTvChannelName"]]]]], ["commands", ["odict", ["channelDown", ["odict", ["arguments", []], ["name", "channelDown"]]], ["channelUp", ["odict", ["arguments", []], ["name", "channelUp"]]], ["setTvChannel", ["odict", ["arguments", [["odict", ["name", "tvChannel"], ["optional", false], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]]], ["name", "setTvChannel"]]], ["setTvChannelName", ["odict", ["arguments", [["odict", ["name", "tvChannelName"], ["optional", true], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]]], ["name", "setTvChannelName"]]]]], ["ephemeral", false], ["id", "tvChannel"], ["name", "Tv Channel"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "mediaInputSource"], ["capability_info", ["odict", ["attributes", ["odict", ["inputSource", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["AM", "CD", "FM", "HDMI", "HDMI1", "HDMI2", "HDMI3", "HDMI4", "HDMI5", "HDMI6", "digitalTv", "USB", "YouTube", "aux", "bluetooth", "digital", "melon", "wifi"]], ["title", "MediaSource"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]], ["setter", "setInputSource"]]], ["supportedInputSources", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["AM", "CD", "FM", "HDMI", "HDMI1", "HDMI2", "HDMI3", "HDMI4", "HDMI5", "HDMI6", "digitalTv", "USB", "YouTube", "aux", "bluetooth", "digital", "melon", "wifi"]], ["title", "MediaSource"], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setInputSource", ["odict", ["arguments", [["odict", ["name", "mode"], ["optional", false], ["schema", ["odict", ["enum", ["AM", "CD", "FM", "HDMI", "HDMI1", "HDMI2", "HDMI3", "HDMI4", "HDMI5", "HDMI6", "digitalTv", "USB", "YouTube", "aux", "bluetooth", "digital", "melon", "wifi"]], ["title", "MediaSource"], ["type", "string"]]]]]], ["name", "setInputSource"]]]]], ["ephemeral", false], ["id", "mediaInputSource"], ["name", "Media Input Source"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "mediaPlayback"], ["capability_info", ["odict", ["attributes", ["odict", ["playbackStatus", ["odict", ["enumCommands", [["odict", ["command", "play"], ["value", "playing"]], ["odict", ["command", "pause"], ["value", "paused"]], ["odict", ["command", "stop"], ["value", "stopped"]], ["odict", ["command", "fastForward"], ["value", "fast forwarding"]], ["odict", ["command", "rewind"], ["value", "rewinding"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["paused", "playing", "stopped", "fast forwarding", "rewinding", "buffering"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["setter", "setPlaybackStatus"]]], ["supportedPlaybackCommands", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["pause", "play", "stop", "fastForward", "rewind"]], ["title", "MediaPlaybackCommands"], ["type", "string"]]], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict", ["fastForward", ["odict", ["arguments", []], ["name", "fastForward"]]], ["pause", ["odict", ["arguments", []], ["name", "pause"]]], ["play", ["odict", ["arguments", []], ["name", "play"]]], ["rewind", ["odict", ["arguments", []], ["name", "rewind"]]], ["setPlaybackStatus", ["odict", ["arguments", [["odict", ["name", "status"], ["optional", false], ["schema", ["odict", ["enum", ["paused", "playing", "stopped", "fast forwarding", "rewinding"]], ["type", "string"]]]]]], ["name", "setPlaybackStatus"]]], ["stop", ["odict", ["arguments", []], ["name", "stop"]]]]], ["ephemeral", false], ["id", "mediaPlayback"], ["name", "Media Playback"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "mediaTrackControl"], ["capability_info", ["odict", ["attributes", ["odict", ["supportedTrackControlCommands", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["previousTrack", "nextTrack"]], ["title", "MediaTrackCommands"], ["type", "string"]]], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict", ["nextTrack", ["odict", ["arguments", []], ["name", "nextTrack"]]], ["previousTrack", ["odict", ["arguments", []], ["name", "previousTrack"]]]]], ["ephemeral", false], ["id", "mediaTrackControl"], ["name", "Media Track Control"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.error"], ["capability_info", ["odict", ["attributes", ["odict", ["error", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setError", ["odict", ["arguments", [["odict", ["name", "error"], ["optional", false], ["schema", ["odict", ["type", "object"]]]]]], ["name", "setError"]]]]], ["ephemeral", false], ["id", "custom.error"], ["name", "Error"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.picturemode"], ["capability_info", ["odict", ["attributes", ["odict", ["pictureMode", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", []], ["type", "object"]]]]], ["supportedPictureModes", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "array"]]]]], ["required", []], ["type", "object"]]]]], ["supportedPictureModesMap", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["properties", ["odict", ["id", ["odict", ["type", "string"]]], ["name", ["odict", ["type", "string"]]]]], ["type", "object"]]], ["required", []], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict", ["setPictureMode", ["odict", ["arguments", [["odict", ["name", "mode"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setPictureMode"]]]]], ["ephemeral", false], ["id", "custom.picturemode"], ["name", "PictureMode"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.soundmode"], ["capability_info", ["odict", ["attributes", ["odict", ["soundMode", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", []], ["type", "object"]]]]], ["supportedSoundModes", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]], ["supportedSoundModesMap", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["properties", ["odict", ["id", ["odict", ["type", "string"]]], ["name", ["odict", ["type", "string"]]]]], ["type", "object"]]], ["required", []], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict", ["setSoundMode", ["odict", ["arguments", [["odict", ["name", "mode"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setSoundMode"]]]]], ["ephemeral", false], ["id", "custom.soundmode"], ["name", "SoundMode"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.accessibility"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["setAccessibility", ["odict", ["arguments", [["odict", ["name", "menuName"], ["optional", false], ["schema", ["odict", ["type", "string"]]]], ["odict", ["name", "menuId"], ["optional", false], ["schema", ["odict", ["type", "string"]]]], ["odict", ["name", "option"], ["optional", true], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setAccessibility"]]]]], ["ephemeral", false], ["id", "custom.accessibility"], ["name", "Accessibility"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.launchapp"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["launchApp", ["odict", ["arguments", [["odict", ["name", "appId"], ["optional", true], ["schema", ["odict", ["type", "string"]]]], ["odict", ["name", "appName"], ["optional", true], ["schema", ["odict", ["type", "string"]]]]]], ["name", "launchApp"]]]]], ["ephemeral", false], ["id", "custom.launchapp"], ["name", "launchApp"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.recording"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["recordStart", ["odict", ["arguments", []], ["name", "recordStart"]]], ["recordStop", ["odict", ["arguments", []], ["name", "recordStop"]]]]], ["ephemeral", false], ["id", "custom.recording"], ["name", "Recording"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.tvsearch"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["search", ["odict", ["arguments", [["odict", ["name", "query"], ["optional", false], ["schema", ["odict", ["type", "string"]]]], ["odict", ["name", "url"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "search"]]]]], ["ephemeral", false], ["id", "custom.tvsearch"], ["name", "tvSearch"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.disabledCapabilities"], ["capability_info", ["odict", ["attributes", ["odict", ["disabledCapabilities", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.disabledCapabilities"], ["name", "Disabled Capabilities"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.remoteControl"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["send", ["odict", ["arguments", [["odict", ["name", "keyValue"], ["optional", false], ["schema", ["odict", ["enum", ["UP", "DOWN", "LEFT", "RIGHT", "OK", "BACK", "MENU", "HOME"]], ["type", "string"]]]], ["odict", ["name", "keyState"], ["optional", true], ["schema", ["odict", ["enum", ["PRESSED", "RELEASED", "PRESS_AND_RELEASED"]], ["type", "string"]]]]]], ["name", "send"]]]]], ["ephemeral", false], ["id", "samsungvd.remoteControl"], ["name", "Remote Control"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.ambient"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["setAmbientOn", ["odict", ["arguments", []], ["name", "setAmbientOn"]]]]], ["ephemeral", false], ["id", "samsungvd.ambient"], ["name", "Ambient"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.ambientContent"], ["capability_info", ["odict", ["attributes", ["odict", ["supportedAmbientApps", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setAmbientContent", ["odict", ["arguments", [["odict", ["name", "id"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setAmbientContent"]]]]], ["ephemeral", false], ["id", "samsungvd.ambientContent"], ["name", "Ambient Content"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.ambient18"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["setAmbientOn", ["odict", ["arguments", []], ["name", "setAmbientOn"]]]]], ["ephemeral", false], ["id", "samsungvd.ambient18"], ["name", "Ambient18"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.mediaInputSource"], ["capability_info", ["odict", ["attributes", ["odict", ["inputSource", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedInputSourcesMap", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["properties", ["odict", ["id", ["odict", ["type", "string"]]], ["name", ["odict", ["type", "string"]]]]], ["type", "object"]]], ["required", []], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict", ["setInputSource", ["odict", ["arguments", [["odict", ["name", "id"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setInputSource"]]]]], ["ephemeral", false], ["id", "samsungvd.mediaInputSource"], ["name", "Media Input Source"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "refresh"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["refresh", ["odict", ["arguments", []], ["name", "refresh"]]]]], ["ephemeral", false], ["id", "refresh"], ["name", "Refresh"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "execute"], ["capability_info", ["odict", ["attributes", ["odict", ["data", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", true], ["required", []], ["type", "object"]]], ["value", ["odict", ["title", "JsonObject"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["execute", ["odict", ["arguments", [["odict", ["name", "command"], ["optional", false], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]], ["odict", ["name", "args"], ["optional", true], ["schema", ["odict", ["title", "JsonObject"], ["type", "object"]]]]]], ["name", "execute"]]]]], ["ephemeral", false], ["id", "execute"], ["name", "Execute"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.firmwareVersion"], ["capability_info", ["odict", ["attributes", ["odict", ["firmwareVersion", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setFirmwareVersion", ["odict", ["arguments", [["odict", ["name", "version"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setFirmwareVersion"]]]]], ["ephemeral", false], ["id", "samsungvd.firmwareVersion"], ["name", "Firmware Version"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.supportsPowerOnByOcf"], ["capability_info", ["odict", ["attributes", ["odict", ["supportsPowerOnByOcf", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["true", "false"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungvd.supportsPowerOnByOcf"], ["name", "Supports Power On By OCF"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "sec.diagnosticsInformation"], ["capability_info", ["odict", ["attributes", ["odict", ["dumpType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["file", "id"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["endpoint", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["NONE", "PIPER", "SSM"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["logType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["errCode", "dump"]], ["title", "logType"], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["minVersion", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["mnId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["protocolType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["ble_ocf", "wifi_https", "ble_stdk", "wifi_stdk"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["setupId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["signinPermission", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["immutable", "updating", "enabled", "disabled"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["tsId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "sec.diagnosticsInformation"], ["name", "Diagnostics Information"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]]]], ["51f02f33-4b43-11bf-2a6d-e7b5cf5be0ee", [["odict", ["capability_id", "contactSensor"], ["capability_info", ["odict", ["attributes", ["odict", ["contact", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["closed", "open"]], ["title", "ContactState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "contactSensor"], ["name", "Contact Sensor"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "cooler"]], ["odict", ["capability_id", "temperatureMeasurement"], ["capability_info", ["odict", ["attributes", ["odict", ["temperature", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["F", "C"]], ["type", "string"]]], ["value", ["odict", ["maximum", 10000], ["minimum", -460], ["title", "TemperatureValue"], ["type", "number"]]]]], ["required", ["value", "unit"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "temperatureMeasurement"], ["name", "Temperature Measurement"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "cooler"]], ["odict", ["capability_id", "thermostatCoolingSetpoint"], ["capability_info", ["odict", ["attributes", ["odict", ["coolingSetpoint", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["F", "C"]], ["type", "string"]]], ["value", ["odict", ["maximum", 10000], ["minimum", -460], ["title", "TemperatureValue"], ["type", "number"]]]]], ["required", ["value", "unit"]], ["title", "Temperature"], ["type", "object"]]], ["setter", "setCoolingSetpoint"]]]]], ["commands", ["odict", ["setCoolingSetpoint", ["odict", ["arguments", [["odict", ["name", "setpoint"], ["optional", false], ["schema", ["odict", ["maximum", 10000], ["minimum", -460], ["title", "TemperatureValue"], ["type", "number"]]]]]], ["name", "setCoolingSetpoint"]]]]], ["ephemeral", false], ["id", "thermostatCoolingSetpoint"], ["name", "Thermostat Cooling Setpoint"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "cooler"]], ["odict", ["capability_id", "custom.disabledCapabilities"], ["capability_info", ["odict", ["attributes", ["odict", ["disabledCapabilities", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.disabledCapabilities"], ["name", "Disabled Capabilities"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "cooler"]], ["odict", ["capability_id", "custom.thermostatSetpointControl"], ["capability_info", ["odict", ["attributes", ["odict", ["maximumSetpoint", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["F", "C"]], ["type", "string"]]], ["value", ["odict", ["type", "number"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["minimumSetpoint", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["F", "C"]], ["type", "string"]]], ["value", ["odict", ["type", "number"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["lowerSetpoint", ["odict", ["arguments", []], ["name", "lowerSetpoint"]]], ["raiseSetpoint", ["odict", ["arguments", []], ["name", "raiseSetpoint"]]]]], ["ephemeral", false], ["id", "custom.thermostatSetpointControl"], ["name", "Thermostat Setpoint Control"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "cooler"]], ["odict", ["capability_id", "contactSensor"], ["capability_info", ["odict", ["attributes", ["odict", ["contact", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["closed", "open"]], ["title", "ContactState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "contactSensor"], ["name", "Contact Sensor"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "cvroom"]], ["odict", ["capability_id", "custom.disabledCapabilities"], ["capability_info", ["odict", ["attributes", ["odict", ["disabledCapabilities", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.disabledCapabilities"], ["name", "Disabled Capabilities"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "cvroom"]], ["odict", ["capability_id", "custom.fridgeMode"], ["capability_info", ["odict", ["attributes", ["odict", ["fridgeMode", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["fridgeModeValue", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.fridgeMode"], ["name", "Fridge Mode"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "cvroom"]], ["odict", ["capability_id", "contactSensor"], ["capability_info", ["odict", ["attributes", ["odict", ["contact", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["closed", "open"]], ["title", "ContactState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "contactSensor"], ["name", "Contact Sensor"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "freezer"]], ["odict", ["capability_id", "temperatureMeasurement"], ["capability_info", ["odict", ["attributes", ["odict", ["temperature", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["F", "C"]], ["type", "string"]]], ["value", ["odict", ["maximum", 10000], ["minimum", -460], ["title", "TemperatureValue"], ["type", "number"]]]]], ["required", ["value", "unit"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "temperatureMeasurement"], ["name", "Temperature Measurement"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "freezer"]], ["odict", ["capability_id", "thermostatCoolingSetpoint"], ["capability_info", ["odict", ["attributes", ["odict", ["coolingSetpoint", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["F", "C"]], ["type", "string"]]], ["value", ["odict", ["maximum", 10000], ["minimum", -460], ["title", "TemperatureValue"], ["type", "number"]]]]], ["required", ["value", "unit"]], ["title", "Temperature"], ["type", "object"]]], ["setter", "setCoolingSetpoint"]]]]], ["commands", ["odict", ["setCoolingSetpoint", ["odict", ["arguments", [["odict", ["name", "setpoint"], ["optional", false], ["schema", ["odict", ["maximum", 10000], ["minimum", -460], ["title", "TemperatureValue"], ["type", "number"]]]]]], ["name", "setCoolingSetpoint"]]]]], ["ephemeral", false], ["id", "thermostatCoolingSetpoint"], ["name", "Thermostat Cooling Setpoint"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "freezer"]], ["odict", ["capability_id", "custom.disabledCapabilities"], ["capability_info", ["odict", ["attributes", ["odict", ["disabledCapabilities", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.disabledCapabilities"], ["name", "Disabled Capabilities"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "freezer"]], ["odict", ["capability_id", "custom.thermostatSetpointControl"], ["capability_info", ["odict", ["attributes", ["odict", ["maximumSetpoint", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["F", "C"]], ["type", "string"]]], ["value", ["odict", ["type", "number"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["minimumSetpoint", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["F", "C"]], ["type", "string"]]], ["value", ["odict", ["type", "number"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["lowerSetpoint", ["odict", ["arguments", []], ["name", "lowerSetpoint"]]], ["raiseSetpoint", ["odict", ["arguments", []], ["name", "raiseSetpoint"]]]]], ["ephemeral", false], ["id", "custom.thermostatSetpointControl"], ["name", "Thermostat Setpoint Control"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "freezer"]], ["odict", ["capability_id", "switch"], ["capability_info", ["odict", ["attributes", ["odict", ["switch", ["odict", ["enumCommands", [["odict", ["command", "on"], ["value", "on"]], ["odict", ["command", "off"], ["value", "off"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["on", "off"]], ["title", "SwitchState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["off", ["odict", ["arguments", []], ["name", "off"]]], ["on", ["odict", ["arguments", []], ["name", "on"]]]]], ["ephemeral", false], ["id", "switch"], ["name", "Switch"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "icemaker"]], ["odict", ["capability_id", "custom.disabledCapabilities"], ["capability_info", ["odict", ["attributes", ["odict", ["disabledCapabilities", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.disabledCapabilities"], ["name", "Disabled Capabilities"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "icemaker"]], ["odict", ["capability_id", "switch"], ["capability_info", ["odict", ["attributes", ["odict", ["switch", ["odict", ["enumCommands", [["odict", ["command", "on"], ["value", "on"]], ["odict", ["command", "off"], ["value", "off"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["on", "off"]], ["title", "SwitchState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["off", ["odict", ["arguments", []], ["name", "off"]]], ["on", ["odict", ["arguments", []], ["name", "on"]]]]], ["ephemeral", false], ["id", "switch"], ["name", "Switch"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "icemaker-02"]], ["odict", ["capability_id", "custom.disabledCapabilities"], ["capability_info", ["odict", ["attributes", ["odict", ["disabledCapabilities", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.disabledCapabilities"], ["name", "Disabled Capabilities"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "icemaker-02"]], ["odict", ["capability_id", "contactSensor"], ["capability_info", ["odict", ["attributes", ["odict", ["contact", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["closed", "open"]], ["title", "ContactState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "contactSensor"], ["name", "Contact Sensor"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "execute"], ["capability_info", ["odict", ["attributes", ["odict", ["data", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", true], ["required", []], ["type", "object"]]], ["value", ["odict", ["title", "JsonObject"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["execute", ["odict", ["arguments", [["odict", ["name", "command"], ["optional", false], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]], ["odict", ["name", "args"], ["optional", true], ["schema", ["odict", ["title", "JsonObject"], ["type", "object"]]]]]], ["name", "execute"]]]]], ["ephemeral", false], ["id", "execute"], ["name", "Execute"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "ocf"], ["capability_info", ["odict", ["attributes", ["odict", ["di", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["dmv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["icv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mndt", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnfv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnhw", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnml", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnmn", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnmo", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnos", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnpv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnsl", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["n", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["pi", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["st", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["vid", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]]]], ["commands", ["odict", ["postOcfCommand", ["odict", ["arguments", [["odict", ["name", "href"], ["optional", false], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]], ["odict", ["name", "value"], ["optional", false], ["schema", ["odict", ["title", "JsonObject"], ["type", "object"]]]]]], ["name", "postOcfCommand"]]]]], ["ephemeral", false], ["id", "ocf"], ["name", "Ocf"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "powerConsumptionReport"], ["capability_info", ["odict", ["attributes", ["odict", ["powerConsumption", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["deltaEnergy", ["odict", ["type", "number"]]], ["end", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["title", "Iso8601Date"], ["type", "string"]]], ["energy", ["odict", ["type", "number"]]], ["energySaved", ["odict", ["type", "number"]]], ["persistedEnergy", ["odict", ["type", "number"]]], ["persistedSavedEnergy", ["odict", ["type", "number"]]], ["power", ["odict", ["type", "number"]]], ["powerEnergy", ["odict", ["type", "number"]]], ["start", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["title", "Iso8601Date"], ["type", "string"]]]]], ["title", "PowerConsumption"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "powerConsumptionReport"], ["name", "Power Consumption Report"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "demandResponseLoadControl"], ["capability_info", ["odict", ["attributes", ["odict", ["drlcStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["drlcLevel", ["odict", ["maximum", 4], ["minimum", -1], ["title", "DrlcLevel"], ["type", "integer"]]], ["drlcType", ["odict", ["maximum", 1], ["minimum", 0], ["title", "DrlcType"], ["type", "integer"]]], ["duration", ["odict", ["minimum", 0], ["title", "PositiveInteger"], ["type", "integer"]]], ["override", ["odict", ["type", "boolean"]]], ["start", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["title", "Iso8601Date"], ["type", "string"]]]]], ["title", "DemandResponseLoadControlStatus"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["overrideDrlcAction", ["odict", ["arguments", [["odict", ["name", "value"], ["optional", false], ["schema", ["odict", ["type", "boolean"]]]]]], ["name", "overrideDrlcAction"]]], ["requestDrlcAction", ["odict", ["arguments", [["odict", ["name", "drlcType"], ["optional", false], ["schema", ["odict", ["maximum", 1], ["minimum", 0], ["title", "DrlcType"], ["type", "integer"]]]], ["odict", ["name", "drlcLevel"], ["optional", false], ["schema", ["odict", ["maximum", 4], ["minimum", -1], ["title", "DrlcLevel"], ["type", "integer"]]]], ["odict", ["name", "start"], ["optional", false], ["schema", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["title", "Iso8601Date"], ["type", "string"]]]], ["odict", ["name", "duration"], ["optional", false], ["schema", ["odict", ["minimum", 0], ["title", "PositiveInteger"], ["type", "integer"]]]], ["odict", ["name", "reportingPeriod"], ["optional", true], ["schema", ["odict", ["minimum", 0], ["title", "PositiveInteger"], ["type", "integer"]]]]]], ["name", "requestDrlcAction"]]]]], ["ephemeral", false], ["id", "demandResponseLoadControl"], ["name", "Demand Response Load Control"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "refresh"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["refresh", ["odict", ["arguments", []], ["name", "refresh"]]]]], ["ephemeral", false], ["id", "refresh"], ["name", "Refresh"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "refrigeration"], ["capability_info", ["odict", ["attributes", ["odict", ["defrost", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["off", "on"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["setter", "setDefrost"]]], ["rapidCooling", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["off", "on"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["setter", "setRapidCooling"]]], ["rapidFreezing", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["off", "on"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["setter", "setRapidFreezing"]]]]], ["commands", ["odict", ["setDefrost", ["odict", ["arguments", [["odict", ["name", "rapidCooling"], ["optional", false], ["schema", ["odict", ["enum", ["off", "on"]], ["type", "string"]]]]]], ["name", "setDefrost"]]], ["setRapidCooling", ["odict", ["arguments", [["odict", ["name", "rapidCooling"], ["optional", false], ["schema", ["odict", ["enum", ["off", "on"]], ["type", "string"]]]]]], ["name", "setRapidCooling"]]], ["setRapidFreezing", ["odict", ["arguments", [["odict", ["name", "rapidCooling"], ["optional", false], ["schema", ["odict", ["enum", ["off", "on"]], ["type", "string"]]]]]], ["name", "setRapidFreezing"]]]]], ["ephemeral", false], ["id", "refrigeration"], ["name", "Refrigeration"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "temperatureMeasurement"], ["capability_info", ["odict", ["attributes", ["odict", ["temperature", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["F", "C"]], ["type", "string"]]], ["value", ["odict", ["maximum", 10000], ["minimum", -460], ["title", "TemperatureValue"], ["type", "number"]]]]], ["required", ["value", "unit"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "temperatureMeasurement"], ["name", "Temperature Measurement"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "thermostatCoolingSetpoint"], ["capability_info", ["odict", ["attributes", ["odict", ["coolingSetpoint", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["F", "C"]], ["type", "string"]]], ["value", ["odict", ["maximum", 10000], ["minimum", -460], ["title", "TemperatureValue"], ["type", "number"]]]]], ["required", ["value", "unit"]], ["title", "Temperature"], ["type", "object"]]], ["setter", "setCoolingSetpoint"]]]]], ["commands", ["odict", ["setCoolingSetpoint", ["odict", ["arguments", [["odict", ["name", "setpoint"], ["optional", false], ["schema", ["odict", ["maximum", 10000], ["minimum", -460], ["title", "TemperatureValue"], ["type", "number"]]]]]], ["name", "setCoolingSetpoint"]]]]], ["ephemeral", false], ["id", "thermostatCoolingSetpoint"], ["name", "Thermostat Cooling Setpoint"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.deviceReportStateConfiguration"], ["capability_info", ["odict", ["attributes", ["odict", ["reportStatePeriod", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["disabled", "enabled"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["reportStateRealtime", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["duration", ["odict", ["max", 30], ["min", 10], ["type", "integer"]]], ["state", ["odict", ["enum", ["disabled", "enabled"]], ["type", "string"]]], ["unit", ["odict", ["default", "minute"], ["enum", ["minute"]], ["type", "string"]]]]], ["required", ["state"]], ["title", "ReportStateRealtime"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["reportStateRealtimePeriod", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["disabled", "enabled"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setReportStatePeriod", ["odict", ["arguments", [["odict", ["name", "value"], ["optional", false], ["schema", ["odict", ["enum", ["disabled", "enabled"]], ["type", "string"]]]]]], ["name", "setReportStatePeriod"]]], ["setReportStateRealtime", ["odict", ["arguments", [["odict", ["name", "value"], ["optional", false], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["duration", ["odict", ["max", 30], ["min", 10], ["type", "integer"]]], ["state", ["odict", ["enum", ["disabled", "enabled"]], ["type", "string"]]], ["unit", ["odict", ["default", "minute"], ["enum", ["minute"]], ["type", "string"]]]]], ["required", ["state"]], ["title", "ReportStateRealtime"], ["type", "object"]]]]]], ["name", "setReportStateRealtime"]]], ["setReportStateRealtimePeriod", ["odict", ["arguments", [["odict", ["name", "value"], ["optional", false], ["schema", ["odict", ["enum", ["disabled", "enabled"]], ["type", "string"]]]]]], ["name", "setReportStateRealtimePeriod"]]]]], ["ephemeral", false], ["id", "custom.deviceReportStateConfiguration"], ["name", "Device Report State Configuration"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.energyType"], ["capability_info", ["odict", ["attributes", ["odict", ["drMaxDuration", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "min"], ["enum", ["min"]], ["type", "string"]]], ["value", ["odict", ["maximum", 99999999], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["energySavingLevel", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["energySavingOperation", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["energySavingOperationSupport", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["energySavingSupport", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["energyType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedEnergySavingLevels", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "integer"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setEnergySavingLevel", ["odict", ["arguments", [["odict", ["name", "energySavingLevel"], ["optional", false], ["schema", ["odict", ["type", "integer"]]]]]], ["name", "setEnergySavingLevel"]]]]], ["ephemeral", false], ["id", "custom.energyType"], ["name", "Energy Type"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.fridgeMode"], ["capability_info", ["odict", ["attributes", ["odict", ["fridgeMode", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["fridgeModeValue", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.fridgeMode"], ["name", "Fridge Mode"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.disabledCapabilities"], ["capability_info", ["odict", ["attributes", ["odict", ["disabledCapabilities", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.disabledCapabilities"], ["name", "Disabled Capabilities"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.disabledComponents"], ["capability_info", ["odict", ["attributes", ["odict", ["disabledComponents", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.disabledComponents"], ["name", "Disabled Components"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.waterFilter"], ["capability_info", ["odict", ["attributes", ["odict", ["waterFilterCapacity", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["CC", "Cycle", "Gallon", "Hour", "Month"]], ["type", "string"]]], ["value", ["odict", ["type", "integer"]]]]], ["required", ["value", "unit"]], ["type", "object"]]]]], ["waterFilterLastResetDate", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["type", "string"]]]]], ["required", []], ["type", "object"]]]]], ["waterFilterResetType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["replaceable", "washable", "notresetable"]], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["waterFilterStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["normal", "replace", "wash", "notused"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["waterFilterUsage", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["max", 100], ["min", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["waterFilterUsageStep", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["max", 100], ["min", 1], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["resetWaterFilter", ["odict", ["arguments", []], ["name", "resetWaterFilter"]]]]], ["ephemeral", false], ["id", "custom.waterFilter"], ["name", "Water Filter"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.softwareUpdate"], ["capability_info", ["odict", ["attributes", ["odict", ["availableModules", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["lastUpdatedDate", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["newVersionAvailable", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["operatingState", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["none", "available", "preparing", "delayed", "inprogress", "checking", "completed"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["otnDUID", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["progress", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "%"], ["enum", ["%"]], ["type", "string"]]], ["value", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["targetModule", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["currentVersion", ["odict", ["type", "string"]]], ["moduleType", ["odict", ["enum", ["mainController", "display", "inverter", "indoorUnit", "outdoorUnit"]], ["type", "string"]]], ["newVersion", ["odict", ["type", "string"]]]]], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["agreeUpdate", ["odict", ["arguments", [["odict", ["name", "module"], ["optional", true], ["schema", ["odict", ["type", "string"]]]]]], ["name", "agreeUpdate"]]], ["disagreeUpdate", ["odict", ["arguments", [["odict", ["name", "module"], ["optional", true], ["schema", ["odict", ["type", "string"]]]]]], ["name", "disagreeUpdate"]]]]], ["ephemeral", false], ["id", "samsungce.softwareUpdate"], ["name", "Software Update"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.deviceIdentification"], ["capability_info", ["odict", ["attributes", ["odict", ["binaryId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["description", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["micomAssayCode", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["modelClassificationCode", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["pattern", "^([0-9a-fA-F]){32}$"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["modelName", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["serialNumber", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["serialNumberExtra", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungce.deviceIdentification"], ["name", "Device Identification"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.driverVersion"], ["capability_info", ["odict", ["attributes", ["odict", ["versionNumber", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "number"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungce.driverVersion"], ["name", "Driver Version"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.powerCool"], ["capability_info", ["odict", ["attributes", ["odict", ["activated", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["activate", ["odict", ["arguments", []], ["name", "activate"]]], ["deactivate", ["odict", ["arguments", []], ["name", "deactivate"]]]]], ["ephemeral", false], ["id", "samsungce.powerCool"], ["name", "Power Cool"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.powerFreeze"], ["capability_info", ["odict", ["attributes", ["odict", ["activated", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["activate", ["odict", ["arguments", []], ["name", "activate"]]], ["deactivate", ["odict", ["arguments", []], ["name", "deactivate"]]]]], ["ephemeral", false], ["id", "samsungce.powerFreeze"], ["name", "Power Freeze"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.viewInside"], ["capability_info", ["odict", ["attributes", ["odict", ["contents", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["additionalProperties", false], ["properties", ["odict", ["expiredTime", ["odict", ["pattern", "(^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$|^$)"], ["type", "string"]]], ["fileId", ["odict", ["type", "string"]]], ["mimeType", ["odict", ["pattern", "^[-\\w.]+/[-\\w.]+$"], ["type", "string"]]]]], ["required", ["fileId", "mimeType"]], ["type", "object"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["lastUpdatedTime", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["refresh", ["odict", ["arguments", [["odict", ["name", "fileId"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "refresh"]]], ["refreshAll", ["odict", ["arguments", []], ["name", "refreshAll"]]]]], ["ephemeral", false], ["id", "samsungce.viewInside"], ["name", "View Inside"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.runestoneHomeContext"], ["capability_info", ["odict", ["attributes", ["odict", ["supportedContexts", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["additionalProperties", false], ["properties", ["odict", ["context", ["odict", ["type", "string"]]], ["endTime", ["odict", ["default", "99:99"], ["pattern", "^(?:(?:[01]\\d|2[0-3]):[0-5]\\d|99:99)$"], ["type", "string"]]], ["place", ["odict", ["type", "string"]]], ["startTime", ["odict", ["default", "99:99"], ["pattern", "^(?:(?:[01]\\d|2[0-3]):[0-5]\\d|99:99)$"], ["type", "string"]]]]], ["required", ["context", "place", "startTime", "endTime"]], ["type", "object"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setContext", ["odict", ["arguments", [["odict", ["name", "context"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setContext"]]], ["setContextSnapshot", ["odict", ["arguments", [["odict", ["name", "contextSnapshot"], ["optional", false], ["schema", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"], ["uniqueItems", true]]]]]], ["name", "setContextSnapshot"]]], ["setRecentlyUsedApps", ["odict", ["arguments", [["odict", ["name", "recentlyUsedApps"], ["optional", false], ["schema", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"], ["uniqueItems", true]]]]]], ["name", "setRecentlyUsedApps"]]]]], ["ephemeral", false], ["id", "samsungce.runestoneHomeContext"], ["name", "Runestone Home Context"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "sec.diagnosticsInformation"], ["capability_info", ["odict", ["attributes", ["odict", ["dumpType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["file", "id"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["endpoint", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["NONE", "PIPER", "SSM"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["logType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["errCode", "dump"]], ["title", "logType"], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["minVersion", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["mnId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["protocolType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["ble_ocf", "wifi_https", "ble_stdk", "wifi_stdk"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["setupId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["signinPermission", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["immutable", "updating", "enabled", "disabled"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["tsId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "sec.diagnosticsInformation"], ["name", "Diagnostics Information"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "sec.wifiConfiguration"], ["capability_info", ["odict", ["attributes", ["odict", ["autoReconnection", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["minVersion", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["protocolType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["helper_hotspot", "ble_ocf", "ble_stdk"]], ["title", "protocolType"], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedAuthType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["OPEN", "WEP", "WPA-PSK", "WPA2-PSK", "EAP", "SAE", "OWE", "FT-PSK"]], ["title", "supportedAuthType"], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedWiFiFreq", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["2.4G", "5G", "6G"]], ["title", "supportedWiFiFreq"], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "sec.wifiConfiguration"], ["name", "Wifi configuration"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.fridgePantryInfo"], ["capability_info", ["odict", ["attributes", ["odict", ["name", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungce.fridgePantryInfo"], ["name", "Fridge Pantry Info"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "pantry-01"]], ["odict", ["capability_id", "samsungce.fridgePantryMode"], ["capability_info", ["odict", ["attributes", ["odict", ["mode", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["title", "Mode"], ["type", "object"]]]]], ["supportedModes", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["title", "Supported Modes"], ["type", "object"]]]]]]], ["commands", ["odict", ["setMode", ["odict", ["arguments", [["odict", ["name", "mode"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setMode"]]]]], ["ephemeral", false], ["id", "samsungce.fridgePantryMode"], ["name", "Fridge Pantry Mode"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "pantry-01"]], ["odict", ["capability_id", "samsungce.meatAging"], ["capability_info", ["odict", ["attributes", ["odict", ["status", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["additionalProperties", false], ["properties", ["odict", ["agingMethod", ["odict", ["enum", ["dry", "wet"]], ["type", "string"]]], ["agingPhase", ["odict", ["pattern", "^(\\d+|expired)$"], ["type", "string"]]], ["daysSinceButchery", ["odict", ["minimum", 0], ["type", "integer"]]], ["id", ["odict", ["minimum", 0], ["type", "integer"]]], ["meatType", ["odict", ["enum", ["sirloin", "striploin", "chuck", "others"]], ["type", "string"]]], ["phaseDaysInfo", ["odict", ["additionalProperties", false], ["patternProperties", ["odict", ["^\\d+$", ["odict", ["properties", ["odict", ["agingDays", ["odict", ["minimum", 0], ["type", "integer"]]]]], ["type", "object"]]]]], ["type", "object"]]], ["progressDay", ["odict", ["minimum", 0], ["type", "integer"]]], ["zones", ["odict", ["items", ["odict", ["minimum", 0], ["type", "integer"]]], ["minItems", 1], ["type", "array"], ["uniqueItems", true]]]]], ["required", ["id", "meatType", "progressDay", "daysSinceButchery", "zones", "agingMethod", "agingPhase", "phaseDaysInfo"]], ["type", "object"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedAgingMethods", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["dry", "wet"]], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedMeatTypes", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["sirloin", "striploin", "chuck", "others"]], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["zoneInfo", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["capacity", ["odict", ["minimum", 0], ["type", "integer"]]], ["columns", ["odict", ["minimum", 0], ["type", "integer"]]], ["rows", ["odict", ["minimum", 0], ["type", "integer"]]]]], ["required", ["rows", "columns", "capacity"]], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["addAging", ["odict", ["arguments", [["odict", ["name", "agingOption"], ["optional", false], ["schema", ["odict", ["properties", ["odict", ["agingMethod", ["odict", ["enum", ["dry", "wet"]], ["type", "string"]]], ["daysSinceButchery", ["odict", ["minimum", 0], ["type", "integer"]]], ["meatType", ["odict", ["enum", ["sirloin", "striploin", "chuck", "others"]], ["type", "string"]]], ["zones", ["odict", ["items", ["odict", ["minimum", 0], ["type", "integer"]]], ["minItems", 1], ["type", "array"], ["uniqueItems", true]]]]], ["required", ["daysSinceButchery", "meatType", "agingMethod", "zones"]], ["type", "object"]]]]]], ["name", "addAging"]]], ["cancelAging", ["odict", ["arguments", [["odict", ["name", "id"], ["optional", false], ["schema", ["odict", ["minimum", 0], ["type", "integer"]]]]]], ["name", "cancelAging"]]], ["updateAging", ["odict", ["arguments", [["odict", ["name", "id"], ["optional", false], ["schema", ["odict", ["minimum", 0], ["type", "integer"]]]], ["odict", ["name", "agingOption"], ["optional", false], ["schema", ["odict", ["properties", ["odict", ["agingMethod", ["odict", ["enum", ["dry", "wet"]], ["type", "string"]]], ["daysSinceButchery", ["odict", ["minimum", 0], ["type", "integer"]]], ["meatType", ["odict", ["enum", ["sirloin", "striploin", "chuck", "others"]], ["type", "string"]]], ["zones", ["odict", ["items", ["odict", ["minimum", 0], ["type", "integer"]]], ["minItems", 1], ["type", "array"], ["uniqueItems", true]]]]], ["required", ["daysSinceButchery", "meatType", "agingMethod", "zones"]], ["type", "object"]]]]]], ["name", "updateAging"]]]]], ["ephemeral", false], ["id", "samsungce.meatAging"], ["name", "Meat Aging"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "pantry-01"]], ["odict", ["capability_id", "samsungce.foodDefrost"], ["capability_info", ["odict", ["attributes", ["odict", ["foodType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["operationTime", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "min"], ["enum", ["min"]], ["type", "string"]]], ["value", ["odict", ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["remainingTime", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "min"], ["enum", ["min"]], ["type", "string"]]], ["value", ["odict", ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedOptions", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["patternProperties", ["odict", ["^.{1,32}$", ["odict", ["items", ["odict", ["additionalProperties", false], ["properties", ["odict", ["weight", ["odict", ["oneOf", [["odict", ["enum", ["auto"]], ["type", "string"]], ["odict", ["minimum", 0], ["type", "number"]]]]]]]], ["required", ["weight"]], ["type", "object"]]], ["type", "array"]]]]], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["weight", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "g"], ["enum", ["g"]], ["type", "string"]]], ["value", ["odict", ["oneOf", [["odict", ["enum", ["auto"]], ["type", "string"]], ["odict", ["minimum", 0], ["type", "number"]]]]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setDefrost", ["odict", ["arguments", [["odict", ["name", "foodType"], ["optional", false], ["schema", ["odict", ["type", "string"]]]], ["odict", ["name", "weight"], ["optional", false], ["schema", ["odict", ["oneOf", [["odict", ["enum", ["auto"]], ["type", "string"]], ["odict", ["minimum", 0], ["type", "number"]]]]]]]]], ["name", "setDefrost"]]]]], ["ephemeral", false], ["id", "samsungce.foodDefrost"], ["name", "Food Defrost"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "pantry-01"]], ["odict", ["capability_id", "custom.disabledCapabilities"], ["capability_info", ["odict", ["attributes", ["odict", ["disabledCapabilities", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.disabledCapabilities"], ["name", "Disabled Capabilities"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "pantry-01"]], ["odict", ["capability_id", "samsungce.weightMeasurement"], ["capability_info", ["odict", ["attributes", ["odict", ["weight", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["g", "kg"]], ["type", "string"]]], ["value", ["odict", ["type", "number"]]]]], ["required", ["value", "unit"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungce.weightMeasurement"], ["name", "Weight Measurement"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "scale-10"]], ["odict", ["capability_id", "samsungce.weightMeasurementCalibration"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["zeroCalibrate", ["odict", ["arguments", []], ["name", "zeroCalibrate"]]]]], ["ephemeral", false], ["id", "samsungce.weightMeasurementCalibration"], ["name", "Weight Measurement Calibration"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "scale-10"]], ["odict", ["capability_id", "samsungce.connectionState"], ["capability_info", ["odict", ["attributes", ["odict", ["connectionState", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["connected", "disconnected"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungce.connectionState"], ["name", "Connection State"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "scale-10"]], ["odict", ["capability_id", "samsungce.scaleSettings"], ["capability_info", ["odict", ["attributes", ["odict", ["enabled", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungce.scaleSettings"], ["name", "Scale Settings"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "scale-10"]], ["odict", ["capability_id", "custom.disabledCapabilities"], ["capability_info", ["odict", ["attributes", ["odict", ["disabledCapabilities", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.disabledCapabilities"], ["name", "Disabled Capabilities"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "scale-10"]], ["odict", ["capability_id", "samsungce.weightMeasurement"], ["capability_info", ["odict", ["attributes", ["odict", ["weight", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["g", "kg"]], ["type", "string"]]], ["value", ["odict", ["type", "number"]]]]], ["required", ["value", "unit"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungce.weightMeasurement"], ["name", "Weight Measurement"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "scale-11"]], ["odict", ["capability_id", "custom.disabledCapabilities"], ["capability_info", ["odict", ["attributes", ["odict", ["disabledCapabilities", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.disabledCapabilities"], ["name", "Disabled Capabilities"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "scale-11"]]]], ["571f0327-6507-4674-b9cf-fe68f7d9522d", [["odict", ["capability_id", "switch"], ["capability_info", ["odict", ["attributes", ["odict", ["switch", ["odict", ["enumCommands", [["odict", ["command", "on"], ["value", "on"]], ["odict", ["command", "off"], ["value", "off"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["on", "off"]], ["title", "SwitchState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["off", ["odict", ["arguments", []], ["name", "off"]]], ["on", ["odict", ["arguments", []], ["name", "on"]]]]], ["ephemeral", false], ["id", "switch"], ["name", "Switch"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "switchLevel"], ["capability_info", ["odict", ["attributes", ["odict", ["level", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "%"], ["enum", ["%"]], ["type", "string"]]], ["value", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["title", "IntegerPercent"], ["type", "object"]]], ["setter", "setLevel"]]]]], ["commands", ["odict", ["setLevel", ["odict", ["arguments", [["odict", ["name", "level"], ["optional", false], ["schema", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]], ["odict", ["name", "rate"], ["optional", true], ["schema", ["odict", ["minimum", 0], ["title", "PositiveInteger"], ["type", "integer"]]]]]], ["name", "setLevel"]]]]], ["ephemeral", false], ["id", "switchLevel"], ["name", "Switch Level"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "colorTemperature"], ["capability_info", ["odict", ["attributes", ["odict", ["colorTemperature", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "K"], ["enum", ["K"]], ["type", "string"]]], ["value", ["odict", ["maximum", 30000], ["minimum", 1], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]], ["setter", "setColorTemperature"]]]]], ["commands", ["odict", ["setColorTemperature", ["odict", ["arguments", [["odict", ["name", "temperature"], ["optional", false], ["schema", ["odict", ["maximum", 30000], ["minimum", 1], ["type", "integer"]]]]]], ["name", "setColorTemperature"]]]]], ["ephemeral", false], ["id", "colorTemperature"], ["name", "Color Temperature"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "colorControl"], ["capability_info", ["odict", ["attributes", ["odict", ["color", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["setter", "setColor"]]], ["hue", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]], ["required", []], ["type", "object"]]], ["setter", "setHue"]]], ["saturation", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]], ["required", []], ["type", "object"]]], ["setter", "setSaturation"]]]]], ["commands", ["odict", ["setColor", ["odict", ["arguments", [["odict", ["name", "color"], ["optional", false], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["hex", ["odict", ["maxLength", 7], ["type", "string"]]], ["hue", ["odict", ["type", "number"]]], ["level", ["odict", ["type", "integer"]]], ["saturation", ["odict", ["type", "number"]]], ["switch", ["odict", ["maxLength", 3], ["type", "string"]]]]], ["title", "COLOR_MAP"], ["type", "object"]]]]]], ["name", "setColor"]]], ["setHue", ["odict", ["arguments", [["odict", ["name", "hue"], ["optional", false], ["schema", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]]], ["name", "setHue"]]], ["setSaturation", ["odict", ["arguments", [["odict", ["name", "saturation"], ["optional", false], ["schema", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]]], ["name", "setSaturation"]]]]], ["ephemeral", false], ["id", "colorControl"], ["name", "Color Control"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "healthCheck"], ["capability_info", ["odict", ["attributes", ["odict", ["DeviceWatch-DeviceStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["reason", ["odict", ["enum", ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["value", ["odict", ["enum", ["online", "offline"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["DeviceWatch-Enroll", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["hubHardwareId", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]], ["protocol", ["odict", ["enum", ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]], ["title", "DeviceHealthProtocol"], ["type", "string"]]], ["scheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]]]], ["title", "DeviceHealthEnroll"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["checkInterval", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["hubHardwareId", ["odict", ["pattern", "^[0-9a-fA-F]{4}$"], ["type", "string"]]], ["offlinePingable", ["odict", ["enum", ["0", "1"]], ["type", "string"]]], ["protocol", ["odict", ["enum", ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]], ["title", "DeviceHealthProtocol"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["unit", ["odict", ["default", "s"], ["enum", ["s"]], ["type", "string"]]], ["value", ["odict", ["maximum", 604800], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["healthStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["reason", ["odict", ["enum", ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["value", ["odict", ["enum", ["online", "offline"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["ping", ["odict", ["arguments", []], ["name", "ping"]]]]], ["ephemeral", false], ["id", "healthCheck"], ["name", "Health Check"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]]]], ["67ba495a-7982-42f0-a24a-0b1ffcb9e041", [["odict", ["capability_id", "videoStream"], ["capability_info", ["odict", ["attributes", ["odict", ["stream", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["title", "JsonObject"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["startStream", ["odict", ["arguments", []], ["name", "startStream"]]], ["stopStream", ["odict", ["arguments", []], ["name", "stopStream"]]]]], ["ephemeral", false], ["id", "videoStream"], ["name", "Video Stream"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "motionSensor"], ["capability_info", ["odict", ["attributes", ["odict", ["motion", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["active", "inactive"]], ["title", "ActivityState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "motionSensor"], ["name", "Motion Sensor"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "switch"], ["capability_info", ["odict", ["attributes", ["odict", ["switch", ["odict", ["enumCommands", [["odict", ["command", "on"], ["value", "on"]], ["odict", ["command", "off"], ["value", "off"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["on", "off"]], ["title", "SwitchState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["off", ["odict", ["arguments", []], ["name", "off"]]], ["on", ["odict", ["arguments", []], ["name", "on"]]]]], ["ephemeral", false], ["id", "switch"], ["name", "Switch"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "healthCheck"], ["capability_info", ["odict", ["attributes", ["odict", ["DeviceWatch-DeviceStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["reason", ["odict", ["enum", ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["value", ["odict", ["enum", ["online", "offline"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["DeviceWatch-Enroll", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["hubHardwareId", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]], ["protocol", ["odict", ["enum", ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]], ["title", "DeviceHealthProtocol"], ["type", "string"]]], ["scheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]]]], ["title", "DeviceHealthEnroll"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["checkInterval", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["hubHardwareId", ["odict", ["pattern", "^[0-9a-fA-F]{4}$"], ["type", "string"]]], ["offlinePingable", ["odict", ["enum", ["0", "1"]], ["type", "string"]]], ["protocol", ["odict", ["enum", ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]], ["title", "DeviceHealthProtocol"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["unit", ["odict", ["default", "s"], ["enum", ["s"]], ["type", "string"]]], ["value", ["odict", ["maximum", 604800], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["healthStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["reason", ["odict", ["enum", ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["value", ["odict", ["enum", ["online", "offline"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["ping", ["odict", ["arguments", []], ["name", "ping"]]]]], ["ephemeral", false], ["id", "healthCheck"], ["name", "Health Check"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "videoCapture"], ["capability_info", ["odict", ["attributes", ["odict", ["clip", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["title", "JsonObject"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["stream", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["title", "JsonObject"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["capture", ["odict", ["arguments", [["odict", ["name", "startTime"], ["optional", false], ["schema", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["title", "Iso8601Date"], ["type", "string"]]]], ["odict", ["name", "captureTime"], ["optional", false], ["schema", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["title", "Iso8601Date"], ["type", "string"]]]], ["odict", ["name", "endTime"], ["optional", false], ["schema", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["title", "Iso8601Date"], ["type", "string"]]]], ["odict", ["name", "correlationId"], ["optional", true], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]], ["odict", ["name", "reason"], ["optional", true], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]]], ["name", "capture"]]]]], ["ephemeral", false], ["id", "videoCapture"], ["name", "Video Capture"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "audioStream"], ["capability_info", ["odict", ["attributes", ["odict", ["uri", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["format", "uri"], ["title", "URI"], ["type", "string"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict", ["startAudio", ["odict", ["arguments", []], ["name", "startAudio"]]], ["stopAudio", ["odict", ["arguments", []], ["name", "stopAudio"]]]]], ["ephemeral", false], ["id", "audioStream"], ["name", "Audio Stream"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "imageCapture"], ["capability_info", ["odict", ["attributes", ["odict", ["captureTime", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["title", "Iso8601Date"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["encrypted", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["image", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["pattern", "^(https?):\\/\\/((?:[a-zA-Z0-9.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-zA-Z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?$"], ["title", "URL"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]], ["setter", "take"]]]]], ["commands", ["odict", ["take", ["odict", ["arguments", [["odict", ["name", "correlationId"], ["optional", true], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]], ["odict", ["name", "reason"], ["optional", true], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]]], ["name", "take"]]]]], ["ephemeral", false], ["id", "imageCapture"], ["name", "Image Capture"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "objectDetection"], ["capability_info", ["odict", ["attributes", ["odict", ["detected", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["title", "JsonObject"], ["type", "object"]]], ["qty", ["odict", ["minimum", 0], ["title", "PositiveInteger"], ["type", "integer"]]], ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "ObjectDetectionValue"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedValues", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "objectDetection"], ["name", "Object Detection"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "audioVolume"], ["capability_info", ["odict", ["attributes", ["odict", ["volume", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "%"], ["enum", ["%"]], ["type", "string"]]], ["value", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["title", "IntegerPercent"], ["type", "object"]]], ["setter", "setVolume"]]]]], ["commands", ["odict", ["setVolume", ["odict", ["arguments", [["odict", ["name", "volume"], ["optional", false], ["schema", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]]]], ["name", "setVolume"]]], ["volumeDown", ["odict", ["arguments", []], ["name", "volumeDown"]]], ["volumeUp", ["odict", ["arguments", []], ["name", "volumeUp"]]]]], ["ephemeral", false], ["id", "audioVolume"], ["name", "Audio Volume"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "signalStrength"], ["capability_info", ["odict", ["attributes", ["odict", ["lqi", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maximum", 255], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["rssi", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "dBm"], ["enum", ["dBm"]], ["type", "string"]]], ["value", ["odict", ["maximum", 0], ["minimum", -200], ["type", "number"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "signalStrength"], ["name", "Signal Strength"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "soundSensor"], ["capability_info", ["odict", ["attributes", ["odict", ["sound", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["detected", "not detected"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "soundSensor"], ["name", "Sound Sensor"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]]]], ["6c645f61-0b82-235f-e476-8a6afc0e73dc", [["odict", ["capability_id", "execute"], ["capability_info", ["odict", ["attributes", ["odict", ["data", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", true], ["required", []], ["type", "object"]]], ["value", ["odict", ["title", "JsonObject"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["execute", ["odict", ["arguments", [["odict", ["name", "command"], ["optional", false], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]], ["odict", ["name", "args"], ["optional", true], ["schema", ["odict", ["title", "JsonObject"], ["type", "object"]]]]]], ["name", "execute"]]]]], ["ephemeral", false], ["id", "execute"], ["name", "Execute"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "ocf"], ["capability_info", ["odict", ["attributes", ["odict", ["di", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["dmv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["icv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mndt", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnfv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnhw", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnml", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnmn", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnmo", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnos", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnpv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnsl", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["n", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["pi", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["st", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["vid", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]]]], ["commands", ["odict", ["postOcfCommand", ["odict", ["arguments", [["odict", ["name", "href"], ["optional", false], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]], ["odict", ["name", "value"], ["optional", false], ["schema", ["odict", ["title", "JsonObject"], ["type", "object"]]]]]], ["name", "postOcfCommand"]]]]], ["ephemeral", false], ["id", "ocf"], ["name", "Ocf"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "powerConsumptionReport"], ["capability_info", ["odict", ["attributes", ["odict", ["powerConsumption", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["deltaEnergy", ["odict", ["type", "number"]]], ["end", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["title", "Iso8601Date"], ["type", "string"]]], ["energy", ["odict", ["type", "number"]]], ["energySaved", ["odict", ["type", "number"]]], ["persistedEnergy", ["odict", ["type", "number"]]], ["persistedSavedEnergy", ["odict", ["type", "number"]]], ["power", ["odict", ["type", "number"]]], ["powerEnergy", ["odict", ["type", "number"]]], ["start", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["title", "Iso8601Date"], ["type", "string"]]]]], ["title", "PowerConsumption"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "powerConsumptionReport"], ["name", "Power Consumption Report"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "refresh"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["refresh", ["odict", ["arguments", []], ["name", "refresh"]]]]], ["ephemeral", false], ["id", "refresh"], ["name", "Refresh"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "remoteControlStatus"], ["capability_info", ["odict", ["attributes", ["odict", ["remoteControlEnabled", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["false", "true"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "remoteControlStatus"], ["name", "Remote Control Status"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "switch"], ["capability_info", ["odict", ["attributes", ["odict", ["switch", ["odict", ["enumCommands", [["odict", ["command", "on"], ["value", "on"]], ["odict", ["command", "off"], ["value", "off"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["on", "off"]], ["title", "SwitchState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["off", ["odict", ["arguments", []], ["name", "off"]]], ["on", ["odict", ["arguments", []], ["name", "on"]]]]], ["ephemeral", false], ["id", "switch"], ["name", "Switch"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "demandResponseLoadControl"], ["capability_info", ["odict", ["attributes", ["odict", ["drlcStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["drlcLevel", ["odict", ["maximum", 4], ["minimum", -1], ["title", "DrlcLevel"], ["type", "integer"]]], ["drlcType", ["odict", ["maximum", 1], ["minimum", 0], ["title", "DrlcType"], ["type", "integer"]]], ["duration", ["odict", ["minimum", 0], ["title", "PositiveInteger"], ["type", "integer"]]], ["override", ["odict", ["type", "boolean"]]], ["start", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["title", "Iso8601Date"], ["type", "string"]]]]], ["title", "DemandResponseLoadControlStatus"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["overrideDrlcAction", ["odict", ["arguments", [["odict", ["name", "value"], ["optional", false], ["schema", ["odict", ["type", "boolean"]]]]]], ["name", "overrideDrlcAction"]]], ["requestDrlcAction", ["odict", ["arguments", [["odict", ["name", "drlcType"], ["optional", false], ["schema", ["odict", ["maximum", 1], ["minimum", 0], ["title", "DrlcType"], ["type", "integer"]]]], ["odict", ["name", "drlcLevel"], ["optional", false], ["schema", ["odict", ["maximum", 4], ["minimum", -1], ["title", "DrlcLevel"], ["type", "integer"]]]], ["odict", ["name", "start"], ["optional", false], ["schema", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["title", "Iso8601Date"], ["type", "string"]]]], ["odict", ["name", "duration"], ["optional", false], ["schema", ["odict", ["minimum", 0], ["title", "PositiveInteger"], ["type", "integer"]]]], ["odict", ["name", "reportingPeriod"], ["optional", true], ["schema", ["odict", ["minimum", 0], ["title", "PositiveInteger"], ["type", "integer"]]]]]], ["name", "requestDrlcAction"]]]]], ["ephemeral", false], ["id", "demandResponseLoadControl"], ["name", "Demand Response Load Control"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "dishwasherOperatingState"], ["capability_info", ["odict", ["attributes", ["odict", ["completionTime", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["title", "Iso8601Date"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["dishwasherJobState", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["airwash", "cooling", "drying", "finish", "preDrain", "prewash", "rinse", "spin", "unknown", "wash", "wrinklePrevent"]], ["title", "DishwasherJobState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["machineState", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["pause", "run", "stop"]], ["title", "MachineState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]], ["setter", "setMachineState"]]], ["supportedMachineStates", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["pause", "run", "stop"]], ["title", "MachineState"], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setMachineState", ["odict", ["arguments", [["odict", ["name", "state"], ["optional", false], ["schema", ["odict", ["enum", ["pause", "run", "stop"]], ["title", "MachineState"], ["type", "string"]]]]]], ["name", "setMachineState"]]]]], ["ephemeral", false], ["id", "dishwasherOperatingState"], ["name", "Dishwasher Operating State"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.disabledCapabilities"], ["capability_info", ["odict", ["attributes", ["odict", ["disabledCapabilities", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.disabledCapabilities"], ["name", "Disabled Capabilities"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.dishwasherOperatingProgress"], ["capability_info", ["odict", ["attributes", ["odict", ["dishwasherOperatingProgress", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["none", "delaywash", "weightsensing", "prewash", "wash", "rinse", "spin", "sud", "drying", "airwash", "cooling", "wrinkleprevent", "finish", "waitend", "predrain", "sanitizing", "autoreleasedrying"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.dishwasherOperatingProgress"], ["name", "Dishwasher Operating Progress"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.dishwasherOperatingPercentage"], ["capability_info", ["odict", ["attributes", ["odict", ["dishwasherOperatingPercentage", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.dishwasherOperatingPercentage"], ["name", "Dishwasher Operating Percentage"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.dishwasherDelayStartTime"], ["capability_info", ["odict", ["attributes", ["odict", ["dishwasherDelayStartTime", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["pattern", "^((([0-1][0-9]|2[0-3]):([0-5][0-9]):00)|(24:00:00))$"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setDishwasherDelayStartTime", ["odict", ["arguments", [["odict", ["name", "dishwasherDelayStartTime"], ["optional", false], ["schema", ["odict", ["pattern", "^((([0-1][0-9]|2[0-3]):([0-5][0-9]):00)|(24:00:00))$"], ["type", "string"]]]]]], ["name", "setDishwasherDelayStartTime"]]]]], ["ephemeral", false], ["id", "custom.dishwasherDelayStartTime"], ["name", "Dishwasher Delay Start Time"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.energyType"], ["capability_info", ["odict", ["attributes", ["odict", ["drMaxDuration", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "min"], ["enum", ["min"]], ["type", "string"]]], ["value", ["odict", ["maximum", 99999999], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["energySavingLevel", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["energySavingOperation", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["energySavingOperationSupport", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["energySavingSupport", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["energyType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedEnergySavingLevels", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "integer"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setEnergySavingLevel", ["odict", ["arguments", [["odict", ["name", "energySavingLevel"], ["optional", false], ["schema", ["odict", ["type", "integer"]]]]]], ["name", "setEnergySavingLevel"]]]]], ["ephemeral", false], ["id", "custom.energyType"], ["name", "Energy Type"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.supportedOptions"], ["capability_info", ["odict", ["attributes", ["odict", ["referenceTable", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["id", ["odict", ["type", "string"]]]]], ["type", "object"]]]]], ["required", []], ["type", "object"]]]]], ["supportedCourses", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.supportedOptions"], ["name", "Supported Options"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.waterFilter"], ["capability_info", ["odict", ["attributes", ["odict", ["waterFilterCapacity", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["CC", "Cycle", "Gallon", "Hour", "Month"]], ["type", "string"]]], ["value", ["odict", ["type", "integer"]]]]], ["required", ["value", "unit"]], ["type", "object"]]]]], ["waterFilterLastResetDate", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["type", "string"]]]]], ["required", []], ["type", "object"]]]]], ["waterFilterResetType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["replaceable", "washable", "notresetable"]], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["waterFilterStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["normal", "replace", "wash", "notused"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["waterFilterUsage", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["max", 100], ["min", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["waterFilterUsageStep", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["max", 100], ["min", 1], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["resetWaterFilter", ["odict", ["arguments", []], ["name", "resetWaterFilter"]]]]], ["ephemeral", false], ["id", "custom.waterFilter"], ["name", "Water Filter"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.deviceIdentification"], ["capability_info", ["odict", ["attributes", ["odict", ["binaryId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["description", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["micomAssayCode", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["modelClassificationCode", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["pattern", "^([0-9a-fA-F]){32}$"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["modelName", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["serialNumber", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["serialNumberExtra", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungce.deviceIdentification"], ["name", "Device Identification"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.dishwasherJobState"], ["capability_info", ["odict", ["attributes", ["odict", ["dishwasherJobState", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["none", "delayWashing", "preWashing", "washing", "rinsing", "drying", "cooling", "draining", "finished", "preDrain", "sanitizing", "autoReleaseDrying"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["scheduledJobs", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["properties", ["odict", ["jobName", ["odict", ["enum", ["none", "delayWashing", "preWashing", "washing", "rinsing", "drying", "cooling", "draining", "finished", "preDrain", "sanitizing", "autoReleaseDrying"]], ["type", "string"]]], ["timeInSec", ["odict", ["type", "integer"]]]]], ["required", ["jobName", "timeInSec"]], ["type", "object"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungce.dishwasherJobState"], ["name", "Dishwasher Job State"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.dishwasherWashingCourse"], ["capability_info", ["odict", ["attributes", ["odict", ["customCourseCandidates", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"]], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedCourses", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"]], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["washingCourse", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]], ["setter", "setWashingCourse"]]]]], ["commands", ["odict", ["setCustomCourse", ["odict", ["arguments", [["odict", ["name", "course"], ["optional", false], ["schema", ["odict", ["enum", ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"]], ["type", "string"]]]]]], ["name", "setCustomCourse"]]], ["setWashingCourse", ["odict", ["arguments", [["odict", ["name", "course"], ["optional", false], ["schema", ["odict", ["enum", ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"]], ["type", "string"]]]]]], ["name", "setWashingCourse"]]], ["startWashingCourse", ["odict", ["arguments", [["odict", ["name", "course"], ["optional", false], ["schema", ["odict", ["enum", ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"]], ["type", "string"]]]]]], ["name", "startWashingCourse"]]], ["startWashingCourseWithOptions", ["odict", ["arguments", [["odict", ["name", "course"], ["optional", false], ["schema", ["odict", ["enum", ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"]], ["type", "string"]]]], ["odict", ["name", "options"], ["optional", false], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["addRinse", ["odict", ["type", "boolean"]]], ["dryPlus", ["odict", ["type", "boolean"]]], ["highTempWash", ["odict", ["type", "boolean"]]], ["hotAirDry", ["odict", ["type", "boolean"]]], ["rinsePlus", ["odict", ["type", "boolean"]]], ["sanitize", ["odict", ["type", "boolean"]]], ["sanitizingWash", ["odict", ["type", "boolean"]]], ["selectedZone", ["odict", ["enum", ["none", "lower", "upper", "all"]], ["type", "string"]]], ["speedBooster", ["odict", ["type", "boolean"]]], ["steamSoak", ["odict", ["type", "boolean"]]], ["stormWash", ["odict", ["type", "boolean"]]], ["zoneBooster", ["odict", ["enum", ["none", "left", "right", "all"]], ["type", "string"]]]]], ["type", "object"]]]]]], ["name", "startWashingCourseWithOptions"]]]]], ["ephemeral", false], ["id", "samsungce.dishwasherWashingCourse"], ["name", "Dishwasher Washing Course"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.dishwasherWashingCourseDetails"], ["capability_info", ["odict", ["attributes", ["odict", ["energyUsageMax", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["predefinedCourses", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["properties", ["odict", ["courseName", ["odict", ["enum", ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"]], ["type", "string"]]], ["energyUsage", ["odict", ["minimum", 1], ["type", "number"]]], ["expectedTime", ["odict", ["properties", ["odict", ["time", ["odict", ["type", "integer"]]], ["unit", ["odict", ["enum", ["hour", "min", "sec"]], ["type", "string"]]]]], ["required", ["time"]], ["type", "object"]]], ["options", ["odict", ["properties", ["odict", ["addRinse", ["odict", ["properties", ["odict", ["default", ["odict", ["type", "boolean"]]], ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]]]], ["required", ["default", "settable"]], ["type", "object"]]], ["dryPlus", ["odict", ["properties", ["odict", ["default", ["odict", ["type", "boolean"]]], ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]]]], ["required", ["default", "settable"]], ["type", "object"]]], ["highTempWash", ["odict", ["properties", ["odict", ["default", ["odict", ["type", "boolean"]]], ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]]]], ["required", ["default", "settable"]], ["type", "object"]]], ["hotAirDry", ["odict", ["properties", ["odict", ["default", ["odict", ["type", "boolean"]]], ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]]]], ["required", ["default", "settable"]], ["type", "object"]]], ["rinsePlus", ["odict", ["properties", ["odict", ["default", ["odict", ["type", "boolean"]]], ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]]]], ["required", ["default", "settable"]], ["type", "object"]]], ["sanitize", ["odict", ["properties", ["odict", ["default", ["odict", ["type", "boolean"]]], ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]]]], ["required", ["default", "settable"]], ["type", "object"]]], ["sanitizingWash", ["odict", ["properties", ["odict", ["default", ["odict", ["type", "boolean"]]], ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]]]], ["required", ["default", "settable"]], ["type", "object"]]], ["selectedZone", ["odict", ["properties", ["odict", ["default", ["odict", ["type", "string"]]], ["settable", ["odict", ["items", ["odict", ["enum", ["none", "lower", "upper", "all"]], ["type", "string"]]], ["type", "array"]]]]], ["required", ["default", "settable"]], ["type", "object"]]], ["speedBooster", ["odict", ["properties", ["odict", ["default", ["odict", ["type", "boolean"]]], ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]]]], ["required", ["default", "settable"]], ["type", "object"]]], ["steamSoak", ["odict", ["properties", ["odict", ["default", ["odict", ["type", "boolean"]]], ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]]]], ["required", ["default", "settable"]], ["type", "object"]]], ["stormWash", ["odict", ["properties", ["odict", ["default", ["odict", ["type", "boolean"]]], ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]]]], ["required", ["default", "settable"]], ["type", "object"]]], ["zoneBooster", ["odict", ["properties", ["odict", ["default", ["odict", ["type", "string"]]], ["settable", ["odict", ["items", ["odict", ["enum", ["none", "left", "right", "all"]], ["type", "string"]]], ["type", "array"]]]]], ["required", ["default", "settable"]], ["type", "object"]]]]], ["type", "object"]]], ["temperature", ["odict", ["properties", ["odict", ["max", ["odict", ["type", "integer"]]], ["min", ["odict", ["type", "integer"]]], ["unit", ["odict", ["enum", ["C", "F"]], ["type", "string"]]]]], ["required", ["min", "max"]], ["type", "object"]]], ["waterUsage", ["odict", ["minimum", 0], ["type", "number"]]]]], ["required", ["courseName", "energyUsage", "waterUsage", "expectedTime", "options"]], ["type", "object"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["waterUsageMax", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungce.dishwasherWashingCourseDetails"], ["name", "Dishwasher Washing Course Details"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.dishwasherOperation"], ["capability_info", ["odict", ["attributes", ["odict", ["operatingState", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["idle", "ready", "running", "paused"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]], ["setter", "setOperatingState"]]], ["operationTime", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["hour", "min", "sec"]], ["type", "string"]]], ["value", ["odict", ["type", "number"]]]]], ["required", ["value", "unit"]], ["type", "object"]]]]], ["progressPercentage", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "number"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["remainingTime", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["hour", "min", "sec"]], ["type", "string"]]], ["value", ["odict", ["type", "number"]]]]], ["required", ["value", "unit"]], ["type", "object"]]]]], ["remainingTimeStr", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["pattern", "^[0-2]{0,1}[0-9]:[0-5][0-9]$"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["reservable", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["default", false], ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedOperatingState", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["idle", "ready", "running", "paused"]], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["timeLeftToStart", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["enum", ["hour", "min", "sec"]], ["type", "string"]]], ["value", ["odict", ["type", "number"]]]]], ["required", ["value", "unit"]], ["type", "object"]]]]]]], ["commands", ["odict", ["cancel", ["odict", ["arguments", [["odict", ["name", "drain"], ["optional", true], ["schema", ["odict", ["type", "boolean"]]]]]], ["name", "cancel"]]], ["pause", ["odict", ["arguments", []], ["name", "pause"]]], ["resume", ["odict", ["arguments", []], ["name", "resume"]]], ["setOperatingState", ["odict", ["arguments", [["odict", ["name", "operatingState"], ["optional", false], ["schema", ["odict", ["enum", ["running", "paused", "ready"]], ["type", "string"]]]]]], ["name", "setOperatingState"]]], ["start", ["odict", ["arguments", [["odict", ["name", "option"], ["optional", true], ["schema", ["odict", ["type", "object"]]]]]], ["name", "start"]]], ["startLater", ["odict", ["arguments", [["odict", ["name", "delay"], ["optional", false], ["schema", ["odict", ["type", "number"]]]]]], ["name", "startLater"]]]]], ["ephemeral", false], ["id", "samsungce.dishwasherOperation"], ["name", "Dishwasher Operation"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.dishwasherWashingOptions"], ["capability_info", ["odict", ["attributes", ["odict", ["addRinse", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]], ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value", "settable"]], ["type", "object"]]]]], ["required", []], ["type", "object"]]]]], ["dryPlus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]], ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value", "settable"]], ["type", "object"]]]]], ["required", []], ["type", "object"]]]]], ["highTempWash", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]], ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value", "settable"]], ["type", "object"]]]]], ["required", []], ["type", "object"]]]]], ["hotAirDry", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]], ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value", "settable"]], ["type", "object"]]]]], ["required", []], ["type", "object"]]]]], ["rinsePlus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]], ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value", "settable"]], ["type", "object"]]]]], ["required", []], ["type", "object"]]]]], ["sanitize", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]], ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value", "settable"]], ["type", "object"]]]]], ["required", []], ["type", "object"]]]]], ["sanitizingWash", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]], ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value", "settable"]], ["type", "object"]]]]], ["required", []], ["type", "object"]]]]], ["selectedZone", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["settable", ["odict", ["items", ["odict", ["enum", ["none", "lower", "upper", "all"]], ["type", "string"]]], ["type", "array"]]], ["value", ["odict", ["enum", ["none", "lower", "upper", "all"]], ["type", "string"]]]]], ["required", ["value", "settable"]], ["type", "object"]]]]], ["required", []], ["type", "object"]]]]], ["speedBooster", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]], ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value", "settable"]], ["type", "object"]]]]], ["required", []], ["type", "object"]]]]], ["steamSoak", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]], ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value", "settable"]], ["type", "object"]]]]], ["required", []], ["type", "object"]]]]], ["stormWash", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["settable", ["odict", ["items", ["odict", ["type", "boolean"]]], ["type", "array"]]], ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value", "settable"]], ["type", "object"]]]]], ["required", []], ["type", "object"]]]]], ["supportedList", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["selectedZone", "zoneBooster", "speedBooster", "sanitize", "highTempWash", "steamSoak", "addRinse", "dryPlus", "stormWash", "sanitizingWash", "rinsePlus", "hotAirDry"]], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["zoneBooster", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["settable", ["odict", ["items", ["odict", ["enum", ["none", "left", "right", "all"]], ["type", "string"]]], ["type", "array"]]], ["value", ["odict", ["enum", ["none", "left", "right", "all"]], ["type", "string"]]]]], ["required", ["value", "settable"]], ["type", "object"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict", ["setAddRinse", ["odict", ["arguments", [["odict", ["name", "addRinse"], ["optional", false], ["schema", ["odict", ["type", "boolean"]]]]]], ["name", "setAddRinse"]]], ["setDryPlus", ["odict", ["arguments", [["odict", ["name", "dryPlus"], ["optional", false], ["schema", ["odict", ["type", "boolean"]]]]]], ["name", "setDryPlus"]]], ["setHighTempWash", ["odict", ["arguments", [["odict", ["name", "highTempWash"], ["optional", false], ["schema", ["odict", ["type", "boolean"]]]]]], ["name", "setHighTempWash"]]], ["setHotAirDry", ["odict", ["arguments", [["odict", ["name", "hotAirDry"], ["optional", false], ["schema", ["odict", ["type", "boolean"]]]]]], ["name", "setHotAirDry"]]], ["setOptions", ["odict", ["arguments", [["odict", ["name", "options"], ["optional", false], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["addRinse", ["odict", ["type", "boolean"]]], ["dryPlus", ["odict", ["type", "boolean"]]], ["highTempWash", ["odict", ["type", "boolean"]]], ["hotAirDry", ["odict", ["type", "boolean"]]], ["rinsePlus", ["odict", ["type", "boolean"]]], ["sanitize", ["odict", ["type", "boolean"]]], ["sanitizingWash", ["odict", ["type", "boolean"]]], ["selectedZone", ["odict", ["enum", ["none", "lower", "upper", "all"]], ["type", "string"]]], ["speedBooster", ["odict", ["type", "boolean"]]], ["steamSoak", ["odict", ["type", "boolean"]]], ["stormWash", ["odict", ["type", "boolean"]]], ["zoneBooster", ["odict", ["enum", ["none", "left", "right", "all"]], ["type", "string"]]]]], ["type", "object"]]]]]], ["name", "setOptions"]]], ["setRinsePlus", ["odict", ["arguments", [["odict", ["name", "rinsePlus"], ["optional", false], ["schema", ["odict", ["type", "boolean"]]]]]], ["name", "setRinsePlus"]]], ["setSanitize", ["odict", ["arguments", [["odict", ["name", "sanitize"], ["optional", false], ["schema", ["odict", ["type", "boolean"]]]]]], ["name", "setSanitize"]]], ["setSanitizingWash", ["odict", ["arguments", [["odict", ["name", "sanitizingWash"], ["optional", false], ["schema", ["odict", ["type", "boolean"]]]]]], ["name", "setSanitizingWash"]]], ["setSelectedZone", ["odict", ["arguments", [["odict", ["name", "selectedZone"], ["optional", false], ["schema", ["odict", ["enum", ["none", "lower", "upper", "all"]], ["type", "string"]]]]]], ["name", "setSelectedZone"]]], ["setSpeedBooster", ["odict", ["arguments", [["odict", ["name", "speedBooster"], ["optional", false], ["schema", ["odict", ["type", "boolean"]]]]]], ["name", "setSpeedBooster"]]], ["setSteamSoak", ["odict", ["arguments", [["odict", ["name", "steamSoak"], ["optional", false], ["schema", ["odict", ["type", "boolean"]]]]]], ["name", "setSteamSoak"]]], ["setStormWash", ["odict", ["arguments", [["odict", ["name", "stormWash"], ["optional", false], ["schema", ["odict", ["type", "boolean"]]]]]], ["name", "setStormWash"]]], ["setZoneBooster", ["odict", ["arguments", [["odict", ["name", "zoneBooster"], ["optional", false], ["schema", ["odict", ["enum", ["none", "left", "right", "all"]], ["type", "string"]]]]]], ["name", "setZoneBooster"]]]]], ["ephemeral", false], ["id", "samsungce.dishwasherWashingOptions"], ["name", "Dishwasher Washing Options"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.driverVersion"], ["capability_info", ["odict", ["attributes", ["odict", ["versionNumber", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "number"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungce.driverVersion"], ["name", "Driver Version"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.softwareUpdate"], ["capability_info", ["odict", ["attributes", ["odict", ["availableModules", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["lastUpdatedDate", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["newVersionAvailable", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["operatingState", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["none", "available", "preparing", "delayed", "inprogress", "checking", "completed"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["otnDUID", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["progress", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "%"], ["enum", ["%"]], ["type", "string"]]], ["value", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["targetModule", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["properties", ["odict", ["currentVersion", ["odict", ["type", "string"]]], ["moduleType", ["odict", ["enum", ["mainController", "display", "inverter", "indoorUnit", "outdoorUnit"]], ["type", "string"]]], ["newVersion", ["odict", ["type", "string"]]]]], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["agreeUpdate", ["odict", ["arguments", [["odict", ["name", "module"], ["optional", true], ["schema", ["odict", ["type", "string"]]]]]], ["name", "agreeUpdate"]]], ["disagreeUpdate", ["odict", ["arguments", [["odict", ["name", "module"], ["optional", true], ["schema", ["odict", ["type", "string"]]]]]], ["name", "disagreeUpdate"]]]]], ["ephemeral", false], ["id", "samsungce.softwareUpdate"], ["name", "Software Update"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.kidsLock"], ["capability_info", ["odict", ["attributes", ["odict", ["lockState", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["locked", "unlocked", "paused"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungce.kidsLock"], ["name", "Kids Lock"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungce.waterConsumptionReport"], ["capability_info", ["odict", ["attributes", ["odict", ["waterConsumption", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["cumulativeAmount", ["odict", ["description", "Accumulated water consumption (ml) during the reporting period"], ["type", "number"]]], ["delta", ["odict", ["description", "Difference of current and previous consumptionAmount"], ["type", "number"]]], ["end", ["odict", ["description", "End date of the report period (Iso8601)"], ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["type", "string"]]], ["start", ["odict", ["description", "Start date of the report period (Iso8601)"], ["pattern", "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"], ["type", "string"]]]]], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungce.waterConsumptionReport"], ["name", "Water Consumption Report"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "sec.diagnosticsInformation"], ["capability_info", ["odict", ["attributes", ["odict", ["dumpType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["file", "id"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["endpoint", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["NONE", "PIPER", "SSM"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["logType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["errCode", "dump"]], ["title", "logType"], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["minVersion", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["mnId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["protocolType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["ble_ocf", "wifi_https", "ble_stdk", "wifi_stdk"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["setupId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["signinPermission", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["immutable", "updating", "enabled", "disabled"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["tsId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "sec.diagnosticsInformation"], ["name", "Diagnostics Information"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "sec.wifiConfiguration"], ["capability_info", ["odict", ["attributes", ["odict", ["autoReconnection", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "boolean"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["minVersion", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["protocolType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["helper_hotspot", "ble_ocf", "ble_stdk"]], ["title", "protocolType"], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedAuthType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["OPEN", "WEP", "WPA-PSK", "WPA2-PSK", "EAP", "SAE", "OWE", "FT-PSK"]], ["title", "supportedAuthType"], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedWiFiFreq", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["2.4G", "5G", "6G"]], ["title", "supportedWiFiFreq"], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "sec.wifiConfiguration"], ["name", "Wifi configuration"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]]]], ["8e20883f-c444-4edf-86bf-64e74c1d70e2", [["odict", ["capability_id", "ocf"], ["capability_info", ["odict", ["attributes", ["odict", ["di", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["dmv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["icv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mndt", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnfv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnhw", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnml", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnmn", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnmo", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnos", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnpv", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["mnsl", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["n", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["pi", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["st", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]], ["vid", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", ["value"]], ["title", "StringAttribute"], ["type", "object"]]]]]]], ["commands", ["odict", ["postOcfCommand", ["odict", ["arguments", [["odict", ["name", "href"], ["optional", false], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]], ["odict", ["name", "value"], ["optional", false], ["schema", ["odict", ["title", "JsonObject"], ["type", "object"]]]]]], ["name", "postOcfCommand"]]]]], ["ephemeral", false], ["id", "ocf"], ["name", "Ocf"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "switch"], ["capability_info", ["odict", ["attributes", ["odict", ["switch", ["odict", ["enumCommands", [["odict", ["command", "on"], ["value", "on"]], ["odict", ["command", "off"], ["value", "off"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["on", "off"]], ["title", "SwitchState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["off", ["odict", ["arguments", []], ["name", "off"]]], ["on", ["odict", ["arguments", []], ["name", "on"]]]]], ["ephemeral", false], ["id", "switch"], ["name", "Switch"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "audioVolume"], ["capability_info", ["odict", ["attributes", ["odict", ["volume", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "%"], ["enum", ["%"]], ["type", "string"]]], ["value", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["title", "IntegerPercent"], ["type", "object"]]], ["setter", "setVolume"]]]]], ["commands", ["odict", ["setVolume", ["odict", ["arguments", [["odict", ["name", "volume"], ["optional", false], ["schema", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]]]], ["name", "setVolume"]]], ["volumeDown", ["odict", ["arguments", []], ["name", "volumeDown"]]], ["volumeUp", ["odict", ["arguments", []], ["name", "volumeUp"]]]]], ["ephemeral", false], ["id", "audioVolume"], ["name", "Audio Volume"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "audioMute"], ["capability_info", ["odict", ["attributes", ["odict", ["mute", ["odict", ["enumCommands", [["odict", ["command", "mute"], ["value", "muted"]], ["odict", ["command", "unmute"], ["value", "unmuted"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["muted", "unmuted"]], ["title", "MuteState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]], ["setter", "setMute"]]]]], ["commands", ["odict", ["mute", ["odict", ["arguments", []], ["name", "mute"]]], ["setMute", ["odict", ["arguments", [["odict", ["name", "state"], ["optional", false], ["schema", ["odict", ["enum", ["muted", "unmuted"]], ["title", "MuteState"], ["type", "string"]]]]]], ["name", "setMute"]]], ["unmute", ["odict", ["arguments", []], ["name", "unmute"]]]]], ["ephemeral", false], ["id", "audioMute"], ["name", "Audio Mute"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "tvChannel"], ["capability_info", ["odict", ["attributes", ["odict", ["tvChannel", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["setter", "setTvChannel"]]], ["tvChannelName", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["setter", "setTvChannelName"]]]]], ["commands", ["odict", ["channelDown", ["odict", ["arguments", []], ["name", "channelDown"]]], ["channelUp", ["odict", ["arguments", []], ["name", "channelUp"]]], ["setTvChannel", ["odict", ["arguments", [["odict", ["name", "tvChannel"], ["optional", false], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]]], ["name", "setTvChannel"]]], ["setTvChannelName", ["odict", ["arguments", [["odict", ["name", "tvChannelName"], ["optional", true], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]]], ["name", "setTvChannelName"]]]]], ["ephemeral", false], ["id", "tvChannel"], ["name", "Tv Channel"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "mediaInputSource"], ["capability_info", ["odict", ["attributes", ["odict", ["inputSource", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["AM", "CD", "FM", "HDMI", "HDMI1", "HDMI2", "HDMI3", "HDMI4", "HDMI5", "HDMI6", "digitalTv", "USB", "YouTube", "aux", "bluetooth", "digital", "melon", "wifi"]], ["title", "MediaSource"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]], ["setter", "setInputSource"]]], ["supportedInputSources", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["AM", "CD", "FM", "HDMI", "HDMI1", "HDMI2", "HDMI3", "HDMI4", "HDMI5", "HDMI6", "digitalTv", "USB", "YouTube", "aux", "bluetooth", "digital", "melon", "wifi"]], ["title", "MediaSource"], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setInputSource", ["odict", ["arguments", [["odict", ["name", "mode"], ["optional", false], ["schema", ["odict", ["enum", ["AM", "CD", "FM", "HDMI", "HDMI1", "HDMI2", "HDMI3", "HDMI4", "HDMI5", "HDMI6", "digitalTv", "USB", "YouTube", "aux", "bluetooth", "digital", "melon", "wifi"]], ["title", "MediaSource"], ["type", "string"]]]]]], ["name", "setInputSource"]]]]], ["ephemeral", false], ["id", "mediaInputSource"], ["name", "Media Input Source"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "mediaPlayback"], ["capability_info", ["odict", ["attributes", ["odict", ["playbackStatus", ["odict", ["enumCommands", [["odict", ["command", "play"], ["value", "playing"]], ["odict", ["command", "pause"], ["value", "paused"]], ["odict", ["command", "stop"], ["value", "stopped"]], ["odict", ["command", "fastForward"], ["value", "fast forwarding"]], ["odict", ["command", "rewind"], ["value", "rewinding"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["paused", "playing", "stopped", "fast forwarding", "rewinding", "buffering"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["setter", "setPlaybackStatus"]]], ["supportedPlaybackCommands", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["pause", "play", "stop", "fastForward", "rewind"]], ["title", "MediaPlaybackCommands"], ["type", "string"]]], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict", ["fastForward", ["odict", ["arguments", []], ["name", "fastForward"]]], ["pause", ["odict", ["arguments", []], ["name", "pause"]]], ["play", ["odict", ["arguments", []], ["name", "play"]]], ["rewind", ["odict", ["arguments", []], ["name", "rewind"]]], ["setPlaybackStatus", ["odict", ["arguments", [["odict", ["name", "status"], ["optional", false], ["schema", ["odict", ["enum", ["paused", "playing", "stopped", "fast forwarding", "rewinding"]], ["type", "string"]]]]]], ["name", "setPlaybackStatus"]]], ["stop", ["odict", ["arguments", []], ["name", "stop"]]]]], ["ephemeral", false], ["id", "mediaPlayback"], ["name", "Media Playback"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "mediaTrackControl"], ["capability_info", ["odict", ["attributes", ["odict", ["supportedTrackControlCommands", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["previousTrack", "nextTrack"]], ["title", "MediaTrackCommands"], ["type", "string"]]], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict", ["nextTrack", ["odict", ["arguments", []], ["name", "nextTrack"]]], ["previousTrack", ["odict", ["arguments", []], ["name", "previousTrack"]]]]], ["ephemeral", false], ["id", "mediaTrackControl"], ["name", "Media Track Control"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.error"], ["capability_info", ["odict", ["attributes", ["odict", ["error", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setError", ["odict", ["arguments", [["odict", ["name", "error"], ["optional", false], ["schema", ["odict", ["type", "object"]]]]]], ["name", "setError"]]]]], ["ephemeral", false], ["id", "custom.error"], ["name", "Error"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.picturemode"], ["capability_info", ["odict", ["attributes", ["odict", ["pictureMode", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", []], ["type", "object"]]]]], ["supportedPictureModes", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "array"]]]]], ["required", []], ["type", "object"]]]]], ["supportedPictureModesMap", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["properties", ["odict", ["id", ["odict", ["type", "string"]]], ["name", ["odict", ["type", "string"]]]]], ["type", "object"]]], ["required", []], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict", ["setPictureMode", ["odict", ["arguments", [["odict", ["name", "mode"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setPictureMode"]]]]], ["ephemeral", false], ["id", "custom.picturemode"], ["name", "PictureMode"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.soundmode"], ["capability_info", ["odict", ["attributes", ["odict", ["soundMode", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", []], ["type", "object"]]]]], ["supportedSoundModes", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]], ["supportedSoundModesMap", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["properties", ["odict", ["id", ["odict", ["type", "string"]]], ["name", ["odict", ["type", "string"]]]]], ["type", "object"]]], ["required", []], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict", ["setSoundMode", ["odict", ["arguments", [["odict", ["name", "mode"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setSoundMode"]]]]], ["ephemeral", false], ["id", "custom.soundmode"], ["name", "SoundMode"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.accessibility"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["setAccessibility", ["odict", ["arguments", [["odict", ["name", "menuName"], ["optional", false], ["schema", ["odict", ["type", "string"]]]], ["odict", ["name", "menuId"], ["optional", false], ["schema", ["odict", ["type", "string"]]]], ["odict", ["name", "option"], ["optional", true], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setAccessibility"]]]]], ["ephemeral", false], ["id", "custom.accessibility"], ["name", "Accessibility"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.launchapp"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["launchApp", ["odict", ["arguments", [["odict", ["name", "appId"], ["optional", true], ["schema", ["odict", ["type", "string"]]]], ["odict", ["name", "appName"], ["optional", true], ["schema", ["odict", ["type", "string"]]]]]], ["name", "launchApp"]]]]], ["ephemeral", false], ["id", "custom.launchapp"], ["name", "launchApp"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.recording"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["recordStart", ["odict", ["arguments", []], ["name", "recordStart"]]], ["recordStop", ["odict", ["arguments", []], ["name", "recordStop"]]]]], ["ephemeral", false], ["id", "custom.recording"], ["name", "Recording"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.tvsearch"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["search", ["odict", ["arguments", [["odict", ["name", "query"], ["optional", false], ["schema", ["odict", ["type", "string"]]]], ["odict", ["name", "url"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "search"]]]]], ["ephemeral", false], ["id", "custom.tvsearch"], ["name", "tvSearch"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "custom.disabledCapabilities"], ["capability_info", ["odict", ["attributes", ["odict", ["disabledCapabilities", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "custom.disabledCapabilities"], ["name", "Disabled Capabilities"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.remoteControl"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["send", ["odict", ["arguments", [["odict", ["name", "keyValue"], ["optional", false], ["schema", ["odict", ["enum", ["UP", "DOWN", "LEFT", "RIGHT", "OK", "BACK", "MENU", "HOME"]], ["type", "string"]]]], ["odict", ["name", "keyState"], ["optional", true], ["schema", ["odict", ["enum", ["PRESSED", "RELEASED", "PRESS_AND_RELEASED"]], ["type", "string"]]]]]], ["name", "send"]]]]], ["ephemeral", false], ["id", "samsungvd.remoteControl"], ["name", "Remote Control"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.ambient"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["setAmbientOn", ["odict", ["arguments", []], ["name", "setAmbientOn"]]]]], ["ephemeral", false], ["id", "samsungvd.ambient"], ["name", "Ambient"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.ambientContent"], ["capability_info", ["odict", ["attributes", ["odict", ["supportedAmbientApps", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setAmbientContent", ["odict", ["arguments", [["odict", ["name", "id"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setAmbientContent"]]]]], ["ephemeral", false], ["id", "samsungvd.ambientContent"], ["name", "Ambient Content"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.ambient18"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["setAmbientOn", ["odict", ["arguments", []], ["name", "setAmbientOn"]]]]], ["ephemeral", false], ["id", "samsungvd.ambient18"], ["name", "Ambient18"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.mediaInputSource"], ["capability_info", ["odict", ["attributes", ["odict", ["inputSource", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["supportedInputSourcesMap", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["properties", ["odict", ["id", ["odict", ["type", "string"]]], ["name", ["odict", ["type", "string"]]]]], ["type", "object"]]], ["required", []], ["type", "array"]]]]], ["required", []], ["type", "object"]]]]]]], ["commands", ["odict", ["setInputSource", ["odict", ["arguments", [["odict", ["name", "id"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setInputSource"]]]]], ["ephemeral", false], ["id", "samsungvd.mediaInputSource"], ["name", "Media Input Source"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "refresh"], ["capability_info", ["odict", ["attributes", ["odict"]], ["commands", ["odict", ["refresh", ["odict", ["arguments", []], ["name", "refresh"]]]]], ["ephemeral", false], ["id", "refresh"], ["name", "Refresh"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "execute"], ["capability_info", ["odict", ["attributes", ["odict", ["data", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", true], ["required", []], ["type", "object"]]], ["value", ["odict", ["title", "JsonObject"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["execute", ["odict", ["arguments", [["odict", ["name", "command"], ["optional", false], ["schema", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]], ["odict", ["name", "args"], ["optional", true], ["schema", ["odict", ["title", "JsonObject"], ["type", "object"]]]]]], ["name", "execute"]]]]], ["ephemeral", false], ["id", "execute"], ["name", "Execute"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.firmwareVersion"], ["capability_info", ["odict", ["attributes", ["odict", ["firmwareVersion", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["setFirmwareVersion", ["odict", ["arguments", [["odict", ["name", "version"], ["optional", false], ["schema", ["odict", ["type", "string"]]]]]], ["name", "setFirmwareVersion"]]]]], ["ephemeral", false], ["id", "samsungvd.firmwareVersion"], ["name", "Firmware Version"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "samsungvd.supportsPowerOnByOcf"], ["capability_info", ["odict", ["attributes", ["odict", ["supportsPowerOnByOcf", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["true", "false"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "samsungvd.supportsPowerOnByOcf"], ["name", "Supports Power On By OCF"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "sec.diagnosticsInformation"], ["capability_info", ["odict", ["attributes", ["odict", ["dumpType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["file", "id"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["endpoint", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["NONE", "PIPER", "SSM"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["logType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["items", ["odict", ["enum", ["errCode", "dump"]], ["title", "logType"], ["type", "string"]]], ["type", "array"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["minVersion", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["mnId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["protocolType", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["ble_ocf", "wifi_https", "ble_stdk", "wifi_stdk"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["setupId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["signinPermission", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["immutable", "updating", "enabled", "disabled"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["tsId", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict"]], ["ephemeral", false], ["id", "sec.diagnosticsInformation"], ["name", "Diagnostics Information"], ["status", "proposed"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]]]], ["c4b4a179-6f75-48ed-a6b3-95080be6afc6", [["odict", ["capability_id", "switch"], ["capability_info", ["odict", ["attributes", ["odict", ["switch", ["odict", ["enumCommands", [["odict", ["command", "on"], ["value", "on"]], ["odict", ["command", "off"], ["value", "off"]]]], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["enum", ["on", "off"]], ["title", "SwitchState"], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["off", ["odict", ["arguments", []], ["name", "off"]]], ["on", ["odict", ["arguments", []], ["name", "on"]]]]], ["ephemeral", false], ["id", "switch"], ["name", "Switch"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "switchLevel"], ["capability_info", ["odict", ["attributes", ["odict", ["level", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "%"], ["enum", ["%"]], ["type", "string"]]], ["value", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["title", "IntegerPercent"], ["type", "object"]]], ["setter", "setLevel"]]]]], ["commands", ["odict", ["setLevel", ["odict", ["arguments", [["odict", ["name", "level"], ["optional", false], ["schema", ["odict", ["maximum", 100], ["minimum", 0], ["type", "integer"]]]], ["odict", ["name", "rate"], ["optional", true], ["schema", ["odict", ["minimum", 0], ["title", "PositiveInteger"], ["type", "integer"]]]]]], ["name", "setLevel"]]]]], ["ephemeral", false], ["id", "switchLevel"], ["name", "Switch Level"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "colorTemperature"], ["capability_info", ["odict", ["attributes", ["odict", ["colorTemperature", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["unit", ["odict", ["default", "K"], ["enum", ["K"]], ["type", "string"]]], ["value", ["odict", ["maximum", 30000], ["minimum", 1], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]], ["setter", "setColorTemperature"]]]]], ["commands", ["odict", ["setColorTemperature", ["odict", ["arguments", [["odict", ["name", "temperature"], ["optional", false], ["schema", ["odict", ["maximum", 30000], ["minimum", 1], ["type", "integer"]]]]]], ["name", "setColorTemperature"]]]]], ["ephemeral", false], ["id", "colorTemperature"], ["name", "Color Temperature"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "colorControl"], ["capability_info", ["odict", ["attributes", ["odict", ["color", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["setter", "setColor"]]], ["hue", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]], ["required", []], ["type", "object"]]], ["setter", "setHue"]]], ["saturation", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]], ["required", []], ["type", "object"]]], ["setter", "setSaturation"]]]]], ["commands", ["odict", ["setColor", ["odict", ["arguments", [["odict", ["name", "color"], ["optional", false], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["hex", ["odict", ["maxLength", 7], ["type", "string"]]], ["hue", ["odict", ["type", "number"]]], ["level", ["odict", ["type", "integer"]]], ["saturation", ["odict", ["type", "number"]]], ["switch", ["odict", ["maxLength", 3], ["type", "string"]]]]], ["title", "COLOR_MAP"], ["type", "object"]]]]]], ["name", "setColor"]]], ["setHue", ["odict", ["arguments", [["odict", ["name", "hue"], ["optional", false], ["schema", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]]], ["name", "setHue"]]], ["setSaturation", ["odict", ["arguments", [["odict", ["name", "saturation"], ["optional", false], ["schema", ["odict", ["minimum", 0], ["title", "PositiveNumber"], ["type", "number"]]]]]], ["name", "setSaturation"]]]]], ["ephemeral", false], ["id", "colorControl"], ["name", "Color Control"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]], ["odict", ["capability_id", "healthCheck"], ["capability_info", ["odict", ["attributes", ["odict", ["DeviceWatch-DeviceStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["reason", ["odict", ["enum", ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["value", ["odict", ["enum", ["online", "offline"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["DeviceWatch-Enroll", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["value", ["odict", ["additionalProperties", false], ["properties", ["odict", ["hubHardwareId", ["odict", ["maxLength", 255], ["title", "String"], ["type", "string"]]], ["protocol", ["odict", ["enum", ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]], ["title", "DeviceHealthProtocol"], ["type", "string"]]], ["scheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]]]], ["title", "DeviceHealthEnroll"], ["type", "object"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["checkInterval", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["hubHardwareId", ["odict", ["pattern", "^[0-9a-fA-F]{4}$"], ["type", "string"]]], ["offlinePingable", ["odict", ["enum", ["0", "1"]], ["type", "string"]]], ["protocol", ["odict", ["enum", ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]], ["title", "DeviceHealthProtocol"], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["unit", ["odict", ["default", "s"], ["enum", ["s"]], ["type", "string"]]], ["value", ["odict", ["maximum", 604800], ["minimum", 0], ["type", "integer"]]]]], ["required", ["value"]], ["type", "object"]]]]], ["healthStatus", ["odict", ["enumCommands", []], ["schema", ["odict", ["additionalProperties", false], ["properties", ["odict", ["data", ["odict", ["additionalProperties", false], ["properties", ["odict", ["badProperty", ["odict", ["type", "string"]]], ["deviceScheme", ["odict", ["enum", ["MIXED", "TRACKED", "UNTRACKED"]], ["type", "string"]]], ["reason", ["odict", ["enum", ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]], ["type", "string"]]]]], ["required", []], ["type", "object"]]], ["value", ["odict", ["enum", ["online", "offline"]], ["type", "string"]]]]], ["required", ["value"]], ["type", "object"]]]]]]], ["commands", ["odict", ["ping", ["odict", ["arguments", []], ["name", "ping"]]]]], ["ephemeral", false], ["id", "healthCheck"], ["name", "Health Check"], ["status", "live"], ["version", 1]]], ["capability_version", 1], ["component_id", "main"]]]]], "capability_info_from_devices": {"switch": {"capability_id": "switch", "capability_info": {"attributes": {"switch": {"enumCommands": [{"command": "on", "value": "on"}, {"command": "off", "value": "off"}], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["on", "off"], "title": "SwitchState", "type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {"off": {"arguments": [], "name": "off"}, "on": {"arguments": [], "name": "on"}}, "ephemeral": false, "id": "switch", "name": "Switch", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "refresh": {"capability_id": "refresh", "capability_info": {"attributes": {}, "commands": {"refresh": {"arguments": [], "name": "refresh"}}, "ephemeral": false, "id": "refresh", "name": "Refresh", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "healthCheck": {"capability_id": "healthCheck", "capability_info": {"attributes": {"DeviceWatch-DeviceStatus": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"data": {"additionalProperties": false, "properties": {"badProperty": {"type": "string"}, "deviceScheme": {"enum": ["MIXED", "TRACKED", "UNTRACKED"], "type": "string"}, "reason": {"enum": ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"], "type": "string"}}, "required": [], "type": "object"}, "value": {"enum": ["online", "offline"], "type": "string"}}, "required": ["value"], "type": "object"}}, "DeviceWatch-Enroll": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"additionalProperties": false, "properties": {"hubHardwareId": {"maxLength": 255, "title": "String", "type": "string"}, "protocol": {"enum": ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"], "title": "DeviceHealthProtocol", "type": "string"}, "scheme": {"enum": ["MIXED", "TRACKED", "UNTRACKED"], "type": "string"}}, "title": "DeviceHealthEnroll", "type": "object"}}, "required": ["value"], "type": "object"}}, "checkInterval": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"data": {"additionalProperties": false, "properties": {"badProperty": {"type": "string"}, "deviceScheme": {"enum": ["MIXED", "TRACKED", "UNTRACKED"], "type": "string"}, "hubHardwareId": {"pattern": "^[0-9a-fA-F]{4}$", "type": "string"}, "offlinePingable": {"enum": ["0", "1"], "type": "string"}, "protocol": {"enum": ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"], "title": "DeviceHealthProtocol", "type": "string"}}, "required": [], "type": "object"}, "unit": {"default": "s", "enum": ["s"], "type": "string"}, "value": {"maximum": 604800, "minimum": 0, "type": "integer"}}, "required": ["value"], "type": "object"}}, "healthStatus": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"data": {"additionalProperties": false, "properties": {"badProperty": {"type": "string"}, "deviceScheme": {"enum": ["MIXED", "TRACKED", "UNTRACKED"], "type": "string"}, "reason": {"enum": ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"], "type": "string"}}, "required": [], "type": "object"}, "value": {"enum": ["online", "offline"], "type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {"ping": {"arguments": [], "name": "ping"}}, "ephemeral": false, "id": "healthCheck", "name": "Health Check", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "switchLevel": {"capability_id": "switchLevel", "capability_info": {"attributes": {"level": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"default": "%", "enum": ["%"], "type": "string"}, "value": {"maximum": 100, "minimum": 0, "type": "integer"}}, "required": ["value"], "title": "IntegerPercent", "type": "object"}, "setter": "setLevel"}}, "commands": {"setLevel": {"arguments": [{"name": "level", "optional": false, "schema": {"maximum": 100, "minimum": 0, "type": "integer"}}, {"name": "rate", "optional": true, "schema": {"minimum": 0, "title": "PositiveInteger", "type": "integer"}}], "name": "setLevel"}}, "ephemeral": false, "id": "switchLevel", "name": "Switch Level", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "colorTemperature": {"capability_id": "colorTemperature", "capability_info": {"attributes": {"colorTemperature": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"default": "K", "enum": ["K"], "type": "string"}, "value": {"maximum": 30000, "minimum": 1, "type": "integer"}}, "required": ["value"], "type": "object"}, "setter": "setColorTemperature"}}, "commands": {"setColorTemperature": {"arguments": [{"name": "temperature", "optional": false, "schema": {"maximum": 30000, "minimum": 1, "type": "integer"}}], "name": "setColorTemperature"}}, "ephemeral": false, "id": "colorTemperature", "name": "Color Temperature", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "colorControl": {"capability_id": "colorControl", "capability_info": {"attributes": {"color": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": [], "type": "object"}, "setter": "setColor"}, "hue": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"minimum": 0, "title": "PositiveNumber", "type": "number"}}, "required": [], "type": "object"}, "setter": "setHue"}, "saturation": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"minimum": 0, "title": "PositiveNumber", "type": "number"}}, "required": [], "type": "object"}, "setter": "setSaturation"}}, "commands": {"setColor": {"arguments": [{"name": "color", "optional": false, "schema": {"additionalProperties": false, "properties": {"hex": {"maxLength": 7, "type": "string"}, "hue": {"type": "number"}, "level": {"type": "integer"}, "saturation": {"type": "number"}, "switch": {"maxLength": 3, "type": "string"}}, "title": "COLOR_MAP", "type": "object"}}], "name": "setColor"}, "setHue": {"arguments": [{"name": "hue", "optional": false, "schema": {"minimum": 0, "title": "PositiveNumber", "type": "number"}}], "name": "setHue"}, "setSaturation": {"arguments": [{"name": "saturation", "optional": false, "schema": {"minimum": 0, "title": "PositiveNumber", "type": "number"}}], "name": "setSaturation"}}, "ephemeral": false, "id": "colorControl", "name": "Color Control", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "ocf": {"capability_id": "ocf", "capability_info": {"attributes": {"di": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "dmv": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "icv": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "mndt": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "mnfv": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "mnhw": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "mnml": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "mnmn": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "mnmo": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "mnos": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "mnpv": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "mnsl": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "n": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "pi": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "st": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}, "vid": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "StringAttribute", "type": "object"}}}, "commands": {"postOcfCommand": {"arguments": [{"name": "href", "optional": false, "schema": {"maxLength": 255, "title": "String", "type": "string"}}, {"name": "value", "optional": false, "schema": {"title": "JsonObject", "type": "object"}}], "name": "postOcfCommand"}}, "ephemeral": false, "id": "ocf", "name": "Ocf", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "audioVolume": {"capability_id": "audioVolume", "capability_info": {"attributes": {"volume": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"default": "%", "enum": ["%"], "type": "string"}, "value": {"maximum": 100, "minimum": 0, "type": "integer"}}, "required": ["value"], "title": "IntegerPercent", "type": "object"}, "setter": "setVolume"}}, "commands": {"setVolume": {"arguments": [{"name": "volume", "optional": false, "schema": {"maximum": 100, "minimum": 0, "type": "integer"}}], "name": "setVolume"}, "volumeDown": {"arguments": [], "name": "volumeDown"}, "volumeUp": {"arguments": [], "name": "volumeUp"}}, "ephemeral": false, "id": "audioVolume", "name": "Audio Volume", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "audioMute": {"capability_id": "audioMute", "capability_info": {"attributes": {"mute": {"enumCommands": [{"command": "mute", "value": "muted"}, {"command": "unmute", "value": "unmuted"}], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["muted", "unmuted"], "title": "MuteState", "type": "string"}}, "required": ["value"], "type": "object"}, "setter": "setMute"}}, "commands": {"mute": {"arguments": [], "name": "mute"}, "setMute": {"arguments": [{"name": "state", "optional": false, "schema": {"enum": ["muted", "unmuted"], "title": "MuteState", "type": "string"}}], "name": "setMute"}, "unmute": {"arguments": [], "name": "unmute"}}, "ephemeral": false, "id": "audioMute", "name": "Audio Mute", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "tvChannel": {"capability_id": "tvChannel", "capability_info": {"attributes": {"tvChannel": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": [], "type": "object"}, "setter": "setTvChannel"}, "tvChannelName": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": [], "type": "object"}, "setter": "setTvChannelName"}}, "commands": {"channelDown": {"arguments": [], "name": "channelDown"}, "channelUp": {"arguments": [], "name": "channelUp"}, "setTvChannel": {"arguments": [{"name": "tvChannel", "optional": false, "schema": {"maxLength": 255, "title": "String", "type": "string"}}], "name": "setTvChannel"}, "setTvChannelName": {"arguments": [{"name": "tvChannelName", "optional": true, "schema": {"maxLength": 255, "title": "String", "type": "string"}}], "name": "setTvChannelName"}}, "ephemeral": false, "id": "tvChannel", "name": "Tv Channel", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "mediaInputSource": {"capability_id": "mediaInputSource", "capability_info": {"attributes": {"inputSource": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["AM", "CD", "FM", "HDMI", "HDMI1", "HDMI2", "HDMI3", "HDMI4", "HDMI5", "HDMI6", "digitalTv", "USB", "YouTube", "aux", "bluetooth", "digital", "melon", "wifi"], "title": "MediaSource", "type": "string"}}, "required": ["value"], "type": "object"}, "setter": "setInputSource"}, "supportedInputSources": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["AM", "CD", "FM", "HDMI", "HDMI1", "HDMI2", "HDMI3", "HDMI4", "HDMI5", "HDMI6", "digitalTv", "USB", "YouTube", "aux", "bluetooth", "digital", "melon", "wifi"], "title": "MediaSource", "type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}}, "commands": {"setInputSource": {"arguments": [{"name": "mode", "optional": false, "schema": {"enum": ["AM", "CD", "FM", "HDMI", "HDMI1", "HDMI2", "HDMI3", "HDMI4", "HDMI5", "HDMI6", "digitalTv", "USB", "YouTube", "aux", "bluetooth", "digital", "melon", "wifi"], "title": "MediaSource", "type": "string"}}], "name": "setInputSource"}}, "ephemeral": false, "id": "mediaInputSource", "name": "Media Input Source", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "mediaPlayback": {"capability_id": "mediaPlayback", "capability_info": {"attributes": {"playbackStatus": {"enumCommands": [{"command": "play", "value": "playing"}, {"command": "pause", "value": "paused"}, {"command": "stop", "value": "stopped"}, {"command": "fastForward", "value": "fast forwarding"}, {"command": "rewind", "value": "rewinding"}], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["paused", "playing", "stopped", "fast forwarding", "rewinding", "buffering"], "type": "string"}}, "required": [], "type": "object"}, "setter": "setPlaybackStatus"}, "supportedPlaybackCommands": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["pause", "play", "stop", "fastForward", "rewind"], "title": "MediaPlaybackCommands", "type": "string"}, "type": "array"}}, "required": [], "type": "object"}}}, "commands": {"fastForward": {"arguments": [], "name": "fastForward"}, "pause": {"arguments": [], "name": "pause"}, "play": {"arguments": [], "name": "play"}, "rewind": {"arguments": [], "name": "rewind"}, "setPlaybackStatus": {"arguments": [{"name": "status", "optional": false, "schema": {"enum": ["paused", "playing", "stopped", "fast forwarding", "rewinding"], "type": "string"}}], "name": "setPlaybackStatus"}, "stop": {"arguments": [], "name": "stop"}}, "ephemeral": false, "id": "mediaPlayback", "name": "Media Playback", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "mediaTrackControl": {"capability_id": "mediaTrackControl", "capability_info": {"attributes": {"supportedTrackControlCommands": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["previousTrack", "nextTrack"], "title": "MediaTrackCommands", "type": "string"}, "type": "array"}}, "required": [], "type": "object"}}}, "commands": {"nextTrack": {"arguments": [], "name": "nextTrack"}, "previousTrack": {"arguments": [], "name": "previousTrack"}}, "ephemeral": false, "id": "mediaTrackControl", "name": "Media Track Control", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.error": {"capability_id": "custom.error", "capability_info": {"attributes": {"error": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "object"}}, "required": ["value"], "type": "object"}}}, "commands": {"setError": {"arguments": [{"name": "error", "optional": false, "schema": {"type": "object"}}], "name": "setError"}}, "ephemeral": false, "id": "custom.error", "name": "Error", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.picturemode": {"capability_id": "custom.picturemode", "capability_info": {"attributes": {"pictureMode": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": [], "type": "object"}}, "supportedPictureModes": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "array"}}, "required": [], "type": "object"}}, "supportedPictureModesMap": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"properties": {"id": {"type": "string"}, "name": {"type": "string"}}, "type": "object"}, "required": [], "type": "array"}}, "required": [], "type": "object"}}}, "commands": {"setPictureMode": {"arguments": [{"name": "mode", "optional": false, "schema": {"type": "string"}}], "name": "setPictureMode"}}, "ephemeral": false, "id": "custom.picturemode", "name": "PictureMode", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.soundmode": {"capability_id": "custom.soundmode", "capability_info": {"attributes": {"soundMode": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": [], "type": "object"}}, "supportedSoundModes": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"type": "string"}, "type": "array"}}, "required": [], "type": "object"}}, "supportedSoundModesMap": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"properties": {"id": {"type": "string"}, "name": {"type": "string"}}, "type": "object"}, "required": [], "type": "array"}}, "required": [], "type": "object"}}}, "commands": {"setSoundMode": {"arguments": [{"name": "mode", "optional": false, "schema": {"type": "string"}}], "name": "setSoundMode"}}, "ephemeral": false, "id": "custom.soundmode", "name": "SoundMode", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.accessibility": {"capability_id": "custom.accessibility", "capability_info": {"attributes": {}, "commands": {"setAccessibility": {"arguments": [{"name": "menuName", "optional": false, "schema": {"type": "string"}}, {"name": "menuId", "optional": false, "schema": {"type": "string"}}, {"name": "option", "optional": true, "schema": {"type": "string"}}], "name": "setAccessibility"}}, "ephemeral": false, "id": "custom.accessibility", "name": "Accessibility", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.launchapp": {"capability_id": "custom.launchapp", "capability_info": {"attributes": {}, "commands": {"launchApp": {"arguments": [{"name": "appId", "optional": true, "schema": {"type": "string"}}, {"name": "appName", "optional": true, "schema": {"type": "string"}}], "name": "launchApp"}}, "ephemeral": false, "id": "custom.launchapp", "name": "launchApp", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.recording": {"capability_id": "custom.recording", "capability_info": {"attributes": {}, "commands": {"recordStart": {"arguments": [], "name": "recordStart"}, "recordStop": {"arguments": [], "name": "recordStop"}}, "ephemeral": false, "id": "custom.recording", "name": "Recording", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.tvsearch": {"capability_id": "custom.tvsearch", "capability_info": {"attributes": {}, "commands": {"search": {"arguments": [{"name": "query", "optional": false, "schema": {"type": "string"}}, {"name": "url", "optional": false, "schema": {"type": "string"}}], "name": "search"}}, "ephemeral": false, "id": "custom.tvsearch", "name": "tvSearch", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.disabledCapabilities": {"capability_id": "custom.disabledCapabilities", "capability_info": {"attributes": {"disabledCapabilities": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "custom.disabledCapabilities", "name": "Disabled Capabilities", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungvd.remoteControl": {"capability_id": "samsungvd.remoteControl", "capability_info": {"attributes": {}, "commands": {"send": {"arguments": [{"name": "keyValue", "optional": false, "schema": {"enum": ["UP", "DOWN", "LEFT", "RIGHT", "OK", "BACK", "MENU", "HOME"], "type": "string"}}, {"name": "keyState", "optional": true, "schema": {"enum": ["PRESSED", "RELEASED", "PRESS_AND_RELEASED"], "type": "string"}}], "name": "send"}}, "ephemeral": false, "id": "samsungvd.remoteControl", "name": "Remote Control", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungvd.ambient": {"capability_id": "samsungvd.ambient", "capability_info": {"attributes": {}, "commands": {"setAmbientOn": {"arguments": [], "name": "setAmbientOn"}}, "ephemeral": false, "id": "samsungvd.ambient", "name": "Ambient", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungvd.ambientContent": {"capability_id": "samsungvd.ambientContent", "capability_info": {"attributes": {"supportedAmbientApps": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "array"}}, "required": ["value"], "type": "object"}}}, "commands": {"setAmbientContent": {"arguments": [{"name": "id", "optional": false, "schema": {"type": "string"}}], "name": "setAmbientContent"}}, "ephemeral": false, "id": "samsungvd.ambientContent", "name": "Ambient Content", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungvd.ambient18": {"capability_id": "samsungvd.ambient18", "capability_info": {"attributes": {}, "commands": {"setAmbientOn": {"arguments": [], "name": "setAmbientOn"}}, "ephemeral": false, "id": "samsungvd.ambient18", "name": "Ambient18", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungvd.mediaInputSource": {"capability_id": "samsungvd.mediaInputSource", "capability_info": {"attributes": {"inputSource": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "supportedInputSourcesMap": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"properties": {"id": {"type": "string"}, "name": {"type": "string"}}, "type": "object"}, "required": [], "type": "array"}}, "required": [], "type": "object"}}}, "commands": {"setInputSource": {"arguments": [{"name": "id", "optional": false, "schema": {"type": "string"}}], "name": "setInputSource"}}, "ephemeral": false, "id": "samsungvd.mediaInputSource", "name": "Media Input Source", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "execute": {"capability_id": "execute", "capability_info": {"attributes": {"data": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"data": {"additionalProperties": true, "required": [], "type": "object"}, "value": {"title": "JsonObject", "type": "object"}}, "required": ["value"], "type": "object"}}}, "commands": {"execute": {"arguments": [{"name": "command", "optional": false, "schema": {"maxLength": 255, "title": "String", "type": "string"}}, {"name": "args", "optional": true, "schema": {"title": "JsonObject", "type": "object"}}], "name": "execute"}}, "ephemeral": false, "id": "execute", "name": "Execute", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungvd.firmwareVersion": {"capability_id": "samsungvd.firmwareVersion", "capability_info": {"attributes": {"firmwareVersion": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {"setFirmwareVersion": {"arguments": [{"name": "version", "optional": false, "schema": {"type": "string"}}], "name": "setFirmwareVersion"}}, "ephemeral": false, "id": "samsungvd.firmwareVersion", "name": "Firmware Version", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungvd.supportsPowerOnByOcf": {"capability_id": "samsungvd.supportsPowerOnByOcf", "capability_info": {"attributes": {"supportsPowerOnByOcf": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["true", "false"], "type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "samsungvd.supportsPowerOnByOcf", "name": "Supports Power On By OCF", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "sec.diagnosticsInformation": {"capability_id": "sec.diagnosticsInformation", "capability_info": {"attributes": {"dumpType": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["file", "id"], "type": "string"}}, "required": ["value"], "type": "object"}}, "endpoint": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["NONE", "PIPER", "SSM"], "type": "string"}}, "required": ["value"], "type": "object"}}, "logType": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["errCode", "dump"], "title": "logType", "type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "minVersion": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "mnId": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "protocolType": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["ble_ocf", "wifi_https", "ble_stdk", "wifi_stdk"], "type": "string"}}, "required": ["value"], "type": "object"}}, "setupId": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "signinPermission": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["immutable", "updating", "enabled", "disabled"], "type": "string"}}, "required": ["value"], "type": "object"}}, "tsId": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "sec.diagnosticsInformation", "name": "Diagnostics Information", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "contactSensor": {"capability_id": "contactSensor", "capability_info": {"attributes": {"contact": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["closed", "open"], "title": "ContactState", "type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "contactSensor", "name": "Contact Sensor", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "temperatureMeasurement": {"capability_id": "temperatureMeasurement", "capability_info": {"attributes": {"temperature": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"enum": ["F", "C"], "type": "string"}, "value": {"maximum": 10000, "minimum": -460, "title": "TemperatureValue", "type": "number"}}, "required": ["value", "unit"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "temperatureMeasurement", "name": "Temperature Measurement", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "thermostatCoolingSetpoint": {"capability_id": "thermostatCoolingSetpoint", "capability_info": {"attributes": {"coolingSetpoint": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"enum": ["F", "C"], "type": "string"}, "value": {"maximum": 10000, "minimum": -460, "title": "TemperatureValue", "type": "number"}}, "required": ["value", "unit"], "title": "Temperature", "type": "object"}, "setter": "setCoolingSetpoint"}}, "commands": {"setCoolingSetpoint": {"arguments": [{"name": "setpoint", "optional": false, "schema": {"maximum": 10000, "minimum": -460, "title": "TemperatureValue", "type": "number"}}], "name": "setCoolingSetpoint"}}, "ephemeral": false, "id": "thermostatCoolingSetpoint", "name": "Thermostat Cooling Setpoint", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.thermostatSetpointControl": {"capability_id": "custom.thermostatSetpointControl", "capability_info": {"attributes": {"maximumSetpoint": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"enum": ["F", "C"], "type": "string"}, "value": {"type": "number"}}, "required": ["value"], "type": "object"}}, "minimumSetpoint": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"enum": ["F", "C"], "type": "string"}, "value": {"type": "number"}}, "required": ["value"], "type": "object"}}}, "commands": {"lowerSetpoint": {"arguments": [], "name": "lowerSetpoint"}, "raiseSetpoint": {"arguments": [], "name": "raiseSetpoint"}}, "ephemeral": false, "id": "custom.thermostatSetpointControl", "name": "Thermostat Setpoint Control", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "freezer"}, "custom.fridgeMode": {"capability_id": "custom.fridgeMode", "capability_info": {"attributes": {"fridgeMode": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "fridgeModeValue": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "custom.fridgeMode", "name": "Fridge Mode", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "powerConsumptionReport": {"capability_id": "powerConsumptionReport", "capability_info": {"attributes": {"powerConsumption": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"additionalProperties": false, "properties": {"deltaEnergy": {"type": "number"}, "end": {"pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$", "title": "Iso8601Date", "type": "string"}, "energy": {"type": "number"}, "energySaved": {"type": "number"}, "persistedEnergy": {"type": "number"}, "persistedSavedEnergy": {"type": "number"}, "power": {"type": "number"}, "powerEnergy": {"type": "number"}, "start": {"pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$", "title": "Iso8601Date", "type": "string"}}, "title": "PowerConsumption", "type": "object"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "powerConsumptionReport", "name": "Power Consumption Report", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "demandResponseLoadControl": {"capability_id": "demandResponseLoadControl", "capability_info": {"attributes": {"drlcStatus": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"additionalProperties": false, "properties": {"drlcLevel": {"maximum": 4, "minimum": -1, "title": "DrlcLevel", "type": "integer"}, "drlcType": {"maximum": 1, "minimum": 0, "title": "DrlcType", "type": "integer"}, "duration": {"minimum": 0, "title": "PositiveInteger", "type": "integer"}, "override": {"type": "boolean"}, "start": {"pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$", "title": "Iso8601Date", "type": "string"}}, "title": "DemandResponseLoadControlStatus", "type": "object"}}, "required": ["value"], "type": "object"}}}, "commands": {"overrideDrlcAction": {"arguments": [{"name": "value", "optional": false, "schema": {"type": "boolean"}}], "name": "overrideDrlcAction"}, "requestDrlcAction": {"arguments": [{"name": "drlcType", "optional": false, "schema": {"maximum": 1, "minimum": 0, "title": "DrlcType", "type": "integer"}}, {"name": "drlcLevel", "optional": false, "schema": {"maximum": 4, "minimum": -1, "title": "DrlcLevel", "type": "integer"}}, {"name": "start", "optional": false, "schema": {"pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$", "title": "Iso8601Date", "type": "string"}}, {"name": "duration", "optional": false, "schema": {"minimum": 0, "title": "PositiveInteger", "type": "integer"}}, {"name": "reportingPeriod", "optional": true, "schema": {"minimum": 0, "title": "PositiveInteger", "type": "integer"}}], "name": "requestDrlcAction"}}, "ephemeral": false, "id": "demandResponseLoadControl", "name": "Demand Response Load Control", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "refrigeration": {"capability_id": "refrigeration", "capability_info": {"attributes": {"defrost": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["off", "on"], "type": "string"}}, "required": [], "type": "object"}, "setter": "setDefrost"}, "rapidCooling": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["off", "on"], "type": "string"}}, "required": [], "type": "object"}, "setter": "setRapidCooling"}, "rapidFreezing": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["off", "on"], "type": "string"}}, "required": [], "type": "object"}, "setter": "setRapidFreezing"}}, "commands": {"setDefrost": {"arguments": [{"name": "rapidCooling", "optional": false, "schema": {"enum": ["off", "on"], "type": "string"}}], "name": "setDefrost"}, "setRapidCooling": {"arguments": [{"name": "rapidCooling", "optional": false, "schema": {"enum": ["off", "on"], "type": "string"}}], "name": "setRapidCooling"}, "setRapidFreezing": {"arguments": [{"name": "rapidCooling", "optional": false, "schema": {"enum": ["off", "on"], "type": "string"}}], "name": "setRapidFreezing"}}, "ephemeral": false, "id": "refrigeration", "name": "Refrigeration", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.deviceReportStateConfiguration": {"capability_id": "custom.deviceReportStateConfiguration", "capability_info": {"attributes": {"reportStatePeriod": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["disabled", "enabled"], "type": "string"}}, "required": ["value"], "type": "object"}}, "reportStateRealtime": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"additionalProperties": false, "properties": {"duration": {"max": 30, "min": 10, "type": "integer"}, "state": {"enum": ["disabled", "enabled"], "type": "string"}, "unit": {"default": "minute", "enum": ["minute"], "type": "string"}}, "required": ["state"], "title": "ReportStateRealtime", "type": "object"}}, "required": ["value"], "type": "object"}}, "reportStateRealtimePeriod": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["disabled", "enabled"], "type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {"setReportStatePeriod": {"arguments": [{"name": "value", "optional": false, "schema": {"enum": ["disabled", "enabled"], "type": "string"}}], "name": "setReportStatePeriod"}, "setReportStateRealtime": {"arguments": [{"name": "value", "optional": false, "schema": {"additionalProperties": false, "properties": {"duration": {"max": 30, "min": 10, "type": "integer"}, "state": {"enum": ["disabled", "enabled"], "type": "string"}, "unit": {"default": "minute", "enum": ["minute"], "type": "string"}}, "required": ["state"], "title": "ReportStateRealtime", "type": "object"}}], "name": "setReportStateRealtime"}, "setReportStateRealtimePeriod": {"arguments": [{"name": "value", "optional": false, "schema": {"enum": ["disabled", "enabled"], "type": "string"}}], "name": "setReportStateRealtimePeriod"}}, "ephemeral": false, "id": "custom.deviceReportStateConfiguration", "name": "Device Report State Configuration", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.energyType": {"capability_id": "custom.energyType", "capability_info": {"attributes": {"drMaxDuration": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"default": "min", "enum": ["min"], "type": "string"}, "value": {"maximum": 99999999, "minimum": 0, "type": "integer"}}, "required": ["value"], "type": "object"}}, "energySavingLevel": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "integer"}}, "required": ["value"], "type": "object"}}, "energySavingOperation": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "boolean"}}, "required": ["value"], "type": "object"}}, "energySavingOperationSupport": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "boolean"}}, "required": ["value"], "type": "object"}}, "energySavingSupport": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "boolean"}}, "required": ["value"], "type": "object"}}, "energyType": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "supportedEnergySavingLevels": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"type": "integer"}, "type": "array"}}, "required": ["value"], "type": "object"}}}, "commands": {"setEnergySavingLevel": {"arguments": [{"name": "energySavingLevel", "optional": false, "schema": {"type": "integer"}}], "name": "setEnergySavingLevel"}}, "ephemeral": false, "id": "custom.energyType", "name": "Energy Type", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.disabledComponents": {"capability_id": "custom.disabledComponents", "capability_info": {"attributes": {"disabledComponents": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"type": "string"}, "type": "array"}}, "required": [], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "custom.disabledComponents", "name": "Disabled Components", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.waterFilter": {"capability_id": "custom.waterFilter", "capability_info": {"attributes": {"waterFilterCapacity": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"enum": ["CC", "Cycle", "Gallon", "Hour", "Month"], "type": "string"}, "value": {"type": "integer"}}, "required": ["value", "unit"], "type": "object"}}, "waterFilterLastResetDate": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$", "type": "string"}}, "required": [], "type": "object"}}, "waterFilterResetType": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["replaceable", "washable", "notresetable"], "type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "waterFilterStatus": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["normal", "replace", "wash", "notused"], "type": "string"}}, "required": ["value"], "type": "object"}}, "waterFilterUsage": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"max": 100, "min": 0, "type": "integer"}}, "required": ["value"], "type": "object"}}, "waterFilterUsageStep": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"max": 100, "min": 1, "type": "integer"}}, "required": ["value"], "type": "object"}}}, "commands": {"resetWaterFilter": {"arguments": [], "name": "resetWaterFilter"}}, "ephemeral": false, "id": "custom.waterFilter", "name": "Water Filter", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.softwareUpdate": {"capability_id": "samsungce.softwareUpdate", "capability_info": {"attributes": {"availableModules": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "lastUpdatedDate": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)", "type": "string"}}, "required": ["value"], "type": "object"}}, "newVersionAvailable": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "boolean"}}, "required": ["value"], "type": "object"}}, "operatingState": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["none", "available", "preparing", "delayed", "inprogress", "checking", "completed"], "type": "string"}}, "required": ["value"], "type": "object"}}, "otnDUID": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "progress": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"default": "%", "enum": ["%"], "type": "string"}, "value": {"maximum": 100, "minimum": 0, "type": "integer"}}, "required": ["value"], "type": "object"}}, "targetModule": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"properties": {"currentVersion": {"type": "string"}, "moduleType": {"enum": ["mainController", "display", "inverter", "indoorUnit", "outdoorUnit"], "type": "string"}, "newVersion": {"type": "string"}}, "type": "object"}}, "required": ["value"], "type": "object"}}}, "commands": {"agreeUpdate": {"arguments": [{"name": "module", "optional": true, "schema": {"type": "string"}}], "name": "agreeUpdate"}, "disagreeUpdate": {"arguments": [{"name": "module", "optional": true, "schema": {"type": "string"}}], "name": "disagreeUpdate"}}, "ephemeral": false, "id": "samsungce.softwareUpdate", "name": "Software Update", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.deviceIdentification": {"capability_id": "samsungce.deviceIdentification", "capability_info": {"attributes": {"binaryId": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "description": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "micomAssayCode": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "modelClassificationCode": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"pattern": "^([0-9a-fA-F]){32}$", "type": "string"}}, "required": ["value"], "type": "object"}}, "modelName": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "serialNumber": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "serialNumberExtra": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "samsungce.deviceIdentification", "name": "Device Identification", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.driverVersion": {"capability_id": "samsungce.driverVersion", "capability_info": {"attributes": {"versionNumber": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "number"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "samsungce.driverVersion", "name": "Driver Version", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.powerCool": {"capability_id": "samsungce.powerCool", "capability_info": {"attributes": {"activated": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "boolean"}}, "required": ["value"], "type": "object"}}}, "commands": {"activate": {"arguments": [], "name": "activate"}, "deactivate": {"arguments": [], "name": "deactivate"}}, "ephemeral": false, "id": "samsungce.powerCool", "name": "Power Cool", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.powerFreeze": {"capability_id": "samsungce.powerFreeze", "capability_info": {"attributes": {"activated": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "boolean"}}, "required": ["value"], "type": "object"}}}, "commands": {"activate": {"arguments": [], "name": "activate"}, "deactivate": {"arguments": [], "name": "deactivate"}}, "ephemeral": false, "id": "samsungce.powerFreeze", "name": "Power Freeze", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.viewInside": {"capability_id": "samsungce.viewInside", "capability_info": {"attributes": {"contents": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"additionalProperties": false, "properties": {"expiredTime": {"pattern": "(^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$|^$)", "type": "string"}, "fileId": {"type": "string"}, "mimeType": {"pattern": "^[-\\w.]+/[-\\w.]+$", "type": "string"}}, "required": ["fileId", "mimeType"], "type": "object"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "lastUpdatedTime": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$", "type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {"refresh": {"arguments": [{"name": "fileId", "optional": false, "schema": {"type": "string"}}], "name": "refresh"}, "refreshAll": {"arguments": [], "name": "refreshAll"}}, "ephemeral": false, "id": "samsungce.viewInside", "name": "View Inside", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.runestoneHomeContext": {"capability_id": "samsungce.runestoneHomeContext", "capability_info": {"attributes": {"supportedContexts": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"additionalProperties": false, "properties": {"context": {"type": "string"}, "endTime": {"default": "99:99", "pattern": "^(?:(?:[01]\\d|2[0-3]):[0-5]\\d|99:99)$", "type": "string"}, "place": {"type": "string"}, "startTime": {"default": "99:99", "pattern": "^(?:(?:[01]\\d|2[0-3]):[0-5]\\d|99:99)$", "type": "string"}}, "required": ["context", "place", "startTime", "endTime"], "type": "object"}, "type": "array"}}, "required": ["value"], "type": "object"}}}, "commands": {"setContext": {"arguments": [{"name": "context", "optional": false, "schema": {"type": "string"}}], "name": "setContext"}, "setContextSnapshot": {"arguments": [{"name": "contextSnapshot", "optional": false, "schema": {"items": {"type": "string"}, "type": "array", "uniqueItems": true}}], "name": "setContextSnapshot"}, "setRecentlyUsedApps": {"arguments": [{"name": "recentlyUsedApps", "optional": false, "schema": {"items": {"type": "string"}, "type": "array", "uniqueItems": true}}], "name": "setRecentlyUsedApps"}}, "ephemeral": false, "id": "samsungce.runestoneHomeContext", "name": "Runestone Home Context", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "sec.wifiConfiguration": {"capability_id": "sec.wifiConfiguration", "capability_info": {"attributes": {"autoReconnection": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "boolean"}}, "required": ["value"], "type": "object"}}, "minVersion": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "protocolType": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["helper_hotspot", "ble_ocf", "ble_stdk"], "title": "protocolType", "type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "supportedAuthType": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["OPEN", "WEP", "WPA-PSK", "WPA2-PSK", "EAP", "SAE", "OWE", "FT-PSK"], "title": "supportedAuthType", "type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "supportedWiFiFreq": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["2.4G", "5G", "6G"], "title": "supportedWiFiFreq", "type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "sec.wifiConfiguration", "name": "Wifi configuration", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.fridgePantryInfo": {"capability_id": "samsungce.fridgePantryInfo", "capability_info": {"attributes": {"name": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "samsungce.fridgePantryInfo", "name": "Fridge Pantry Info", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "pantry-01"}, "samsungce.fridgePantryMode": {"capability_id": "samsungce.fridgePantryMode", "capability_info": {"attributes": {"mode": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "title": "Mode", "type": "object"}}, "supportedModes": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"type": "string"}, "type": "array"}}, "required": ["value"], "title": "Supported Modes", "type": "object"}}}, "commands": {"setMode": {"arguments": [{"name": "mode", "optional": false, "schema": {"type": "string"}}], "name": "setMode"}}, "ephemeral": false, "id": "samsungce.fridgePantryMode", "name": "Fridge Pantry Mode", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "pantry-01"}, "samsungce.meatAging": {"capability_id": "samsungce.meatAging", "capability_info": {"attributes": {"status": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"additionalProperties": false, "properties": {"agingMethod": {"enum": ["dry", "wet"], "type": "string"}, "agingPhase": {"pattern": "^(\\d+|expired)$", "type": "string"}, "daysSinceButchery": {"minimum": 0, "type": "integer"}, "id": {"minimum": 0, "type": "integer"}, "meatType": {"enum": ["sirloin", "striploin", "chuck", "others"], "type": "string"}, "phaseDaysInfo": {"additionalProperties": false, "patternProperties": {"^\\d+$": {"properties": {"agingDays": {"minimum": 0, "type": "integer"}}, "type": "object"}}, "type": "object"}, "progressDay": {"minimum": 0, "type": "integer"}, "zones": {"items": {"minimum": 0, "type": "integer"}, "minItems": 1, "type": "array", "uniqueItems": true}}, "required": ["id", "meatType", "progressDay", "daysSinceButchery", "zones", "agingMethod", "agingPhase", "phaseDaysInfo"], "type": "object"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "supportedAgingMethods": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["dry", "wet"], "type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "supportedMeatTypes": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["sirloin", "striploin", "chuck", "others"], "type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "zoneInfo": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"additionalProperties": false, "properties": {"capacity": {"minimum": 0, "type": "integer"}, "columns": {"minimum": 0, "type": "integer"}, "rows": {"minimum": 0, "type": "integer"}}, "required": ["rows", "columns", "capacity"], "type": "object"}}, "required": ["value"], "type": "object"}}}, "commands": {"addAging": {"arguments": [{"name": "agingOption", "optional": false, "schema": {"properties": {"agingMethod": {"enum": ["dry", "wet"], "type": "string"}, "daysSinceButchery": {"minimum": 0, "type": "integer"}, "meatType": {"enum": ["sirloin", "striploin", "chuck", "others"], "type": "string"}, "zones": {"items": {"minimum": 0, "type": "integer"}, "minItems": 1, "type": "array", "uniqueItems": true}}, "required": ["daysSinceButchery", "meatType", "agingMethod", "zones"], "type": "object"}}], "name": "addAging"}, "cancelAging": {"arguments": [{"name": "id", "optional": false, "schema": {"minimum": 0, "type": "integer"}}], "name": "cancelAging"}, "updateAging": {"arguments": [{"name": "id", "optional": false, "schema": {"minimum": 0, "type": "integer"}}, {"name": "agingOption", "optional": false, "schema": {"properties": {"agingMethod": {"enum": ["dry", "wet"], "type": "string"}, "daysSinceButchery": {"minimum": 0, "type": "integer"}, "meatType": {"enum": ["sirloin", "striploin", "chuck", "others"], "type": "string"}, "zones": {"items": {"minimum": 0, "type": "integer"}, "minItems": 1, "type": "array", "uniqueItems": true}}, "required": ["daysSinceButchery", "meatType", "agingMethod", "zones"], "type": "object"}}], "name": "updateAging"}}, "ephemeral": false, "id": "samsungce.meatAging", "name": "Meat Aging", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "pantry-01"}, "samsungce.foodDefrost": {"capability_id": "samsungce.foodDefrost", "capability_info": {"attributes": {"foodType": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"], "type": "object"}}, "operationTime": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"default": "min", "enum": ["min"], "type": "string"}, "value": {"minimum": 0, "type": "integer"}}, "required": ["value"], "type": "object"}}, "remainingTime": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"default": "min", "enum": ["min"], "type": "string"}, "value": {"minimum": 0, "type": "integer"}}, "required": ["value"], "type": "object"}}, "supportedOptions": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"additionalProperties": false, "patternProperties": {"^.{1,32}$": {"items": {"additionalProperties": false, "properties": {"weight": {"oneOf": [{"enum": ["auto"], "type": "string"}, {"minimum": 0, "type": "number"}]}}, "required": ["weight"], "type": "object"}, "type": "array"}}, "type": "object"}}, "required": ["value"], "type": "object"}}, "weight": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"default": "g", "enum": ["g"], "type": "string"}, "value": {"oneOf": [{"enum": ["auto"], "type": "string"}, {"minimum": 0, "type": "number"}]}}, "required": ["value"], "type": "object"}}}, "commands": {"setDefrost": {"arguments": [{"name": "foodType", "optional": false, "schema": {"type": "string"}}, {"name": "weight", "optional": false, "schema": {"oneOf": [{"enum": ["auto"], "type": "string"}, {"minimum": 0, "type": "number"}]}}], "name": "setDefrost"}}, "ephemeral": false, "id": "samsungce.foodDefrost", "name": "Food Defrost", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "pantry-01"}, "samsungce.weightMeasurement": {"capability_id": "samsungce.weightMeasurement", "capability_info": {"attributes": {"weight": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"enum": ["g", "kg"], "type": "string"}, "value": {"type": "number"}}, "required": ["value", "unit"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "samsungce.weightMeasurement", "name": "Weight Measurement", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "scale-11"}, "samsungce.weightMeasurementCalibration": {"capability_id": "samsungce.weightMeasurementCalibration", "capability_info": {"attributes": {}, "commands": {"zeroCalibrate": {"arguments": [], "name": "zeroCalibrate"}}, "ephemeral": false, "id": "samsungce.weightMeasurementCalibration", "name": "Weight Measurement Calibration", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "scale-10"}, "samsungce.connectionState": {"capability_id": "samsungce.connectionState", "capability_info": {"attributes": {"connectionState": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["connected", "disconnected"], "type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "samsungce.connectionState", "name": "Connection State", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "scale-10"}, "samsungce.scaleSettings": {"capability_id": "samsungce.scaleSettings", "capability_info": {"attributes": {"enabled": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "boolean"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "samsungce.scaleSettings", "name": "Scale Settings", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "scale-10"}, "videoStream": {"capability_id": "videoStream", "capability_info": {"attributes": {"stream": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}, "required": ["value"], "type": "object"}}}, "commands": {"startStream": {"arguments": [], "name": "startStream"}, "stopStream": {"arguments": [], "name": "stopStream"}}, "ephemeral": false, "id": "videoStream", "name": "Video Stream", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "motionSensor": {"capability_id": "motionSensor", "capability_info": {"attributes": {"motion": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["active", "inactive"], "title": "ActivityState", "type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "motionSensor", "name": "Motion Sensor", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "videoCapture": {"capability_id": "videoCapture", "capability_info": {"attributes": {"clip": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}, "required": ["value"], "type": "object"}}, "stream": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}, "required": ["value"], "type": "object"}}}, "commands": {"capture": {"arguments": [{"name": "startTime", "optional": false, "schema": {"pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$", "title": "Iso8601Date", "type": "string"}}, {"name": "captureTime", "optional": false, "schema": {"pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$", "title": "Iso8601Date", "type": "string"}}, {"name": "endTime", "optional": false, "schema": {"pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$", "title": "Iso8601Date", "type": "string"}}, {"name": "correlationId", "optional": true, "schema": {"maxLength": 255, "title": "String", "type": "string"}}, {"name": "reason", "optional": true, "schema": {"maxLength": 255, "title": "String", "type": "string"}}], "name": "capture"}}, "ephemeral": false, "id": "videoCapture", "name": "Video Capture", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "audioStream": {"capability_id": "audioStream", "capability_info": {"attributes": {"uri": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"format": "uri", "title": "URI", "type": "string"}}, "required": [], "type": "object"}}}, "commands": {"startAudio": {"arguments": [], "name": "startAudio"}, "stopAudio": {"arguments": [], "name": "stopAudio"}}, "ephemeral": false, "id": "audioStream", "name": "Audio Stream", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "imageCapture": {"capability_id": "imageCapture", "capability_info": {"attributes": {"captureTime": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$", "title": "Iso8601Date", "type": "string"}}, "required": ["value"], "type": "object"}}, "encrypted": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "boolean"}}, "required": ["value"], "type": "object"}}, "image": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"pattern": "^(https?):\\/\\/((?:[a-zA-Z0-9.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-zA-Z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?$", "title": "URL", "type": "string"}}, "required": ["value"], "type": "object"}, "setter": "take"}}, "commands": {"take": {"arguments": [{"name": "correlationId", "optional": true, "schema": {"maxLength": 255, "title": "String", "type": "string"}}, {"name": "reason", "optional": true, "schema": {"maxLength": 255, "title": "String", "type": "string"}}], "name": "take"}}, "ephemeral": false, "id": "imageCapture", "name": "Image Capture", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "objectDetection": {"capability_id": "objectDetection", "capability_info": {"attributes": {"detected": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"additionalProperties": false, "properties": {"data": {"title": "JsonObject", "type": "object"}, "qty": {"minimum": 0, "title": "PositiveInteger", "type": "integer"}, "value": {"maxLength": 255, "title": "String", "type": "string"}}, "required": ["value"], "title": "ObjectDetectionValue", "type": "object"}}, "required": ["value"], "type": "object"}}, "supportedValues": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"maxLength": 255, "title": "String", "type": "string"}, "type": "array"}}, "required": [], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "objectDetection", "name": "Object Detection", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "signalStrength": {"capability_id": "signalStrength", "capability_info": {"attributes": {"lqi": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maximum": 255, "minimum": 0, "type": "integer"}}, "required": ["value"], "type": "object"}}, "rssi": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"default": "dBm", "enum": ["dBm"], "type": "string"}, "value": {"maximum": 0, "minimum": -200, "type": "number"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "signalStrength", "name": "Signal Strength", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "soundSensor": {"capability_id": "soundSensor", "capability_info": {"attributes": {"sound": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["detected", "not detected"], "type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "soundSensor", "name": "Sound Sensor", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "remoteControlStatus": {"capability_id": "remoteControlStatus", "capability_info": {"attributes": {"remoteControlEnabled": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["false", "true"], "type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "remoteControlStatus", "name": "Remote Control Status", "status": "live", "version": 1}, "capability_version": 1, "component_id": "main"}, "dishwasherOperatingState": {"capability_id": "dishwasherOperatingState", "capability_info": {"attributes": {"completionTime": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$", "title": "Iso8601Date", "type": "string"}}, "required": ["value"], "type": "object"}}, "dishwasherJobState": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["airwash", "cooling", "drying", "finish", "preDrain", "prewash", "rinse", "spin", "unknown", "wash", "wrinklePrevent"], "title": "DishwasherJobState", "type": "string"}}, "required": ["value"], "type": "object"}}, "machineState": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["pause", "run", "stop"], "title": "MachineState", "type": "string"}}, "required": ["value"], "type": "object"}, "setter": "setMachineState"}, "supportedMachineStates": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["pause", "run", "stop"], "title": "MachineState", "type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}}, "commands": {"setMachineState": {"arguments": [{"name": "state", "optional": false, "schema": {"enum": ["pause", "run", "stop"], "title": "MachineState", "type": "string"}}], "name": "setMachineState"}}, "ephemeral": false, "id": "dishwasherOperatingState", "name": "Dishwasher Operating State", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.dishwasherOperatingProgress": {"capability_id": "custom.dishwasherOperatingProgress", "capability_info": {"attributes": {"dishwasherOperatingProgress": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["none", "delaywash", "weightsensing", "prewash", "wash", "rinse", "spin", "sud", "drying", "airwash", "cooling", "wrinkleprevent", "finish", "waitend", "predrain", "sanitizing", "autoreleasedrying"], "type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "custom.dishwasherOperatingProgress", "name": "Dishwasher Operating Progress", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.dishwasherOperatingPercentage": {"capability_id": "custom.dishwasherOperatingPercentage", "capability_info": {"attributes": {"dishwasherOperatingPercentage": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"maximum": 100, "minimum": 0, "type": "integer"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "custom.dishwasherOperatingPercentage", "name": "Dishwasher Operating Percentage", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.dishwasherDelayStartTime": {"capability_id": "custom.dishwasherDelayStartTime", "capability_info": {"attributes": {"dishwasherDelayStartTime": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"pattern": "^((([0-1][0-9]|2[0-3]):([0-5][0-9]):00)|(24:00:00))$", "type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {"setDishwasherDelayStartTime": {"arguments": [{"name": "dishwasherDelayStartTime", "optional": false, "schema": {"pattern": "^((([0-1][0-9]|2[0-3]):([0-5][0-9]):00)|(24:00:00))$", "type": "string"}}], "name": "setDishwasherDelayStartTime"}}, "ephemeral": false, "id": "custom.dishwasherDelayStartTime", "name": "Dishwasher Delay Start Time", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "custom.supportedOptions": {"capability_id": "custom.supportedOptions", "capability_info": {"attributes": {"referenceTable": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"additionalProperties": false, "properties": {"id": {"type": "string"}}, "type": "object"}}, "required": [], "type": "object"}}, "supportedCourses": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "custom.supportedOptions", "name": "Supported Options", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.dishwasherJobState": {"capability_id": "samsungce.dishwasherJobState", "capability_info": {"attributes": {"dishwasherJobState": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["none", "delayWashing", "preWashing", "washing", "rinsing", "drying", "cooling", "draining", "finished", "preDrain", "sanitizing", "autoReleaseDrying"], "type": "string"}}, "required": ["value"], "type": "object"}}, "scheduledJobs": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"properties": {"jobName": {"enum": ["none", "delayWashing", "preWashing", "washing", "rinsing", "drying", "cooling", "draining", "finished", "preDrain", "sanitizing", "autoReleaseDrying"], "type": "string"}, "timeInSec": {"type": "integer"}}, "required": ["jobName", "timeInSec"], "type": "object"}, "type": "array"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "samsungce.dishwasherJobState", "name": "Dishwasher Job State", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.dishwasherWashingCourse": {"capability_id": "samsungce.dishwasherWashingCourse", "capability_info": {"attributes": {"customCourseCandidates": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"], "type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "supportedCourses": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"], "type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "washingCourse": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"], "type": "string"}}, "required": ["value"], "type": "object"}, "setter": "setWashingCourse"}}, "commands": {"setCustomCourse": {"arguments": [{"name": "course", "optional": false, "schema": {"enum": ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"], "type": "string"}}], "name": "setCustomCourse"}, "setWashingCourse": {"arguments": [{"name": "course", "optional": false, "schema": {"enum": ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"], "type": "string"}}], "name": "setWashingCourse"}, "startWashingCourse": {"arguments": [{"name": "course", "optional": false, "schema": {"enum": ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"], "type": "string"}}], "name": "startWashingCourse"}, "startWashingCourseWithOptions": {"arguments": [{"name": "course", "optional": false, "schema": {"enum": ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"], "type": "string"}}, {"name": "options", "optional": false, "schema": {"additionalProperties": false, "properties": {"addRinse": {"type": "boolean"}, "dryPlus": {"type": "boolean"}, "highTempWash": {"type": "boolean"}, "hotAirDry": {"type": "boolean"}, "rinsePlus": {"type": "boolean"}, "sanitize": {"type": "boolean"}, "sanitizingWash": {"type": "boolean"}, "selectedZone": {"enum": ["none", "lower", "upper", "all"], "type": "string"}, "speedBooster": {"type": "boolean"}, "steamSoak": {"type": "boolean"}, "stormWash": {"type": "boolean"}, "zoneBooster": {"enum": ["none", "left", "right", "all"], "type": "string"}}, "type": "object"}}], "name": "startWashingCourseWithOptions"}}, "ephemeral": false, "id": "samsungce.dishwasherWashingCourse", "name": "Dishwasher Washing Course", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.dishwasherWashingCourseDetails": {"capability_id": "samsungce.dishwasherWashingCourseDetails", "capability_info": {"attributes": {"energyUsageMax": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "integer"}}, "required": ["value"], "type": "object"}}, "predefinedCourses": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"properties": {"courseName": {"enum": ["auto", "eco", "intensive", "delicate", "express", "preWash", "selfClean", "extraSilence", "rinseOnly", "plastics", "potsAndPans", "babycare", "normal", "selfSanitize", "dryOnly", "upperExpress", "night", "babyBottle", "coldRinse", "glasses", "quick", "heavy", "daily", "chef", "preBlast", "steamSoak", "rinseDry", "machineCare", "AI", "nightSilence", "express_0C", "daily_09", "eco_08", "eco_10"], "type": "string"}, "energyUsage": {"minimum": 1, "type": "number"}, "expectedTime": {"properties": {"time": {"type": "integer"}, "unit": {"enum": ["hour", "min", "sec"], "type": "string"}}, "required": ["time"], "type": "object"}, "options": {"properties": {"addRinse": {"properties": {"default": {"type": "boolean"}, "settable": {"items": {"type": "boolean"}, "type": "array"}}, "required": ["default", "settable"], "type": "object"}, "dryPlus": {"properties": {"default": {"type": "boolean"}, "settable": {"items": {"type": "boolean"}, "type": "array"}}, "required": ["default", "settable"], "type": "object"}, "highTempWash": {"properties": {"default": {"type": "boolean"}, "settable": {"items": {"type": "boolean"}, "type": "array"}}, "required": ["default", "settable"], "type": "object"}, "hotAirDry": {"properties": {"default": {"type": "boolean"}, "settable": {"items": {"type": "boolean"}, "type": "array"}}, "required": ["default", "settable"], "type": "object"}, "rinsePlus": {"properties": {"default": {"type": "boolean"}, "settable": {"items": {"type": "boolean"}, "type": "array"}}, "required": ["default", "settable"], "type": "object"}, "sanitize": {"properties": {"default": {"type": "boolean"}, "settable": {"items": {"type": "boolean"}, "type": "array"}}, "required": ["default", "settable"], "type": "object"}, "sanitizingWash": {"properties": {"default": {"type": "boolean"}, "settable": {"items": {"type": "boolean"}, "type": "array"}}, "required": ["default", "settable"], "type": "object"}, "selectedZone": {"properties": {"default": {"type": "string"}, "settable": {"items": {"enum": ["none", "lower", "upper", "all"], "type": "string"}, "type": "array"}}, "required": ["default", "settable"], "type": "object"}, "speedBooster": {"properties": {"default": {"type": "boolean"}, "settable": {"items": {"type": "boolean"}, "type": "array"}}, "required": ["default", "settable"], "type": "object"}, "steamSoak": {"properties": {"default": {"type": "boolean"}, "settable": {"items": {"type": "boolean"}, "type": "array"}}, "required": ["default", "settable"], "type": "object"}, "stormWash": {"properties": {"default": {"type": "boolean"}, "settable": {"items": {"type": "boolean"}, "type": "array"}}, "required": ["default", "settable"], "type": "object"}, "zoneBooster": {"properties": {"default": {"type": "string"}, "settable": {"items": {"enum": ["none", "left", "right", "all"], "type": "string"}, "type": "array"}}, "required": ["default", "settable"], "type": "object"}}, "type": "object"}, "temperature": {"properties": {"max": {"type": "integer"}, "min": {"type": "integer"}, "unit": {"enum": ["C", "F"], "type": "string"}}, "required": ["min", "max"], "type": "object"}, "waterUsage": {"minimum": 0, "type": "number"}}, "required": ["courseName", "energyUsage", "waterUsage", "expectedTime", "options"], "type": "object"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "waterUsageMax": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "integer"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "samsungce.dishwasherWashingCourseDetails", "name": "Dishwasher Washing Course Details", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.dishwasherOperation": {"capability_id": "samsungce.dishwasherOperation", "capability_info": {"attributes": {"operatingState": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["idle", "ready", "running", "paused"], "type": "string"}}, "required": ["value"], "type": "object"}, "setter": "setOperatingState"}, "operationTime": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"enum": ["hour", "min", "sec"], "type": "string"}, "value": {"type": "number"}}, "required": ["value", "unit"], "type": "object"}}, "progressPercentage": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"type": "number"}}, "required": ["value"], "type": "object"}}, "remainingTime": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"enum": ["hour", "min", "sec"], "type": "string"}, "value": {"type": "number"}}, "required": ["value", "unit"], "type": "object"}}, "remainingTimeStr": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"pattern": "^[0-2]{0,1}[0-9]:[0-5][0-9]$", "type": "string"}}, "required": ["value"], "type": "object"}}, "reservable": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"default": false, "type": "boolean"}}, "required": ["value"], "type": "object"}}, "supportedOperatingState": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["idle", "ready", "running", "paused"], "type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "timeLeftToStart": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"unit": {"enum": ["hour", "min", "sec"], "type": "string"}, "value": {"type": "number"}}, "required": ["value", "unit"], "type": "object"}}}, "commands": {"cancel": {"arguments": [{"name": "drain", "optional": true, "schema": {"type": "boolean"}}], "name": "cancel"}, "pause": {"arguments": [], "name": "pause"}, "resume": {"arguments": [], "name": "resume"}, "setOperatingState": {"arguments": [{"name": "operatingState", "optional": false, "schema": {"enum": ["running", "paused", "ready"], "type": "string"}}], "name": "setOperatingState"}, "start": {"arguments": [{"name": "option", "optional": true, "schema": {"type": "object"}}], "name": "start"}, "startLater": {"arguments": [{"name": "delay", "optional": false, "schema": {"type": "number"}}], "name": "startLater"}}, "ephemeral": false, "id": "samsungce.dishwasherOperation", "name": "Dishwasher Operation", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.dishwasherWashingOptions": {"capability_id": "samsungce.dishwasherWashingOptions", "capability_info": {"attributes": {"addRinse": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"properties": {"settable": {"items": {"type": "boolean"}, "type": "array"}, "value": {"type": "boolean"}}, "required": ["value", "settable"], "type": "object"}}, "required": [], "type": "object"}}, "dryPlus": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"properties": {"settable": {"items": {"type": "boolean"}, "type": "array"}, "value": {"type": "boolean"}}, "required": ["value", "settable"], "type": "object"}}, "required": [], "type": "object"}}, "highTempWash": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"properties": {"settable": {"items": {"type": "boolean"}, "type": "array"}, "value": {"type": "boolean"}}, "required": ["value", "settable"], "type": "object"}}, "required": [], "type": "object"}}, "hotAirDry": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"properties": {"settable": {"items": {"type": "boolean"}, "type": "array"}, "value": {"type": "boolean"}}, "required": ["value", "settable"], "type": "object"}}, "required": [], "type": "object"}}, "rinsePlus": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"properties": {"settable": {"items": {"type": "boolean"}, "type": "array"}, "value": {"type": "boolean"}}, "required": ["value", "settable"], "type": "object"}}, "required": [], "type": "object"}}, "sanitize": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"properties": {"settable": {"items": {"type": "boolean"}, "type": "array"}, "value": {"type": "boolean"}}, "required": ["value", "settable"], "type": "object"}}, "required": [], "type": "object"}}, "sanitizingWash": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"properties": {"settable": {"items": {"type": "boolean"}, "type": "array"}, "value": {"type": "boolean"}}, "required": ["value", "settable"], "type": "object"}}, "required": [], "type": "object"}}, "selectedZone": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"properties": {"settable": {"items": {"enum": ["none", "lower", "upper", "all"], "type": "string"}, "type": "array"}, "value": {"enum": ["none", "lower", "upper", "all"], "type": "string"}}, "required": ["value", "settable"], "type": "object"}}, "required": [], "type": "object"}}, "speedBooster": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"properties": {"settable": {"items": {"type": "boolean"}, "type": "array"}, "value": {"type": "boolean"}}, "required": ["value", "settable"], "type": "object"}}, "required": [], "type": "object"}}, "steamSoak": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"properties": {"settable": {"items": {"type": "boolean"}, "type": "array"}, "value": {"type": "boolean"}}, "required": ["value", "settable"], "type": "object"}}, "required": [], "type": "object"}}, "stormWash": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"properties": {"settable": {"items": {"type": "boolean"}, "type": "array"}, "value": {"type": "boolean"}}, "required": ["value", "settable"], "type": "object"}}, "required": [], "type": "object"}}, "supportedList": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"items": {"enum": ["selectedZone", "zoneBooster", "speedBooster", "sanitize", "highTempWash", "steamSoak", "addRinse", "dryPlus", "stormWash", "sanitizingWash", "rinsePlus", "hotAirDry"], "type": "string"}, "type": "array"}}, "required": ["value"], "type": "object"}}, "zoneBooster": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"properties": {"settable": {"items": {"enum": ["none", "left", "right", "all"], "type": "string"}, "type": "array"}, "value": {"enum": ["none", "left", "right", "all"], "type": "string"}}, "required": ["value", "settable"], "type": "object"}}, "required": [], "type": "object"}}}, "commands": {"setAddRinse": {"arguments": [{"name": "addRinse", "optional": false, "schema": {"type": "boolean"}}], "name": "setAddRinse"}, "setDryPlus": {"arguments": [{"name": "dryPlus", "optional": false, "schema": {"type": "boolean"}}], "name": "setDryPlus"}, "setHighTempWash": {"arguments": [{"name": "highTempWash", "optional": false, "schema": {"type": "boolean"}}], "name": "setHighTempWash"}, "setHotAirDry": {"arguments": [{"name": "hotAirDry", "optional": false, "schema": {"type": "boolean"}}], "name": "setHotAirDry"}, "setOptions": {"arguments": [{"name": "options", "optional": false, "schema": {"additionalProperties": false, "properties": {"addRinse": {"type": "boolean"}, "dryPlus": {"type": "boolean"}, "highTempWash": {"type": "boolean"}, "hotAirDry": {"type": "boolean"}, "rinsePlus": {"type": "boolean"}, "sanitize": {"type": "boolean"}, "sanitizingWash": {"type": "boolean"}, "selectedZone": {"enum": ["none", "lower", "upper", "all"], "type": "string"}, "speedBooster": {"type": "boolean"}, "steamSoak": {"type": "boolean"}, "stormWash": {"type": "boolean"}, "zoneBooster": {"enum": ["none", "left", "right", "all"], "type": "string"}}, "type": "object"}}], "name": "setOptions"}, "setRinsePlus": {"arguments": [{"name": "rinsePlus", "optional": false, "schema": {"type": "boolean"}}], "name": "setRinsePlus"}, "setSanitize": {"arguments": [{"name": "sanitize", "optional": false, "schema": {"type": "boolean"}}], "name": "setSanitize"}, "setSanitizingWash": {"arguments": [{"name": "sanitizingWash", "optional": false, "schema": {"type": "boolean"}}], "name": "setSanitizingWash"}, "setSelectedZone": {"arguments": [{"name": "selectedZone", "optional": false, "schema": {"enum": ["none", "lower", "upper", "all"], "type": "string"}}], "name": "setSelectedZone"}, "setSpeedBooster": {"arguments": [{"name": "speedBooster", "optional": false, "schema": {"type": "boolean"}}], "name": "setSpeedBooster"}, "setSteamSoak": {"arguments": [{"name": "steamSoak", "optional": false, "schema": {"type": "boolean"}}], "name": "setSteamSoak"}, "setStormWash": {"arguments": [{"name": "stormWash", "optional": false, "schema": {"type": "boolean"}}], "name": "setStormWash"}, "setZoneBooster": {"arguments": [{"name": "zoneBooster", "optional": false, "schema": {"enum": ["none", "left", "right", "all"], "type": "string"}}], "name": "setZoneBooster"}}, "ephemeral": false, "id": "samsungce.dishwasherWashingOptions", "name": "Dishwasher Washing Options", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.kidsLock": {"capability_id": "samsungce.kidsLock", "capability_info": {"attributes": {"lockState": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"enum": ["locked", "unlocked", "paused"], "type": "string"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "samsungce.kidsLock", "name": "Kids Lock", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}, "samsungce.waterConsumptionReport": {"capability_id": "samsungce.waterConsumptionReport", "capability_info": {"attributes": {"waterConsumption": {"enumCommands": [], "schema": {"additionalProperties": false, "properties": {"value": {"additionalProperties": false, "properties": {"cumulativeAmount": {"description": "Accumulated water consumption (ml) during the reporting period", "type": "number"}, "delta": {"description": "Difference of current and previous consumptionAmount", "type": "number"}, "end": {"description": "End date of the report period (Iso8601)", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$", "type": "string"}, "start": {"description": "Start date of the report period (Iso8601)", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$", "type": "string"}}, "type": "object"}}, "required": ["value"], "type": "object"}}}, "commands": {}, "ephemeral": false, "id": "samsungce.waterConsumptionReport", "name": "Water Consumption Report", "status": "proposed", "version": 1}, "capability_version": 1, "component_id": "main"}}, "online_info": [{"name": "Acceleration Sensor", "status": "live", "attributes": {"acceleration": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "ActivityState", "type": "string", "enum": ["active", "inactive"]}}, "required": ["value"]}, "values": ["active", "inactive"]}}, "commands": {}, "id": "accelerationSensor", "version": 1, "i18n": {"label": "Acceleration Sensor", "description": "The Acceleration Sensor capability allows for acceleration detection. Some use cases for SmartApps using this capability would be detecting if a washing machine is vibrating, or if a case has moved (particularly useful for knowing if a weapon case has been moved).", "attributes": {"acceleration": {"label": "vibration", "description": "A string representation of whether the sensor is active or not", "i18n": {"value": {"active": {"label": "Vibration detected", "description": "if acceleration is detected"}, "inactive": {"label": "No vibration", "description": "if no acceleration is detected"}}}, "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Activity Lighting Mode", "status": "proposed", "attributes": {"lightingMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["reading", "writing", "computer", "night", "sleepPreparation", "day", "cozy", "soft"]}}, "required": ["value"]}, "values": ["reading", "writing", "computer", "night", "sleepPreparation", "day", "cozy", "soft"], "setter": "setLightingMode"}}, "commands": {"setLightingMode": {"arguments": [{"name": "lightingMode", "schema": {"type": "string", "enum": ["reading", "writing", "computer", "night", "sleepPreparation", "day", "cozy", "soft"]}, "optional": false}], "name": "setLightingMode"}}, "id": "activityLightingMode", "version": 1, "i18n": {"attributes": {"lightingMode": {"i18n": {"value": {"reading": {"label": "Reading", "description": "4000K natural light for comfortable reading."}, "writing": {"label": "Writing", "description": "5000K white light that makes it easy to focus on your work."}, "computer": {"label": "Computer", "description": "Backlight only to help you immerse yourself in movies and games."}, "day": {"label": "Daylight", "description": "Energising light that's similar to sunlight."}, "night": {"label": "Night", "description": "Dim the light to help you relax."}, "sleepPreparation": {"label": "Sleep", "description": "Get a breathing guide to help you relax and fall asleep. Breathe in for 4 seconds as the light gets brighter, hold your breath for 7 seconds when the light is steady, and breathe out for 8 seconds as the light gets darker. The light will turn off after 4 breaths."}, "cozy": {"label": "Cosy", "description": "Warm light to make you feel comfortable."}, "soft": {"label": "Soft", "description": "Gentle light to set the mood."}}}, "label": "Light mode", "description": "Current lighting mode of the device", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}, "commands": {"setLightingMode": {"description": "Set the lighting mode of a device", "arguments": {"lightingMode": {"description": "The desired lighting mode of a device", "i18n": {"reading": {"label": "Reading"}, "writing": {"label": "Writing"}, "computer": {"label": "Computer"}, "day": {"label": "Daylight"}, "night": {"label": "Night"}, "sleepPreparation": {"label": "Sleep"}, "cozy": {"label": "Cosy"}, "soft": {"label": "Soft"}}}}}}}}, {"name": "Activity Sensor", "status": "live", "attributes": {"activity": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "ActivityType", "type": "string", "enum": ["noActivity", "falling", "lying", "sitting", "standing", "eating"]}}, "required": ["value"]}, "values": ["noActivity", "falling", "lying", "sitting", "standing", "eating"]}}, "commands": {}, "id": "activitySensor", "version": 1, "i18n": {"description": "Allows for the ability to read activity sensor device states", "attributes": {"activity": {"description": "The current state of the activity sensor", "i18n": {"value": {"noActivity": {"description": "The value when no activity is detected", "label": "No activity detected"}, "falling": {"description": "The value when falling is detected", "label": "Falling detected"}, "lying": {"description": "The value when lying is detected", "label": "Lying detected"}, "sitting": {"description": "The value when sitting is detected", "label": "Sitting detected"}, "standing": {"description": "The value when standing is detected", "label": "Standing detected"}, "eating": {"description": "The value when eating is detected", "label": "Eating detected"}}}, "label": "activity", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Actuator", "status": "deprecated", "attributes": {}, "commands": {}, "id": "actuator", "version": 1, "i18n": {"description": "The Actuator capability is a \"tagging\" capability. It defines no attributes or commands. In SmartThings terms, it represents that a Device has commands."}}, {"name": "Air Conditioner Fan Mode", "status": "live", "attributes": {"fanMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "supportedAcFanModes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string"}}}}}}, "commands": {"setFanMode": {"arguments": [{"name": "fanMode", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "setFanMode"}}, "id": "airConditionerFanMode", "version": 1, "i18n": {"description": "Maintains and sets the state of an air conditioner's fan", "attributes": {"fanMode": {"description": "The current mode of the fan", "label": "fan mode", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}", "i18n": {"value": {"turbo": {"label": "Turbo"}, "medium": {"label": "Medium"}, "pet": {"label": "pet"}, "auto": {"label": "Auto"}, "high": {"label": "High"}, "sleep": {"label": "Sleep"}, "low": {"label": "Low"}, "max": {"label": "MAX"}, "windFree": {"label": "Wind Free"}, "smart": {"label": "Smart"}}}}, "supportedAcFanModes": {"description": "Supported states for this air conditioner fan to be in", "label": "supported ac fan modes", "displayTemplate": "{{device.label}} {{attribute}} are {{value}}"}}, "commands": {"setFanMode": {"description": "Set the fan's mode", "arguments": {"fanMode": {"description": "The fan mode", "i18n": {"turbo": {"label": "Turbo"}, "medium": {"label": "Medium"}, "pet": {"label": "pet"}, "auto": {"label": "Auto"}, "high": {"label": "High"}, "sleep": {"label": "Sleep"}, "low": {"label": "Low"}, "max": {"label": "MAX"}, "windFree": {"label": "Wind Free"}, "smart": {"label": "Smart"}}}}}}}}, {"name": "Air Conditioner Mode", "status": "live", "attributes": {"airConditionerMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "required": ["value"]}, "setter": "setAirConditionerMode"}, "supportedAcModes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string"}}}}}}, "commands": {"setAirConditionerMode": {"arguments": [{"name": "mode", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "setAirConditionerMode"}}, "id": "airConditionerMode", "version": 1, "i18n": {"description": "Allows for the control of the air conditioner.", "attributes": {"airConditionerMode": {"description": "Current mode of the air conditioner", "label": "air conditioner mode", "i18n": {"value": {"ai": {"label": "AI"}, "aIComfort": {"label": "AI Comfort Cooling"}, "auto": {"label": "Auto"}, "comfortCooling": {"label": "Comfort Cooling"}, "cool": {"label": "Cool"}, "fan": {"label": "Fan"}, "heat": {"label": "Heat"}, "clean": {"label": "Purify"}, "dry": {"label": "Dry"}, "coolClean": {"label": "Cool, Purify"}, "dryClean": {"label": "Dry, Purify"}, "heatClean": {"label": "Heat, Purify"}, "fanOnly": {"label": "Purify"}, "wind": {"label": "Purify"}, "notSupported": {"label": "Not Supported"}, "force": {"label": "force"}, "heatex": {"label": "HeatEX"}, "sleep": {"label": "Sleep"}, "smartVentilation": {"label": "Smart Ventilation"}, "bypass": {"label": "ByPass"}, "std": {"label": "std"}, "power": {"label": "power"}, "eco": {"label": "eco"}, "purification": {"label": "Purify"}, "ventilation": {"label": "Ventilation"}}}, "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedAcModes": {"description": "Supported states for this air conditioner to be in", "label": "supported ac modes", "displayTemplate": "{{device.label}} {{attribute}} are {{value}}"}}, "commands": {"setAirConditionerMode": {"description": "Set the air conditioner mode", "arguments": {"mode": {"description": "Set the air conditioner mode", "i18n": {"ai": {"label": "AI"}, "aIComfort": {"label": "AI Comfort Cooling"}, "auto": {"label": "Auto"}, "comfortCooling": {"label": "Comfort Cooling"}, "cool": {"label": "Cool"}, "fan": {"label": "Fan"}, "heat": {"label": "Heat"}, "clean": {"label": "Purify"}, "dry": {"label": "Dry"}, "coolClean": {"label": "Cool, Purify"}, "dryClean": {"label": "Dry, Purify"}, "heatClean": {"label": "Heat, Purify"}, "fanOnly": {"label": "Purify"}, "wind": {"label": "Purify"}, "notSupported": {"label": "Not Supported"}, "force": {"label": "force"}, "heatex": {"label": "HeatEX"}, "sleep": {"label": "Sleep"}, "smartVentilation": {"label": "Smart Ventilation"}, "bypass": {"label": "ByPass"}, "std": {"label": "std"}, "power": {"label": "power"}, "eco": {"label": "eco"}, "airconditionermode": {"label": "airConditionerMode"}, "purification": {"label": "Purify"}, "ventilation": {"label": "Ventilation"}}}}}}}}, {"name": "Air Flow Direction", "status": "dead", "attributes": {"airFlowDirection": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "AirFlowDirection", "type": "string", "enum": ["fixed", "vertical", "horizontal", "all"]}}}, "values": ["fixed", "vertical", "horizontal", "all"]}}, "commands": {"setAirFlowDirection": {"arguments": [{"name": "airFlowDirection", "schema": {"title": "AirFlowDirection", "type": "string", "enum": ["fixed", "vertical", "horizontal", "all"]}, "optional": false}], "name": "setAirFlowDirection"}}, "id": "airFlowDirection", "version": 1, "i18n": {"description": "A representation of the direction of air flow oscillation", "attributes": {"airFlowDirection": {"description": "The current direction of air flow oscillation; an enum of fixed, vertical, horizontal, all", "label": "air flow direction", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}, "commands": {"setAirFlowDirection": {"description": "set direction of air flow", "arguments": {"airFlowDirection": {"description": "air flow direction"}}}}}}, {"name": "Air Purifier Fan Mode", "status": "proposed", "attributes": {"airPurifierFanMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "AirPurifierFanMode", "type": "string", "enum": ["auto", "sleep", "low", "medium", "high", "quiet", "windFree"]}}}, "values": ["auto", "sleep", "low", "medium", "high", "quiet", "windFree"]}, "supportedAirPurifierFanModes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["auto", "sleep", "low", "medium", "high", "quiet", "windFree"]}}}}}}, "commands": {"setAirPurifierFanMode": {"arguments": [{"name": "airPurifierFanMode", "schema": {"title": "AirPurifierFanMode", "type": "string", "enum": ["auto", "sleep", "low", "medium", "high", "quiet", "windFree"]}, "optional": false}], "name": "setAirPurifierFanMode"}}, "id": "airPurifierFanMode", "version": 1, "i18n": {"description": "Maintains and sets the state of an air conditioner's fan", "attributes": {"airPurifierFanMode": {"description": "The current mode of the air purifier fan, an enum of auto, low, medium, high, sleep, quiet or windFree", "label": "air purifier fan state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedAirPurifierFanModes": {"description": "Supported states for this air purifier fan to be in", "label": "supported air purifier fan modes", "displayTemplate": "{{device.label}} {{attribute}} are {{value}}"}}, "commands": {"setAirPurifierFanMode": {"description": "Set the air purifier fan's mode", "arguments": {"fanMode": {"description": "The air purifier fan mode"}}}}}}, {"name": "Air Quality Sensor", "status": "live", "attributes": {"airQuality": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 100}, "unit": {"type": "string", "enum": ["CAQI"], "default": "CAQI"}}, "required": ["value"]}}}, "commands": {}, "id": "airQualitySensor", "version": 1, "i18n": {"description": "Gets the air quality number.", "attributes": {"airQuality": {"description": "Current air quality number", "label": "air quality", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Alarm System Arm Only", "status": "dead", "attributes": {"alarmSystemStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "AlarmSystemState", "type": "string", "enum": ["away", "off", "stay"]}}, "required": ["value"]}, "values": ["away", "off", "stay"], "enumCommands": [{"command": "sendEvent(alarmSystemStatus,stay)", "value": "stay"}, {"command": "sendEvent(alarmSystemStatus,away)", "value": "away"}]}}, "commands": {"sendEvent(alarmSystemStatus,stay)": {"arguments": [], "name": "sendStayEvent"}, "sendEvent(alarmSystemStatus,away)": {"arguments": [], "name": "sendAwayEvent"}}, "id": "alarmSystemArmOnly", "version": 1, "i18n": {"description": "Allows for the control of the alarm system arm only.", "attributes": {"alarmSystemStatus": {"description": "The current status of the alarm system, away, 'off', or stay", "i18n": {"value": {"away": {"description": "The alarm is in \"away\" status"}, "off": {"description": "The alarm is in \"off\" status"}, "stay": {"description": "The alarm is in \"stay\" status"}}}, "label": "alarm system status", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"sendEvent(alarmSystemStatus,stay)": {"description": "Set the alarm status to \"stay\""}, "sendEvent(alarmSystemStatus,away)": {"description": "Set the alarm status to \"away\""}}}}, {"name": "Alarm System", "status": "dead", "attributes": {"alarmSystemStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "AlarmSystemState", "type": "string", "enum": ["away", "off", "stay"]}}, "required": ["value"]}, "values": ["away", "off", "stay"], "enumCommands": [{"command": "sendEvent(alarmSystemStatus,off)", "value": "off"}, {"command": "sendEvent(alarmSystemStatus,stay)", "value": "stay"}, {"command": "sendEvent(alarmSystemStatus,away)", "value": "away"}]}}, "commands": {"sendEvent(alarmSystemStatus,off)": {"arguments": [], "name": "sendOffEvent"}, "sendEvent(alarmSystemStatus,stay)": {"arguments": [], "name": "sendStayEvent"}, "sendEvent(alarmSystemStatus,away)": {"arguments": [], "name": "sendAwayEvent"}}, "id": "alarmSystem", "version": 1, "i18n": {"description": "Allows for the control of the alarm system.", "attributes": {"alarmSystemStatus": {"description": "Current status of the alarm system", "i18n": {"value": {"away": {"description": "The alarm system is in \"away\" mode"}, "off": {"description": "The alarm system is in \"off\" mode"}, "stay": {"description": "The alarm system is in \"stay\" mode"}}}, "label": "alarm system status", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"sendEvent(alarmSystemStatus,off)": {"description": "Set the alarm system to \"off\" mode"}, "sendEvent(alarmSystemStatus,stay)": {"description": "Set the alarm system to \"stay\" mode"}, "sendEvent(alarmSystemStatus,away)": {"description": "Set the alarm system to \"away\" mode"}}}}, {"name": "Alarm", "status": "live", "attributes": {"alarm": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "AlertState", "type": "string", "enum": ["both", "off", "siren", "strobe"]}}, "required": ["value"]}, "values": ["both", "off", "siren", "strobe"], "enumCommands": [{"command": "both", "value": "both"}, {"command": "off", "value": "off"}, {"command": "siren", "value": "siren"}, {"command": "strobe", "value": "strobe"}]}}, "commands": {"both": {"arguments": [], "name": "both"}, "off": {"arguments": [], "name": "off"}, "siren": {"arguments": [], "name": "siren"}, "strobe": {"arguments": [], "name": "strobe"}}, "id": "alarm", "version": 1, "i18n": {"attributes": {"alarm": {"i18n": {"value": {"strobe": {"description": "if the alarm is strobing", "label": "Strobe"}, "off": {"description": "if the alarm is turned off", "label": "Off"}, "both": {"description": "if the alarm is strobing and sounding the alarm", "label": "Siren and strobe"}, "siren": {"description": "if the alarm is sounding the siren", "label": "Siren"}}}, "description": "A string representation of whether the switch is on or off", "label": "alarm", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "commands": {"siren": {"description": "Sound the siren on the alarm"}, "strobe": {"description": "Strobe the alarm"}, "off": {"description": "Turn the alarm (siren and strobe) off"}, "both": {"description": "Strobe and sound the alarm"}}, "note": "Z-Wave sometimes uses the term \"Alarm\" to refer to an important notification. The Alarm Capability is used in SmartThings to define a device that acts as an Alarm in the traditional sense (e.g., has a siren and such).", "description": "The Alarm capability allows for interacting with devices that serve as alarms"}}, {"name": "Astronomical Data", "status": "dead", "attributes": {"sunrise": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["true"]}}, "required": ["value"]}, "values": ["true"], "setter": "sendEvent(sunrise)"}, "sunset": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["true"]}}, "required": ["value"]}, "values": ["true"], "setter": "sendEvent(sunset)"}, "sunriseTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}, "setter": "sendEvent(sunriseTime)"}, "sunsetTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}, "setter": "sendEvent(sunsetTime)"}}, "commands": {"sendEvent(sunrise)": {"arguments": [], "name": "sendEvent(sunrise)"}, "sendEvent(sunset)": {"arguments": [], "name": "sendEvent(sunset)"}, "sendEvent(sunriseTime)": {"arguments": [], "name": "sendEvent(sunriseTime)"}, "sendEvent(sunsetTime)": {"arguments": [], "name": "sendEvent(sunsetTime)"}}, "id": "astronomicalData", "version": 1, "i18n": {"description": "Generates data and events for local sunrise and sunset", "attributes": {"sunset": {"description": "Event generated at sunset", "i18n": {"value": {"true": {"description": "Always true"}}}, "label": "sunset", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "sunriseTime": {"description": "Date/time of the next sunrise", "label": "sunrise time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "sunsetTime": {"description": "Date/time of the next sunset", "label": "sunset time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "sunrise": {"description": "Event generated at sunrise", "i18n": {"value": {"true": {"description": "Always true"}}}, "label": "sunrise", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"sendEvent(sunriseTime)": {"description": "Generate an event with the next sunrise time"}, "sendEvent(sunrise)": {"description": "Generate a sunrise event"}, "sendEvent(sunsetTime)": {"description": "Generate an event with the next sunset time"}, "sendEvent(sunset)": {"description": "Generate a sunset event"}}}}, {"name": "Atmospheric Pressure Measurement", "status": "proposed", "attributes": {"atmosphericPressure": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 110}, "unit": {"type": "string", "enum": ["kPa"], "default": "kPa"}}, "required": ["value"]}}}, "commands": {}, "id": "atmosphericPressureMeasurement", "version": 1, "i18n": {"description": "Measure Atmospheric Pressure", "attributes": {"atmosphericPressure": {"description": "The level of Atmospheric Pressure", "label": "atmospheric pressure", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}kPa"}}}}, {"name": "Audio Capture", "status": "proposed", "attributes": {"clip": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}, "required": ["value"]}, "actedOnBy": ["capture"]}, "stream": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}, "required": ["value"]}}}, "commands": {"capture": {"arguments": [{"name": "startTime", "schema": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "optional": false}, {"name": "captureTime", "schema": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "optional": false}, {"name": "endTime", "schema": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "optional": false}, {"name": "correlationId", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": true}, {"name": "reason", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": true}], "name": "capture"}}, "id": "audioCapture", "version": 1, "i18n": {"description": "Allows for the control of the audio capture.", "commands": {"capture": {"description": "Set the audio capture schedule", "arguments": {"startTime": {"description": "Time, in ISO 8601 format, when the audio capture should start"}, "captureTime": {"description": "Audio capture time, in ISO 8601 format"}, "endTime": {"description": "Time, in ISO 8601 format, when the audio capture should end"}}}}, "attributes": {"clip": {"description": "Audio clip details", "label": "clip", "displayTemplate": "{{device.label}} {{attribute}} was updated"}, "stream": {"description": "Audio stream details", "label": "stream", "displayTemplate": "{{device.label}} {{attribute}} was updated"}}}}, {"name": "Audio Mute", "status": "live", "attributes": {"mute": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "MuteState", "type": "string", "enum": ["muted", "unmuted"]}}, "required": ["value"]}, "values": ["muted", "unmuted"], "setter": "setMute", "enumCommands": [{"command": "mute", "value": "muted"}, {"command": "unmute", "value": "unmuted"}]}}, "commands": {"setMute": {"arguments": [{"name": "state", "schema": {"title": "MuteState", "type": "string", "enum": ["muted", "unmuted"]}, "optional": false}], "name": "setMute"}, "mute": {"arguments": [], "name": "mute"}, "unmute": {"arguments": [], "name": "unmute"}}, "id": "audioMute", "version": 1, "i18n": {"description": "Allows for the control of audio mute.", "attributes": {"mute": {"description": "Current status of the audio mute", "i18n": {"value": {"muted": {"description": "The audio is in \"muted\" state", "label": "muted"}, "unmuted": {"description": "The audio is in \"unmuted\" state", "label": "unmuted"}}}, "label": "mute", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setMute": {"description": "Set the state of the audio mute", "arguments": {"state": {"description": "Set the audio mute state to \"muted\" or \"unmuted\""}}}, "mute": {"description": "Set the audio to mute state"}, "unmute": {"description": "Set the audio to unmute state"}}}}, {"name": "Audio Notification", "status": "live", "attributes": {}, "commands": {"playTrack": {"arguments": [{"name": "uri", "schema": {"title": "URI", "type": "string", "format": "uri"}, "optional": false}, {"name": "level", "schema": {"type": "integer", "minimum": 0, "maximum": 100}, "optional": true}], "name": "playTrack"}, "playTrackAndResume": {"arguments": [{"name": "uri", "schema": {"title": "URI", "type": "string", "format": "uri"}, "optional": false}, {"name": "level", "schema": {"type": "integer", "minimum": 0, "maximum": 100}, "optional": true}], "name": "playTrackAndResume"}, "playTrackAndRestore": {"arguments": [{"name": "uri", "schema": {"title": "URI", "type": "string", "format": "uri"}, "optional": false}, {"name": "level", "schema": {"type": "integer", "minimum": 0, "maximum": 100}, "optional": true}], "name": "playTrackAndRestore"}}, "id": "audioNotification", "version": 1, "i18n": {"commands": {"playTrack": {"arguments": {"level": {"description": "The volume at which to play the track"}, "uri": {"description": "The URI of the track to be played"}}, "description": "Play the given track"}, "playTrackAndResume": {"arguments": {"level": {"description": "The volume at which to play the track"}, "uri": {"description": "The URI of the track to be played"}}, "description": "Play the given track and resume playback of the previously playing track"}, "playTrackAndRestore": {"arguments": {"level": {"description": "The volume at which to play the track"}, "uri": {"description": "The URI of the track to be played"}}, "description": "Play the given track and restore the volume to its previous level"}}, "description": "Play a track or a message as an audio notification"}}, {"name": "Audio Stream", "status": "live", "attributes": {"uri": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "URI", "type": "string", "format": "uri"}}}}}, "commands": {"startAudio": {"arguments": [], "name": "startAudio"}, "stopAudio": {"arguments": [], "name": "stopAudio"}}, "id": "audioStream", "version": 1, "i18n": {"description": "Allows for the ability to stream audio to a device", "attributes": {"uri": {"description": "Current status of the audio stream", "label": "uri", "displayTemplate": "{{device.label}} {{attribute}} was updated"}}, "commands": {"startAudio": {"description": "Start the audio stream"}, "stopAudio": {"description": "Stop the audio stream"}}}}, {"name": "Audio Track Addressing", "status": "proposed", "attributes": {}, "commands": {"setAudioTrack": {"arguments": [{"name": "trackToSet", "schema": {"title": "AudioTrackAddress", "type": "object"}, "optional": false}], "name": "setAudioTrack"}}, "id": "audioTrackAddressing", "version": 1, "i18n": {"description": "Allows for the control of the audio track addressing.", "commands": {"setAudioTrack": {"description": "Set the audio track", "arguments": {"trackToSet": {"description": "Set the audio to this audio track address"}}}}}}, {"name": "Audio Track Data", "status": "proposed", "attributes": {"audioTrackData": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "AudioTrackData", "type": "object", "additionalProperties": false, "properties": {"title": {"title": "String", "type": "string", "maxLength": 255}, "artist": {"title": "String", "type": "string", "maxLength": 255}, "album": {"title": "String", "type": "string", "maxLength": 255}, "albumArtUrl": {"title": "URI", "type": "string", "format": "uri"}, "mediaSource": {"title": "String", "type": "string", "maxLength": 255}}, "required": ["title"]}}, "required": ["value"]}}, "totalTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}}}, "elapsedTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}}}}, "commands": {}, "id": "audioTrackData", "version": 1, "i18n": {"description": "Gets the value of the audio track data.", "attributes": {"audioTrackData": {"description": "A JSON representation of the current audio track data", "label": "audio track data", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "totalTime": {"description": "Total time in seconds of the current song/track", "label": "total time", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "elapsedTime": {"description": "Elapsed time in seconds of the current song/track", "label": "elapsed time", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Audio Volume", "status": "live", "attributes": {"volume": {"schema": {"title": "IntegerPercent", "type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 100}, "unit": {"type": "string", "enum": ["%"], "default": "%"}}, "required": ["value"]}, "setter": "setVolume", "actedOnBy": ["volumeUp", "volumeDown"]}}, "commands": {"setVolume": {"arguments": [{"name": "volume", "schema": {"type": "integer", "minimum": 0, "maximum": 100}, "optional": false}], "name": "setVolume"}, "volumeUp": {"arguments": [], "name": "volumeUp"}, "volumeDown": {"arguments": [], "name": "volumeDown"}}, "id": "audioVolume", "version": 1, "i18n": {"description": "Allows for the control of audio volume.", "attributes": {"volume": {"description": "The current volume setting of the audio", "label": "volume", "displayTemplate": "{{attribute}} of {{device.label}}: {{value}}%"}}, "commands": {"setVolume": {"description": "Set the audio volume level", "arguments": {"volume": {"description": "A value to which the audio volume level should be set"}}}, "volumeUp": {"description": "Turn the audio volume up"}, "volumeDown": {"description": "Turn the audio volume down"}}}}, {"name": "Battery", "status": "live", "attributes": {"battery": {"schema": {"title": "IntegerPercent", "type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 100}, "unit": {"type": "string", "enum": ["%"], "default": "%"}}, "required": ["value"]}, "unit": "%"}}, "commands": {}, "id": "battery", "version": 1, "i18n": {"attributes": {"battery": {"description": "An indication of the status of the battery", "label": "battery", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}%"}}, "description": "Defines that the device has a battery"}}, {"name": "Beacon", "status": "deprecated", "attributes": {"presence": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PresenceState", "type": "string", "enum": ["present", "not present"]}}, "required": ["value"]}, "values": ["not present", "present"]}}, "commands": {}, "id": "beacon", "version": 1, "i18n": {"attributes": {"presence": {"i18n": {"value": {"present": {"description": "Value when beacon is present"}, "not present": {"description": "Value when beacon is not present"}}}, "description": "The presence value of the beacon", "label": "presence", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "Detect whether or not the beacon is present"}}, {"name": "Body Mass Index Measurement", "status": "live", "attributes": {"bmiMeasurement": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number"}, "unit": {"type": "string", "enum": ["kg/m^2"], "default": "kg/m^2"}}, "required": ["value"]}}}, "commands": {}, "id": "bodyMassIndexMeasurement", "version": 1, "i18n": {"description": "Allows for the ability to measure body mass index", "attributes": {"bmiMeasurement": {"description": "Current body mass index measured in kilograms per meter squared", "label": "body mass index", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}kg/m^2"}}}}, {"name": "Body Weight Measurement", "status": "proposed", "attributes": {"bodyWeightMeasurement": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number"}, "unit": {"type": "string", "enum": ["kg", "lbs", "\u65a4"], "default": "kg"}}, "required": ["value", "unit"]}}}, "commands": {}, "id": "bodyWeightMeasurement", "version": 1, "i18n": {"description": "Allows for the ability to measure relative body weight", "attributes": {"bodyWeightMeasurement": {"description": "Current body weight measured in kg, lbs, or \u65a4", "label": "body weight", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}{{unit}}"}}}}, {"name": "Bridge", "status": "deprecated", "attributes": {}, "commands": {}, "id": "bridge", "version": 1, "i18n": {"description": "The Bridge capability is a \"tagging\" capability. It defines no attributes or commands. In SmartThings terms, it represents that a Device is a bridge to other devices."}}, {"name": "Buffered Video Capture", "status": "deprecated", "attributes": {"clip": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}, "required": ["value"]}, "actedOnBy": ["capture"]}}, "commands": {"capture": {"arguments": [{"name": "startTime", "schema": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "optional": false}, {"name": "captureTime", "schema": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "optional": false}, {"name": "endTime", "schema": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "optional": false}], "name": "capture"}}, "id": "bufferedVideoCapture", "version": 1, "i18n": {"description": "Allows for the control of the buffered video capture.", "commands": {"capture": {"description": "Set the buffered video capture schedule", "arguments": {"startTime": {"description": "Time, in ISO 8601 format, when the buffered video capture should start"}, "captureTime": {"description": "Buffered video capture time, in ISO 8601 format"}, "endTime": {"description": "Time, in ISO 8601 format, when the buffered video capture should end"}}}}, "attributes": {"clip": {"description": "Buffered video clip details", "label": "clip", "displayTemplate": "{{device.label}} {{attribute}} was updated"}}}}, {"name": "Bulb", "status": "dead", "attributes": {"switch": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "SwitchState", "type": "string", "enum": ["on", "off"]}}, "required": ["value"]}, "values": ["off", "on"], "enumCommands": [{"command": "off", "value": "off"}, {"command": "on", "value": "on"}]}}, "commands": {"off": {"arguments": [], "name": "off"}, "on": {"arguments": [], "name": "on"}}, "id": "bulb", "version": 1, "i18n": {"attributes": {"switch": {"description": "A string representation of whether the bulb is on or off", "i18n": {"value": {"on": {"description": "The value of the ``switch`` attribute if the bulb is on"}, "off": {"description": "The value of the ``switch`` attribute if the bulb is off"}}}, "label": "switch", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"on": {"description": "Turn a bulb on"}, "off": {"description": "Turn a bulb off"}}, "description": "Allows for the control of a bulb device"}}, {"name": "Button", "status": "live", "attributes": {"button": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "ButtonState", "type": "string", "enum": ["pushed", "held", "double", "pushed_2x", "pushed_3x", "pushed_4x", "pushed_5x", "pushed_6x", "down", "down_2x", "down_3x", "down_4x", "down_5x", "down_6x", "down_hold", "up", "up_2x", "up_3x", "up_4x", "up_5x", "up_6x", "up_hold", "swipe_up", "swipe_down", "swipe_left", "swipe_right"]}}, "required": ["value"]}, "values": ["pushed", "held", "double", "pushed_2x", "pushed_3x", "pushed_4x", "pushed_5x", "pushed_6x", "down", "down_2x", "down_3x", "down_4x", "down_5x", "down_6x", "down_hold", "up", "up_2x", "up_3x", "up_4x", "up_5x", "up_6x", "up_hold", "swipe_up", "swipe_down", "swipe_left", "swipe_right"]}, "numberOfButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}, "required": ["value"]}}, "supportedButtonValues": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "ButtonState", "type": "string", "enum": ["pushed", "held", "double", "pushed_2x", "pushed_3x", "pushed_4x", "pushed_5x", "pushed_6x", "down", "down_2x", "down_3x", "down_4x", "down_5x", "down_6x", "down_hold", "up", "up_2x", "up_3x", "up_4x", "up_5x", "up_6x", "up_hold", "swipe_up", "swipe_down", "swipe_left", "swipe_right"]}}}}}}, "commands": {}, "id": "button", "version": 1, "i18n": {"attributes": {"button": {"description": "The state of the button", "i18n": {"value": {"pushed": {"description": "The value if the button is pushed", "label": "pushed"}, "held": {"description": "The value if the button is held", "label": "held"}, "double": {"description": "The value if the button is pushed twice", "label": "pushed twice"}, "pushed_2x": {"description": "The value if the button is pushed twice", "label": "pushed twice"}, "pushed_3x": {"description": "The value if the button is pushed three times", "label": "pushed three times"}, "pushed_4x": {"description": "The value if the button is pushed four times", "label": "pushed four times"}, "pushed_5x": {"description": "The value if the button is pushed five times", "label": "pushed five times"}, "pushed_6x": {"description": "The value if the button is pushed six times", "label": "pushed six times"}, "down": {"label": "clicked down", "description": "The value if the button is clicked down"}, "down_2x": {"label": "clicked down twice", "description": "The value if the button is clicked down twice"}, "down_3x": {"label": "clicked down three times", "description": "The value if the button is clicked down three times"}, "down_4x": {"label": "clicked down four times", "description": "The value if the button is clicked down four times"}, "down_5x": {"label": "clicked down five times", "description": "The value if the button is clicked down five times"}, "down_6x": {"label": "clicked down six times", "description": "The value if the button is clicked down six times"}, "down_hold": {"label": "clicked down and held", "description": "The value if the button is clicked down and held"}, "up": {"label": "clicked up", "description": "The value if the button is clicked up"}, "up_2x": {"label": "clicked up twice", "description": "The value if the button is clicked up twice"}, "up_3x": {"label": "clicked up three times", "description": "The value if the button is clicked up three times"}, "up_4x": {"label": "clicked up four times", "description": "The value if the button is clicked up four times"}, "up_5x": {"label": "clicked up five times", "description": "The value if the button is clicked up five times"}, "up_6x": {"label": "clicked up six times", "description": "The value if the button is clicked up six times"}, "up_hold": {"label": "clicked up and held", "description": "The value if the button is clicked up and held"}, "swipe_up": {"label": "swipe up", "description": "The value if the button is swiped up from botton to top"}, "swipe_down": {"label": "swipe down", "description": "The value if the button is swiped down from top to bottom"}, "swipe_left": {"label": "swipe left", "description": "The value if the button is swiped from right to left"}, "swipe_right": {"label": "swipe right", "description": "The value if the button is swiped from left to right"}}}, "label": "button", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "numberOfButtons": {"description": "The number of buttons on the device", "label": "number of buttons", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedButtonValues": {"description": "List of valid button attribute values", "label": "supported button values", "displayTemplate": "{{device.label}} {{attribute}} is {{value}}"}}, "description": "A device with one or more buttons"}}, {"name": "Bypassable", "status": "live", "attributes": {"bypassStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "BypassState", "type": "string", "enum": ["ready", "notReady", "bypassed"]}}, "required": ["value"]}, "values": ["ready", "notReady", "bypassed"]}}, "commands": {}, "id": "bypassable", "version": 1, "i18n": {"attributes": {"bypassStatus": {"i18n": {"value": {"bypassed": {"description": "The device has been bypassed and won't trigger an alarm", "label": "bypassed"}, "ready": {"description": "The device is ready for arming", "label": "ready"}, "notReady": {"description": "The device is not ready for arming", "label": "notReady"}}}, "description": "The bypassed status for a the device", "label": "bypass status", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "A device that is capable of being bypassed during security system arming"}}, {"id": "cameraPreset", "version": 1, "status": "proposed", "name": "Camera Preset", "attributes": {"presets": {"schema": {"type": "object", "properties": {"value": {"type": "array", "items": {"title": "Camera Preset", "type": "object", "additionalProperties": false, "properties": {"name": {"type": "string"}, "id": {"type": "string"}, "data": {"title": "JsonObject", "type": "object"}}, "required": ["name", "id", "data"]}}}, "additionalProperties": false, "required": ["value"]}, "enumCommands": []}}, "commands": {"execute": {"arguments": [{"name": "id", "schema": {"type": "string"}, "optional": false}], "name": "execute"}, "create": {"arguments": [{"name": "name", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}, {"name": "id", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": true}, {"name": "data", "schema": {"title": "JsonObject", "type": "object"}, "optional": true}], "name": "create"}, "delete": {"arguments": [{"name": "id", "schema": {"type": "string"}, "optional": false}], "name": "delete"}, "update": {"arguments": [{"name": "id", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}, {"name": "name", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": true}, {"name": "data", "schema": {"title": "JsonObject", "type": "object"}, "optional": true}], "name": "update"}}, "i18n": {"description": "Allow for preset camera positon and control settings", "attributes": {"presets": {"description": "A Json representation of the current presets. It will be a JSON array of objects containing 'name', 'id', and 'data' as mandatory fields. Format, '``[{\"id\":\"<id>\",\"name\":\"<name>\",\"data\":{<data>}},{}..]``'", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}", "label": "Presets"}}, "commands": {"execute": {"description": "Go to a preset", "arguments": {"id": {"description": "The id of the preset to go to"}}}, "create": {"description": "Create a preset", "arguments": {"name": {"description": "Name for the new preset"}, "id": {"description": "The id of the preset to update"}, "data": {"description": "New settings for the preset"}}}, "delete": {"description": "Delete a preset", "arguments": {"id": {"description": "The id of the preset to delete"}}}, "update": {"description": "Update a preset", "arguments": {"name": {"description": "New name for the preset"}, "id": {"description": "The id of the preset to update"}, "data": {"description": "New settings for the preset"}}}}}}, {"name": "Carbon Dioxide Health Concern", "status": "live", "attributes": {"carbonDioxideHealthConcern": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "AirQualityHealthConcern", "type": "string", "enum": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "required": ["value"]}, "values": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "commands": {}, "id": "carbonDioxideHealthConcern", "version": 1, "i18n": {"description": "Health Concern levels of carbon dioxide sensor measurements.", "attributes": {"carbonDioxideHealthConcern": {"description": "Current health concern of carbon dioxide, based on the relative health hazard", "label": "carbon dioxide health concern", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}}}, {"name": "Carbon Dioxide Measurement", "status": "live", "attributes": {"carbonDioxide": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 1000000}, "unit": {"type": "string", "enum": ["ppm"], "default": "ppm"}}, "required": ["value"]}}}, "commands": {}, "id": "carbonDioxideMeasurement", "version": 1, "i18n": {"description": "Measure carbon dioxide levels", "attributes": {"carbonDioxide": {"description": "The level of carbon dioxide detected", "label": "carbon dioxide", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}ppm"}}}}, {"name": "Carbon Monoxide Detector", "status": "live", "attributes": {"carbonMonoxide": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "CarbonMonoxideState", "type": "string", "enum": ["clear", "detected", "tested"]}}, "required": ["value"]}, "values": ["clear", "detected", "tested"]}}, "commands": {}, "id": "carbonMonoxideDetector", "version": 1, "i18n": {"attributes": {"carbonMonoxide": {"i18n": {"value": {"clear": {"description": "No carbon monoxide detected", "label": "Clear"}, "detected": {"description": "Carbon monoxide detected", "label": "Detected"}, "tested": {"description": "Carbon monoxide device test button was activated", "label": "Tested"}}}, "description": "The state of the carbon monoxide device", "label": "carbon monoxide", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "description": "Measure carbon monoxide levels"}}, {"name": "Carbon Monoxide Measurement", "status": "live", "attributes": {"carbonMonoxideLevel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 1000000}, "unit": {"type": "string", "enum": ["ppm"], "default": "ppm"}}, "required": ["value", "unit"]}}}, "commands": {}, "id": "carbonMonoxideMeasurement", "version": 1, "i18n": {"description": "Measure carbon monoxide levels", "attributes": {"carbonMonoxideLevel": {"description": "The level of carbon monoxide detected", "label": "carbon monoxide level", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}ppm"}}}}, {"name": "Chime", "status": "proposed", "attributes": {"chime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["chime", "off"]}}, "required": ["value"]}, "values": ["chime", "off"], "enumCommands": [{"command": "chime", "value": "chime"}, {"command": "off", "value": "off"}]}}, "commands": {"chime": {"arguments": [], "name": "chime"}, "off": {"arguments": [], "name": "off"}}, "id": "chime", "version": 1, "i18n": {"attributes": {"chime": {"i18n": {"value": {"chime": {"description": "if the chime is active", "label": "Chime"}, "off": {"description": "if the chime is turned off", "label": "Off"}}}, "description": "A string representation of whether the chime is active or off", "label": "chime", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"chime": {"description": "Enable the chime"}, "off": {"description": "Disable the chime"}}, "description": "The Chime capability allows for interacting with devices that serve as a non-alarming attention getter; such as door bells and time-of-day indicators."}}, {"name": "Color Control", "status": "live", "attributes": {"color": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}, "setter": "setColor", "actedOnBy": ["setHue", "setSaturation"]}, "hue": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveNumber", "type": "number", "minimum": 0}}}, "setter": "setHue"}, "saturation": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveNumber", "type": "number", "minimum": 0}}}, "setter": "setSaturation"}}, "commands": {"setColor": {"arguments": [{"name": "color", "schema": {"title": "COLOR_MAP", "type": "object", "additionalProperties": false, "properties": {"hue": {"type": "number"}, "saturation": {"type": "number"}, "hex": {"type": "string", "maxLength": 7}, "level": {"type": "integer"}, "switch": {"type": "string", "maxLength": 3}}}, "optional": false}], "name": "setColor"}, "setHue": {"arguments": [{"name": "hue", "schema": {"title": "PositiveNumber", "type": "number", "minimum": 0}, "optional": false}], "name": "setHue"}, "setSaturation": {"arguments": [{"name": "saturation", "schema": {"title": "PositiveNumber", "type": "number", "minimum": 0}, "optional": false}], "name": "setSaturation"}}, "id": "colorControl", "version": 1, "i18n": {"commands": {"setColor": {"arguments": {"color": {"i18n": {"saturation": {"description": "The desired saturation value"}, "hue": {"description": "The desired hue value"}}, "description": "The color map supports the following key/value pairs:"}}, "description": "Sets the color based on the values passed in with the given map"}, "setSaturation": {"description": "Set the saturation value of the color", "arguments": {"saturation": {"description": "A number in the range ``0-100`` representing the saturation as a value of percent"}}}, "setHue": {"description": "Set the hue value of the color", "arguments": {"hue": {"description": "A number in the range ``0-100`` representing the hue as a value of percent"}}}}, "attributes": {"hue": {"description": "``0-100`` (percent)", "label": "hue", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "saturation": {"description": "``0-100`` (percent)", "label": "saturation", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "color": {"description": "``{\"hue\":\"0-100 (percent)\", \"saturation\":\"0-100 (percent)\"}``", "label": "color", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "Allows for control of a color changing device by setting its hue, saturation, and color values"}}, {"name": "Color Temperature", "status": "live", "attributes": {"colorTemperature": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 1, "maximum": 30000}, "unit": {"type": "string", "enum": ["K"], "default": "K"}}, "required": ["value"]}, "setter": "setColorTemperature"}}, "commands": {"setColorTemperature": {"arguments": [{"name": "temperature", "schema": {"type": "integer", "minimum": 1, "maximum": 30000}, "optional": false}], "name": "setColorTemperature"}}, "id": "colorTemperature", "version": 1, "i18n": {"attributes": {"colorTemperature": {"description": "A number that represents the color temperature, measured in degrees Kelvin", "label": "color temperature", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}K"}}, "commands": {"setColorTemperature": {"arguments": {"temperature": {"description": "The value to set the color temperature attribute to, in Kelvin"}}, "description": "Set the color temperature to the specified value"}}, "description": "Set the color temperature attribute of a color changing device"}}, {"id": "color", "status": "proposed", "name": "Color", "attributes": {"colorValue": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "object", "additionalProperties": false, "properties": {"hue": {"type": "number", "minimum": 0.0, "maximum": 360.0}, "saturation": {"type": "number", "minimum": 0.0, "maximum": 100.0}}}}, "required": ["value"]}, "setter": "setColorValue"}}, "commands": {"setColorValue": {"arguments": [{"name": "colorValue", "schema": {"type": "object", "additionalProperties": false, "properties": {"hue": {"type": "number", "minimum": 0.0, "maximum": 360.0}, "saturation": {"type": "number", "minimum": 0.0, "maximum": 100.0}}, "required": ["hue", "saturation"]}, "optional": false}], "name": "setColorValue"}}, "version": 1, "i18n": {"description": "Allows for control of a color changing device by setting its hue and saturation.", "attributes": {"colorValue": {"label": "color value", "description": "The hue and saturation value", "displayTemplate": "{{device.label}} {{attribute}} was updated"}}, "commands": {"setColorValue": {"label": "set color value", "description": "set the color value", "arguments": {"colorSetting": {"label": "color value", "description": "the hue and saturation values"}, "switchLevel": {"label": "level", "description": "the switch (dimming) level"}}}}}}, {"id": "colorMode", "status": "proposed", "name": "Color Mode", "attributes": {"colorMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["color", "colorTemperature", "other"]}}}, "values": ["color", "colorTemperature", "other"]}}, "commands": {}, "version": 1, "i18n": {"label": "Color Mode", "description": "Describes if a device is in color or color temperature mode if it supports both since state is mutually exclusive.", "attributes": {"colorMode": {"label": "color mode", "description": "the color mode of the device", "i18n": {"value": {"color": {"label": "color"}, "colorTemperature": {"label": "color temperature"}, "other": {"label": "other"}}}, "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Configuration", "status": "live", "attributes": {}, "commands": {"configure": {"arguments": [], "name": "configure"}}, "id": "configuration", "version": 1, "i18n": {"description": "Allow configuration of devices that support it", "commands": {"configure": {"description": "This is where the device specific configuration commands can be implemented"}}, "note": "This capability is meant to be used only in device handlers. The implementation of the ``configure()`` method will be very specific to the physical device. The commands that populate the ``configure()`` method will most likely be found in the device manufacturer's documentation. During the device installation lifecycle, the ``configure()`` method is called after the device has been assigned a Device Handler."}}, {"name": "Consumable", "status": "proposed", "attributes": {"consumableStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "ConsumableState", "type": "string", "enum": ["good", "maintenance_required", "missing", "order", "replace"]}}, "required": ["value"]}, "values": ["good", "maintenance_required", "missing", "order", "replace"], "setter": "setConsumableStatus"}}, "commands": {"setConsumableStatus": {"arguments": [{"name": "status", "schema": {"title": "ConsumableState", "type": "string", "enum": ["good", "maintenance_required", "missing", "order", "replace"]}, "optional": false}], "name": "setConsumableStatus"}}, "id": "consumable", "version": 1, "i18n": {"commands": {"setConsumableStatus": {"description": "Set the consumable status", "arguments": {"status": {"description": "Should be one of ``good``, ``maintenance_required``, ``missing``, ``order``, or ``replace``"}}}}, "attributes": {"consumableStatus": {"i18n": {"value": {"order": {"description": "A replacement component should be ordered"}, "good": {"description": "The component is in good health"}, "missing": {"description": "The component is missing"}, "maintenance_required": {"description": "The comopnent needs maintenance"}, "replace": {"description": "The component should be replaced"}}}, "description": "The status of replaceable components", "label": "consumable status", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "For devices with replaceable components"}}, {"name": "Contact Sensor", "status": "live", "attributes": {"contact": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "ContactState", "type": "string", "enum": ["closed", "open"]}}, "required": ["value"]}, "values": ["closed", "open"]}}, "commands": {}, "id": "contactSensor", "version": 1, "i18n": {"description": "Allows reading the value of a contact sensor device", "attributes": {"contact": {"i18n": {"value": {"open": {"description": "The value if open", "label": "Open"}, "closed": {"description": "The value if closed", "label": "Closed"}}}, "description": "The current state of the contact sensor", "label": "contact", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Current Measurement", "status": "proposed", "attributes": {"current": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Number", "type": "number"}, "unit": {"type": "string", "enum": ["A"], "default": "A"}}, "required": ["value"]}}}, "commands": {}, "id": "currentMeasurement", "version": 1, "i18n": {"description": "Get the value of current measured from devices that support it", "attributes": {"current": {"description": "A number representing the current measured", "label": "current", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}A"}}}}, {"name": "Demand Response Load Control", "status": "proposed", "attributes": {"drlcStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "DemandResponseLoadControlStatus", "type": "object", "additionalProperties": false, "properties": {"drlcType": {"title": "DrlcType", "type": "integer", "minimum": 0, "maximum": 1}, "drlcLevel": {"title": "DrlcLevel", "type": "integer", "minimum": -1, "maximum": 4}, "start": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "duration": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "override": {"type": "boolean"}}}}, "required": ["value"]}}}, "commands": {"requestDrlcAction": {"arguments": [{"name": "drlcType", "schema": {"title": "DrlcType", "type": "integer", "minimum": 0, "maximum": 1}, "optional": false}, {"name": "drlcLevel", "schema": {"title": "DrlcLevel", "type": "integer", "minimum": -1, "maximum": 4}, "optional": false}, {"name": "start", "schema": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "optional": false}, {"name": "duration", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": false}, {"name": "reportingPeriod", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": true}], "name": "requestDrlcAction"}, "overrideDrlcAction": {"arguments": [{"name": "value", "schema": {"type": "boolean"}, "optional": false}], "name": "overrideDrlcAction"}}, "id": "demandResponseLoadControl", "version": 1, "i18n": {"attributes": {"drlcStatus": {"i18n": {"value": {"prop": {"description": "The requested load reduction duration in minutes"}}}, "description": "The status of the current or last active DRLC request", "label": "drlc status", "displayTemplate": "{{device.label}} {{attribute}} was updated"}}, "commands": {"requestDrlcAction": {"arguments": {"reportingPeriod": {"description": "Optional reporting period in minutes. If specified the device will generate a drlcStatus event periodically while load reduction is in effect. If not specified then events will only be generated when the DRLC status changes."}, "drlcType": {"i18n": {"0": {"description": "Delay Appliance Load"}, "1": {"description": "Temporary Appliance Load Reduction"}}, "description": "Type of load reduction request. One of the following:"}, "start": {"description": "The date & time at which load reduction is requested to start"}, "duration": {"description": "The length of time load reduction should take place, in minutes"}}, "description": "Request an appliance to reduce its load to aleviate power grid demmand"}, "overrideDrlcAction": {"description": "Override the requested load reduction request"}}, "description": "Allows requests to be made to appliances to temporarily reduce their energy usage to reduce demand on the power grid"}}, {"name": "Dew Point", "status": "live", "attributes": {"dewpoint": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "unit": {"title": "TemperatureUnit", "type": "string", "enum": ["F", "C"]}}, "required": ["value", "unit"]}}}, "commands": {}, "id": "dewPoint", "version": 1, "i18n": {"description": "Gets the dew point temperature reading.", "attributes": {"dewpoint": {"description": "Current dew point, measured as a temperature value", "label": "dew point", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}} {{unit}}"}}}}, {"name": "Dishwasher Mode", "status": "proposed", "attributes": {"dishwasherMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "DishwasherMode", "type": "string", "enum": ["eco", "intense", "auto", "quick", "rinse", "dry"]}}, "required": ["value"]}, "values": ["eco", "intense", "auto", "quick", "rinse", "dry"], "setter": "setDishwasherMode"}}, "commands": {"setDishwasherMode": {"arguments": [{"name": "mode", "schema": {"title": "DishwasherMode", "type": "string", "enum": ["eco", "intense", "auto", "quick", "rinse", "dry"]}, "optional": false}], "name": "setDishwasherMode"}}, "id": "dishwasherMode", "version": 1, "i18n": {"description": "Allows for the control of the dishwasher.", "attributes": {"dishwasherMode": {"description": "Current mode of the dishwasher", "i18n": {"value": {"eco": {"label": "eco", "description": "The dishwasher is in \"eco\" mode"}, "intense": {"label": "intense", "description": "The dishwasher is in \"intense\" mode"}, "auto": {"label": "auto", "description": "The dishwasher is in \"auto\" mode"}, "quick": {"label": "quick", "description": "The dishwasher is in \"quick\" mode"}, "rinse": {"label": "rinse", "description": "The dishwasher is in \"rinse\" mode"}, "dry": {"label": "dry", "description": "The dishwasher is in \"dry\" mode"}}}, "label": "dishwasher mode", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setDishwasherMode": {"description": "Set the dishwasher mode", "arguments": {"mode": {"description": "Set the dishwasher mode to \"eco\", \"intense\", \"auto\", \"quick\", \"rinse\", or \"dry\" mode"}}}}}}, {"name": "Dishwasher Operating State", "status": "proposed", "attributes": {"machineState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}}, "required": ["value"]}, "values": ["pause", "run", "stop"], "setter": "setMachineState"}, "supportedMachineStates": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}}}, "required": ["value"]}}, "dishwasherJobState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "DishwasherJobState", "type": "string", "enum": ["airwash", "cooling", "drying", "finish", "preDrain", "prewash", "rinse", "spin", "unknown", "wash", "wrinklePrevent"]}}, "required": ["value"]}, "values": ["airwash", "cooling", "drying", "finish", "preDrain", "prewash", "rinse", "spin", "unknown", "wash", "wrinklePrevent"]}, "completionTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}}}, "commands": {"setMachineState": {"arguments": [{"name": "state", "schema": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}, "optional": false}], "name": "setMachineState"}}, "id": "dishwasherOperatingState", "version": 1, "i18n": {"description": "Allows for the control of the dishwasher operational state.", "attributes": {"machineState": {"description": "State of the dishwasher operation", "i18n": {"value": {"pause": {"description": "Dishwasher is in the pause state", "label": "pause"}, "run": {"description": "Dishwasher is in the run state", "label": "run"}, "stop": {"description": "Dishwasher is in the stop state", "label": "stop"}}}, "label": "machine state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedMachineStates": {"description": "Operating states supported by the dishwasher machine", "label": "supported machine states", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "completionTime": {"description": "Completion time for the current dishwasher operation", "label": "completion time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "dishwasherJobState": {"description": "Current status of the dishwasher machine", "i18n": {"value": {"airwash": {"description": "The dishwasher machine is in \"airwash\" mode", "label": "airwash"}, "cooling": {"description": "The dishwasher machine is in \"cooling\" mode", "label": "cooling"}, "drying": {"description": "The dishwasher machine is in \"drying\" mode", "label": "drying"}, "finish": {"description": "The dishwasher machine is in \"finish\" mode", "label": "finish"}, "preDrain": {"description": "The dishwasher machine is in \"preDrain\" mode", "label": "preDrain"}, "prewash": {"description": "The dishwasher machine is in \"prewash\" mode", "label": "prewash"}, "rinse": {"description": "The dishwasher machine is in \"rinse\" mode", "label": "rinse"}, "spin": {"description": "The dishwasher machine is in \"spin\" mode", "label": "spin"}, "unknown": {"description": "The dishwasher machine is in \"unknown\" mode", "label": "unknown"}, "wash": {"description": "The dishwasher machine is in \"wash\" mode", "label": "wash"}, "wrinklePrevent": {"description": "The dishwasher machine is in \"wrinklePrevent\" mode", "label": "wrinklePrevent"}}}, "label": "dishwasher job state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setMachineState": {"description": "Set the dishwasher machine state", "arguments": {"state": {"description": "Set the dishwasher machine in an operational state, pause, run or stop"}}}}}}, {"name": "Dishwasher Operational State", "status": "deprecated", "attributes": {"machineState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}}, "required": ["value"]}, "values": ["pause", "run", "stop"], "setter": "setMachineState"}, "supportedMachineStates": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}}}, "required": ["value"]}}, "dishwasherJobState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "DishwasherJobState", "type": "string", "enum": ["airwash", "cooling", "drying", "finish", "preDrain", "prewash", "rinse", "spin", "unknown", "wash", "wrinklePrevent"]}}, "required": ["value"]}, "values": ["airwash", "cooling", "drying", "finish", "preDrain", "prewash", "rinse", "spin", "unknown", "wash", "wrinklePrevent"]}, "completionTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}}}, "commands": {"setMachineState": {"arguments": [{"name": "state", "schema": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}, "optional": false}], "name": "setMachineState"}}, "id": "dishwasherOperationalState", "version": 1, "i18n": {"description": "Allows for the control of the dishwasher operational state.", "attributes": {"machineState": {"description": "State of the dishwasher operation", "i18n": {"value": {"pause": {"description": "Dishwasher is in the pause state", "label": "pause"}, "run": {"description": "Dishwasher is in the run state", "label": "run"}, "stop": {"description": "Dishwasher is in the stop state", "label": "stop"}}}, "label": "machine state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedMachineStates": {"description": "Operating states supported by the dishwasher machine", "label": "supported machine states", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "completionTime": {"description": "Completion time for the current dishwasher operation", "label": "completion time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "dishwasherJobState": {"description": "Current status of the dishwasher machine", "i18n": {"value": {"airwash": {"description": "The dishwasher machine is in \"airwash\" mode", "label": "airwash"}, "cooling": {"description": "The dishwasher machine is in \"cooling\" mode", "label": "cooling"}, "drying": {"description": "The dishwasher machine is in \"drying\" mode", "label": "drying"}, "finish": {"description": "The dishwasher machine is in \"finish\" mode", "label": "finish"}, "preDrain": {"description": "The dishwasher machine is in \"preDrain\" mode", "label": "preDrain"}, "prewash": {"description": "The dishwasher machine is in \"prewash\" mode", "label": "prewash"}, "rinse": {"description": "The dishwasher machine is in \"rinse\" mode", "label": "rinse"}, "spin": {"description": "The dishwasher machine is in \"spin\" mode", "label": "spin"}, "unknown": {"description": "The dishwasher machine is in \"unknown\" mode", "label": "unknown"}, "wash": {"description": "The dishwasher machine is in \"wash\" mode", "label": "wash"}, "wrinklePrevent": {"description": "The dishwasher machine is in \"wrinklePrevent\" mode", "label": "wrinklePrevent"}}}, "label": "dishwasher job state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setMachineState": {"description": "Set the dishwasher machine state", "arguments": {"state": {"description": "Set the dishwasher machine in an operational state, pause, run or stop"}}}}}}, {"name": "Door Control", "status": "live", "attributes": {"door": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["closed", "closing", "open", "opening", "unknown"]}}, "required": ["value"]}, "values": ["closed", "closing", "open", "opening", "unknown"], "enumCommands": [{"command": "close", "value": "closed"}, {"command": "open", "value": "open"}]}}, "commands": {"close": {"arguments": [], "name": "close"}, "open": {"arguments": [], "name": "open"}}, "id": "doorControl", "version": 1, "i18n": {"commands": {"close": {"description": "Close the door"}, "open": {"description": "Open the door"}}, "attributes": {"door": {"i18n": {"value": {"closing": {"description": "The door is closing", "label": "closing"}, "open": {"description": "The door is open", "label": "Open"}, "opening": {"description": "The door is opening", "label": "opening"}, "unknown": {"description": "The current state of the door is unknown", "label": "unknown"}, "closed": {"description": "The door is closed", "label": "closed"}}}, "description": "The current state of the door", "label": "door", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "description": "Allow for the control of a door"}}, {"name": "Driving Status", "status": "proposed", "attributes": {"drivingStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["driving", "notDriving"]}}, "required": ["value"]}, "values": ["driving", "notDriving"]}}, "commands": {}, "id": "drivingStatus", "version": 1, "i18n": {"attributes": {"drivingStatus": {"i18n": {"value": {"driving": {"description": "Driving", "label": "Driving"}, "notDriving": {"description": "Not Driving", "label": "Not Driving"}}}, "description": "The driving state", "label": "Driving Status", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "description": "Display the driving status"}}, {"name": "Dryer Mode", "status": "proposed", "attributes": {"dryerMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "DryerMode", "type": "string", "enum": ["regular", "lowHeat", "highHeat"]}}, "required": ["value"]}, "values": ["regular", "lowHeat", "highHeat"], "setter": "setDryerMode"}}, "commands": {"setDryerMode": {"arguments": [{"name": "mode", "schema": {"title": "DryerMode", "type": "string", "enum": ["regular", "lowHeat", "highHeat"]}, "optional": false}], "name": "setDryerMode"}}, "id": "dryerMode", "version": 1, "i18n": {"description": "Allows for the control of the dryer.", "attributes": {"dryerMode": {"description": "The operational mode that the dryer is in", "label": "dryer mode", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setDryerMode": {"description": "Set the operational mode of the dryer", "arguments": {"mode": {"description": "The mode to which the dryer should be set to"}}}}}}, {"name": "Dryer Operating State", "status": "proposed", "attributes": {"machineState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}}, "required": ["value"]}, "values": ["pause", "run", "stop"], "setter": "setMachineState"}, "supportedMachineStates": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}}}, "required": ["value"]}}, "dryerJobState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "DryerJobState", "type": "string", "enum": ["cooling", "delayWash", "drying", "finished", "none", "refreshing", "weightSensing", "wrinklePrevent", "dehumidifying", "aIDrying", "sanitizing", "internalCare", "freezeProtection", "continuousDehumidifying", "thawingFrozenInside"]}}, "required": ["value"]}, "values": ["cooling", "delayWash", "drying", "finished", "none", "refreshing", "weightSensing", "wrinklePrevent", "dehumidifying", "aIDrying", "sanitizing", "internalCare", "freezeProtection", "continuousDehumidifying", "thawingFrozenInside"]}, "completionTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}}}, "commands": {"setMachineState": {"arguments": [{"name": "state", "schema": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}, "optional": false}], "name": "setMachineState"}}, "id": "dryerOperatingState", "version": 1, "i18n": {"description": "Allows for the control of the dryer operational state.", "attributes": {"machineState": {"description": "Current state of the dryer machine operation", "i18n": {"value": {"pause": {"description": "The dryer machine is in the pause state", "label": "pause"}, "run": {"description": "The dryer machine is in the running state", "label": "run"}, "stop": {"description": "The dryer machine is in the stop state", "label": "stop"}}}, "label": "machine state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedMachineStates": {"description": "The states supported by the dryer machine", "label": "supported machine states", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "dryerJobState": {"description": "The state of the dryer job", "i18n": {"value": {"cooling": {"description": "The dryer is in cooling state", "label": "cooling"}, "delayWash": {"description": "The dryer is in delay wash state", "label": "delayWash"}, "drying": {"description": "The dryer is in drying state", "label": "drying"}, "finished": {"description": "The dryer is in finished state", "label": "finished"}, "none": {"description": "None", "label": "none"}, "weightSensing": {"description": "The dryer is in weight sensing state", "label": "weightSensing"}, "wrinklePrevent": {"description": "The dryer is in wrinkle prevent state", "label": "wrinklePrevent"}, "dehumidifying": {"description": "The dryer is in dehumidifying state", "label": "dehumidifying"}, "aIDrying": {"description": "The dryer is in AI drying state", "label": "aIDrying"}, "sanitizing": {"description": "The dryer is in sanitizing state", "label": "sanitizing"}, "internalCare": {"description": "The dryer is in internal care  state", "label": "internalCare"}, "freezeProtection": {"description": "The dryer is in freeze protection state", "label": "freezeProtection"}, "continuousDehumidifying": {"description": "The dryer is in continuous dehumidifying state", "label": "continuousDehumidifying"}, "thawingFrozenInside": {"description": "The dryer is in thawing frozen inside state", "label": "thawingFrozenInside"}}}, "label": "dryer job state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "completionTime": {"description": "The completion time for the dryer job", "label": "completion time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setMachineState": {"description": "Set the dryer machine state", "arguments": {"state": {"description": "Set the dryer machine to a state; pause, run or stop"}}}}}}, {"name": "Dust Health Concern", "status": "proposed", "attributes": {"dustHealthConcern": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "AirQualityHealthConcern", "type": "string", "enum": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "required": ["value"]}, "values": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "commands": {}, "id": "dustHealthConcern", "version": 1, "i18n": {"description": "Health Concern levels of PM10 dust sensor measurements.", "attributes": {"dustHealthConcern": {"description": "Current health concern of dust -- also refered to as PM10, based on the relative health hazard", "label": "dust health concern", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}}}, {"name": "Dust Sensor", "status": "live", "attributes": {"fineDustLevel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "unit": {"type": "string", "enum": ["\u03bcg/m^3"], "default": "\u03bcg/m^3"}}, "required": ["value"]}}, "dustLevel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "unit": {"type": "string", "enum": ["\u03bcg/m^3"], "default": "\u03bcg/m^3"}}, "required": ["value"]}}}, "commands": {}, "id": "dustSensor", "version": 1, "i18n": {"description": "Gets the reading of the dust sensor.", "attributes": {"fineDustLevel": {"description": "Current level of fine dust -- also refered to as PM2.5, measured in micrograms per cubic meter", "label": "fine dust level", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}\u03bcg/m^3"}, "dustLevel": {"description": "Current dust level -- also refered to as PM10, measured in micrograms per cubic meter", "label": "dust level", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}\u03bcg/m^3"}}}}, {"name": "Elevator Call", "id": "elevatorCall", "status": "live", "version": 1, "attributes": {"callStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["called", "standby", "unknown"]}}, "required": ["value"]}, "values": ["called", "standby", "unknown"]}}, "commands": {"call": {"arguments": [], "name": "call"}}, "i18n": {"description": "Allows for calling an elevator", "attributes": {"callStatus": {"description": "The current status of the elevator", "label": "Call Status", "i18n": {"value": {"called": {"label": "Called"}, "standby": {"label": "Standby"}, "unknown": {"label": "Unknown"}}}, "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"call": {"description": "Call an elevator"}}}}, {"name": "Energy Meter", "status": "live", "attributes": {"energy": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number"}, "unit": {"type": "string", "enum": ["Wh", "kWh", "mWh", "kVAh"], "default": "kWh"}}, "required": ["value"]}}}, "commands": {"resetEnergyMeter": {"arguments": [], "name": "resetEnergyMeter"}}, "id": "energyMeter", "version": 1, "i18n": {"attributes": {"energy": {"description": "Numeric value representing energy consumption", "label": "energy", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}} {{unit}}"}}, "commands": {"resetEnergyMeter": {"description": "Reset the energy consumption of a device"}}, "description": "Read the energy consumption of an energy metering device"}}, {"name": "Equivalent Carbon Dioxide Measurement", "status": "live", "attributes": {"equivalentCarbonDioxideMeasurement": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 1000000}, "unit": {"type": "string", "enum": ["ppm"], "default": "ppm"}}, "required": ["value"]}}}, "commands": {}, "id": "equivalentCarbonDioxideMeasurement", "version": 1, "i18n": {"description": "Measure equivalent carbon dioxide levels", "attributes": {"equivalentCarbonDioxideMeasurement": {"description": "The equivalent carbon dioxide level detected in ppm by volume", "label": "equivalent carbon dioxide", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}ppm"}}}}, {"name": "Estimated Time Of Arrival", "status": "proposed", "attributes": {"eta": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}}}, "commands": {}, "id": "estimatedTimeOfArrival", "version": 1, "i18n": {"description": "Allow access to estimated time of arrival values for devices that support it, for example automobiles", "attributes": {"eta": {"description": "A date representing the estimated time of arrival", "label": "eta", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Execute", "status": "live", "attributes": {"data": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}, "data": {"type": "object", "additionalProperties": true}}, "required": ["value"]}, "actedOnBy": ["execute"]}}, "commands": {"execute": {"arguments": [{"name": "command", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}, {"name": "args", "schema": {"title": "JsonObject", "type": "object"}, "optional": true}], "name": "execute"}}, "id": "execute", "version": 1, "i18n": {"commands": {"execute": {"description": "Execute a command."}}, "attributes": {"data": {"description": "A Json Object of results from commands being executed.", "label": "data", "displayTemplate": "{{device.label}} {{attribute}} was updated"}}, "description": "Allows for raw messages to be passed to a device."}}, {"name": "Fan Oscillation Mode", "status": "live", "attributes": {"fanOscillationMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "FanOscillationMode", "type": "string", "enum": ["off", "individual", "fixed", "vertical", "horizontal", "all", "indirect", "direct", "fixedCenter", "fixedLeft", "fixedRight", "far", "wide", "mid", "spot", "swing"]}}}, "values": ["off", "individual", "fixed", "vertical", "horizontal", "all", "indirect", "direct", "fixedCenter", "fixedLeft", "fixedRight", "far", "wide", "mid", "spot", "swing"]}, "supportedFanOscillationModes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"items": {"title": "FanOscillationMode", "type": "string", "enum": ["off", "individual", "fixed", "vertical", "horizontal", "all", "indirect", "direct", "fixedCenter", "fixedLeft", "fixedRight", "far", "wide", "mid", "spot", "swing"]}, "type": "array"}}, "required": ["value"]}}}, "commands": {"setFanOscillationMode": {"arguments": [{"name": "fanOscillationMode", "schema": {"title": "FanOscillationMode", "type": "string", "enum": ["off", "individual", "fixed", "vertical", "horizontal", "all", "indirect", "direct", "fixedCenter", "fixedLeft", "fixedRight", "far", "wide", "mid", "spot", "swing"]}, "optional": false}], "name": "setFanOscillationMode"}}, "id": "fanOscillationMode", "version": 1, "i18n": {"description": "A representation of fan oscillation", "attributes": {"fanOscillationMode": {"description": "The current mode of oscillation; an enum of off, individual, fixed, vertical, horizontal, direct, indirect, fixedCenter, fixedLeft, fixedRight, far, all", "label": "fan oscillation mode", "i18n": {"value": {"all": {"description": "The fan is set to oscillate in all directions", "label": "all"}, "far": {"description": "The fan is set to move air at a distance", "label": "far"}, "fixed": {"description": "The fan is fixed in one direction and not oscillating", "label": "fixed"}, "fixedCenter": {"description": "The fan is fixed to the center and not oscillating", "label": "fixed center"}, "fixedLeft": {"description": "The fan is fixed to the left and not oscillating", "label": "fixed left"}, "fixedRight": {"description": "The fan is fixed to the right and not oscillating", "label": "fixed right"}, "vertical": {"description": "The fan is set to oscillate vertically", "label": "vertical"}, "horizontal": {"description": "The fan is set to oscillate horizontally", "label": "horizontal"}, "direct": {"description": "The fan is set to oscillate in the direction of people", "label": "direct"}, "indirect": {"description": "The fan is set to oscillate while avoiding people", "label": "indirect"}, "off": {"description": "The fan oscillation is off", "label": "off"}, "individual": {"description": "The fan is set to oscillate individually", "label": "individual"}}}, "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}, "supportedFanOscillationModes": {"description": "Supported states for this oscillating fan to be in", "label": "supported oscillating fan modes", "displayTemplate": "{{device.label}} {{attribute}} are {{value}}"}}, "commands": {"setFanOscillationMode": {"description": "set oscillation mode", "arguments": {"fanOscillationMode": {"description": "fan oscillation mode"}}}}}}, {"name": "Fan Speed", "status": "live", "attributes": {"fanSpeed": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}, "required": ["value"]}, "setter": "setFanSpeed"}}, "commands": {"setFanSpeed": {"arguments": [{"name": "speed", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": false}], "name": "setFanSpeed"}}, "id": "fanSpeed", "version": 1, "i18n": {"description": "Allows for the control of the fan speed.", "attributes": {"fanSpeed": {"label": "fan speed", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setFanSpeed": {"description": "Set the fan speed", "arguments": {"speed": {"description": "Set the fan to this speed"}}}}}}, {"name": "Feeder Operating State", "status": "proposed", "attributes": {"feederOperatingState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["idle", "feeding"]}}, "required": ["value"]}, "values": ["idle", "feeding"], "enumCommands": [{"command": "startFeeding", "value": "feeding"}], "actedOnBy": ["startFeeding"]}}, "commands": {"startFeeding": {"arguments": [], "name": "startFeeding"}}, "id": "feederOperatingState", "version": 1, "i18n": {"description": "Allows for the control of a feeder device.", "attributes": {"feederOperatingState": {"description": "The current state of the feeder.", "i18n": {"value": {"idle": {"label": "idle"}, "feeding": {"label": "feeding"}}}, "label": "feeder operating state", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}, "commands": {"startFeeding": {"description": "Begin the feeding process."}}}}, {"name": "Feeder Portion", "status": "proposed", "attributes": {"feedPortion": {"schema": {"title": "FeedPortion", "type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 2000}, "unit": {"type": "string", "enum": ["g", "lbs", "oz", "servings"], "default": "g"}}, "required": ["value", "unit"]}, "setter": "setPortion"}}, "commands": {"setPortion": {"arguments": [{"name": "portion", "schema": {"title": "FeedPortion", "type": "number", "minimum": 0, "maximum": 2000}, "optional": false}, {"name": "unit", "schema": {"title": "unit", "type": "string", "enum": ["g", "lbs", "oz", "servings"], "default": "g"}, "optional": true}], "name": "setPortion"}}, "id": "feederPortion", "version": 1, "i18n": {"description": "Allows for the portion control of a feeder device.", "attributes": {"feedPortion": {"description": "A number that represents the portion (in grams, pounds, ounces, or servings) that will dispense.", "label": "feed portion", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}} {{unit}}", "i18n": {"unit": {"servings": {"label": "servings"}}}}}, "commands": {"setPortion": {"arguments": {"portion": {"description": "The portion (in grams, pounds, ounces, or servings) to dispense."}}, "description": "Set the portion (in grams, pounds, ounces, or servings) that the feeder will dispense."}}}}, {"name": "Filter State", "status": "live", "attributes": {"filterLifeRemaining": {"schema": {"title": "IntegerPercent", "type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 100}, "unit": {"type": "string", "enum": ["%"], "default": "%"}}, "required": ["value"]}}}, "commands": {}, "id": "filterState", "version": 1, "i18n": {"description": "Gets the state of the filter.", "attributes": {"filterLifeRemaining": {"description": "Current remaining life of the filter", "label": "filter life remaining", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Filter Status", "status": "proposed", "attributes": {"filterStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["normal", "replace"]}}, "required": ["value"]}, "values": ["normal", "replace"]}}, "commands": {}, "id": "filterStatus", "version": 1, "i18n": {"description": "Gets the status of the filter.", "attributes": {"filterStatus": {"description": "Status of the filter", "i18n": {"value": {"normal": {"description": "The filter status is normal"}, "replace": {"description": "The filter status is replace"}}}, "label": "filter status", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Fine Dust Health Concern", "status": "live", "attributes": {"fineDustHealthConcern": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "AirQualityHealthConcern", "type": "string", "enum": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "required": ["value"]}, "values": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "commands": {}, "id": "fineDustHealthConcern", "version": 1, "i18n": {"description": "Health Concern levels of fine dust sensor measurements.", "attributes": {"fineDustHealthConcern": {"description": "Current health concern of fine dust -- also refered to as PM2.5, based on the relative health hazard", "label": "fine dust health concern", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}}}, {"name": "Fine Dust Sensor", "status": "live", "attributes": {"fineDustLevel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "unit": {"type": "string", "enum": ["\u03bcg/m^3"], "default": "\u03bcg/m^3"}}, "required": ["value"]}}}, "commands": {}, "id": "fineDustSensor", "version": 1, "i18n": {"description": "Gets the reading of the fine dust sensor.", "attributes": {"fineDustLevel": {"description": "Current level of fine dust -- also refered to as PM2.5, measured in micrograms per cubic meter", "label": "fine dust level", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}\u03bcg/m^3"}}}}, {"name": "Firmware Update", "status": "live", "attributes": {"availableVersion": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string"}}}}, "currentVersion": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string"}}}}, "lastUpdateTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}}}, "lastUpdateStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["updateSucceeded", "updateFailed"]}}}, "values": ["updateSucceeded", "updateFailed"]}, "lastUpdateStatusReason": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string"}}}}, "state": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["normalOperation", "updateInProgress", "insufficientStorage"]}}}, "values": ["normalOperation", "updateInProgress", "insufficientStorage"]}}, "commands": {"checkForFirmwareUpdate": {"arguments": [], "name": "checkForFirmwareUpdate"}, "updateFirmware": {"arguments": [], "name": "updateFirmware"}}, "id": "firmwareUpdate", "version": 1, "i18n": {"description": "Allows a device firmware to be updated over the network", "attributes": {"availableVersion": {"description": "version of the firmware to download", "label": "Available Version", "displayTemplate": "Firmware version {{attribute}} was available for {{device.label}}"}, "currentVersion": {"description": "The current version reported by the device firmware, should update after OTA completes", "label": "Current firmware version", "displayTemplate": "The current firmware version on {{device.label}} was {{attribute}}"}, "lastUpdateTime": {"description": "The time of the most recent download or update attempt.", "label": "Last update attempt time", "displayTemplate": "The last update attempt for {{device.label}} was at {{attribute}}"}, "lastUpdateStatus": {"description": "The status of the most recent update attempt.", "label": "Firmware update status", "displayTemplate": "The status of the most recent firmware update on {{device.label}} was {{attribute}}"}, "lastUpdateStatusReason": {"description": "The explanation of the reason for the status of the most recent update attempt.", "label": "Firmware update result reason", "displayTemplate": "The reason for the most recent firmware update status on {{device.label}} was {{attribute}}"}, "state": {"description": "The state of the firmware update process", "label": "Firmware update process state", "displayTemplate": "The state of the firmware update operation on {{device.label}} was {{attribute}}"}}, "commands": {"checkForFirmwareUpdate": {"description": "Check to see if there is a firmware update available for the device", "label": "Check for firmware update"}, "updateFirmware": {"description": "Update the firmware on the device", "label": "Update firmware"}}}}, {"name": "Formaldehyde Measurement", "status": "live", "attributes": {"formaldehydeLevel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 1000000}, "unit": {"type": "string", "enum": ["ppm", "mg/m^3"], "default": "ppm"}}, "required": ["value", "unit"]}}}, "commands": {}, "id": "formaldehydeMeasurement", "version": 1, "i18n": {"description": "Measure formaldehyde levels", "attributes": {"formaldehydeLevel": {"description": "The level of formaldehyde detected", "label": "formaldehyde level", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}{{unit}}"}}}}, {"name": "Garage Door Control", "status": "deprecated", "attributes": {"door": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["closed", "closing", "open", "opening", "unknown"]}}, "required": ["value"]}, "values": ["closed", "closing", "open", "opening", "unknown"], "enumCommands": [{"command": "close", "value": "closed"}, {"command": "open", "value": "open"}]}}, "commands": {"close": {"arguments": [], "name": "close"}, "open": {"arguments": [], "name": "open"}}, "id": "garageDoorControl", "version": 1, "i18n": {"description": "Allow for the control of a garage door. Deprecated in favor of Door Control.", "attributes": {"door": {"i18n": {"value": {"closing": {"description": "The garage door is closing", "label": "Closing\u2026"}, "open": {"description": "The garage door is open", "label": "Open"}, "opening": {"description": "The garage door is opening", "label": "Opening\u2026"}, "unknown": {"description": "The current state of the garage door is unknown", "label": "Unknown"}, "closed": {"description": "The garage door is closed", "label": "Closed"}}}, "description": "The current state of the garage door", "label": "door", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"close": {"description": "Close the garage door"}, "open": {"description": "Open the garage door"}}}}, {"name": "Gas Detector", "status": "proposed", "attributes": {"gas": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["clear", "detected", "tested"]}}, "required": ["value"]}, "values": ["clear", "detected", "tested"]}}, "commands": {}, "id": "gasDetector", "version": 1, "i18n": {"attributes": {"gas": {"i18n": {"value": {"detected": {"description": "Gas detected", "label": "Detected"}, "clear": {"description": "No gas detected", "label": "Clear"}, "tested": {"description": "Gas detector test button was activated", "label": "Tested"}}}, "description": "The state of the gas detection device", "label": "gas", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "description": "A device that detects the presence or absence of gas."}}, {"name": "Gas Meter", "status": "live", "attributes": {"gasMeterVolume": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number"}, "unit": {"type": "string", "enum": ["m^3", "cf", "ccf"], "default": "m^3"}}, "required": ["value"]}}, "gasMeter": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number"}, "unit": {"type": "string", "enum": ["kWh"], "default": "kWh"}}, "required": ["value"]}}, "gasMeterCalorific": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number"}}, "required": ["value"]}}, "gasMeterConversion": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number"}}, "required": ["value"]}}, "gasMeterPrecision": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "GasMeterPrecision", "type": "object", "additionalProperties": false, "properties": {"volume": {"title": "VolumePrecision", "type": "number"}, "calorific": {"title": "CalorificPrecision", "type": "number"}, "conversion": {"title": "ConversionPrecision", "type": "number"}}}}, "required": ["value"]}}, "gasMeterTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}}}, "commands": {}, "id": "gasMeter", "version": 1, "i18n": {"description": "Read the gas consumption of an energy metering device", "attributes": {"gasMeterVolume": {"description": "the cumulative gas volume reported by the metering device.", "label": "gas volume", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}m^3"}, "gasMeter": {"description": "the gas energy reported by the metering device", "label": "gas measurement", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}kWh"}, "gasMeterCalorific": {"description": "a measure of the available heat energy, used as part of the calculation to convert gas volume to gas energy. ", "label": "calorific heat energy", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "gasMeterConversion": {"description": "the conversion factor used as part of the calculation to convert gas volume to gas energy. The value used for this calculation is generally defined by local regulations", "label": "conversion factor", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "gasMeterPrecision": {"description": "the preciseness of the volume, gas, calorific and conversion attributes", "label": "precision of measurements", "displayTemplate": "{{device.label}} {{attribute}} was updated"}, "gasMeterTime": {"description": "The timestamp when the measurement was taken", "label": "meter reading time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Geofence", "status": "proposed", "attributes": {"name": {"schema": {"type": "object", "properties": {"value": {"type": "string"}}, "additionalProperties": false, "required": ["value"]}, "setter": "setName"}, "geofence": {"schema": {"type": "object", "properties": {"value": {"title": "GeofenceRadiusData", "type": "object", "additionalProperties": false, "properties": {"longitude": {"type": "number"}, "latitude": {"type": "number"}, "radius": {"type": "number"}}}}, "additionalProperties": false, "required": ["value"]}, "setter": "setGeofence"}, "enableState": {"schema": {"type": "object", "properties": {"value": {"title": "EnableState", "type": "string", "enum": ["enabled", "disabled"]}}, "additionalProperties": false, "required": ["value"]}, "setter": "setEnableState", "values": ["enabled", "disabled"]}}, "commands": {"setName": {"arguments": [{"name": "name", "schema": {"type": "string"}, "optional": false}], "name": "setName"}, "setGeofence": {"arguments": [{"name": "geofence", "schema": {"title": "GeofenceRadiusData", "type": "object", "additionalProperties": false, "properties": {"longitude": {"type": "number"}, "latitude": {"type": "number"}, "radius": {"type": "number"}}}, "optional": false}], "name": "setGeofence"}, "setEnableState": {"arguments": [{"name": "enableState", "schema": {"title": "EnableState", "type": "string", "enum": ["enabled", "disabled"]}, "optional": false}], "name": "setEnableState"}}, "id": "geofence", "version": 1, "i18n": {"description": "Allows for setting parameters of a geofence", "attributes": {"name": {"description": "The name of the geofence", "label": "Name", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}%"}, "geofence": {"description": "The geographical coordinates of the geofence", "label": "Geofence", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}%"}, "enableState": {"description": "The enable state of the geofence", "label": "Enable State", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}%"}}, "commands": {"setName": {"arguments": {"name": {"description": "The name of the geofence"}}, "description": "Set the name of a geofence"}, "setGeofence": {"arguments": {"name": {"description": "The geofence coordinates"}}, "description": "Set the geofence coordinates"}, "setEnableState": {"arguments": {"enableState": {"description": "Enable state to set"}}, "description": "Enable or disable a geofencee"}}}}, {"name": "Geofences", "status": "deprecated", "attributes": {"geofences": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "Geofence", "type": "object", "additionalProperties": false, "properties": {"id": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "presence": {"title": "PresenceState", "type": "string", "enum": ["present", "not present"]}}}}}, "required": ["value"]}}}, "commands": {}, "id": "geofences", "version": 1, "i18n": {"description": "Gets the status of the geofences.", "attributes": {"geofences": {"description": "List of Geofences", "label": "Geofences", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"id": "geolocation", "name": "Geolocation", "status": "proposed", "attributes": {"latitude": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "maximum": 90, "minimum": -90}}}}, "longitude": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "maximum": 180, "minimum": -180}}}}, "method": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "accuracy": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0}}}}, "altitudeAccuracy": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0}}}}, "heading": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 360}}}}, "speed": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0}}}}, "lastUpdateTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}}}, "commands": {}, "version": 1, "i18n": {"description": "Gets the value of the geo location.", "attributes": {"latitude": {"description": "Latitude value", "label": "latitude", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "longitude": {"description": "Longitude value", "label": "longitude", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "method": {"description": "Description of the method", "label": "method", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "accuracy": {"description": "Description of accuracy", "label": "accuracy", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "altitudeAccuracy": {"description": "Description of the altitudeAccuracy", "label": "altitude accuracy", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "heading": {"description": "Description of the heading", "label": "heading", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "speed": {"description": "Description of the speed", "label": "speed", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "lastUpdateTime": {"description": "Last update time", "label": "last update time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Health Check", "status": "live", "attributes": {"checkInterval": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 604800}, "data": {"type": "object", "additionalProperties": false, "properties": {"deviceScheme": {"type": "string", "enum": ["MIXED", "TRACKED", "UNTRACKED"]}, "hubHardwareId": {"type": "string", "pattern": "^[0-9a-fA-F]{4}$"}, "protocol": {"title": "DeviceHealthProtocol", "type": "string", "enum": ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]}, "offlinePingable": {"type": "string", "enum": ["0", "1"]}, "badProperty": {"type": "string"}}}, "unit": {"type": "string", "enum": ["s"], "default": "s"}}, "required": ["value"]}}, "DeviceWatch-DeviceStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["online", "offline"]}, "data": {"type": "object", "additionalProperties": false, "properties": {"deviceScheme": {"type": "string", "enum": ["MIXED", "TRACKED", "UNTRACKED"]}, "badProperty": {"type": "string"}, "reason": {"type": "string", "enum": ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]}}}}, "required": ["value"]}, "values": ["online", "offline"], "actedOnBy": ["ping"]}, "healthStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["online", "offline"]}, "data": {"type": "object", "additionalProperties": false, "properties": {"deviceScheme": {"type": "string", "enum": ["MIXED", "TRACKED", "UNTRACKED"]}, "badProperty": {"type": "string"}, "reason": {"type": "string", "enum": ["INVALID-ACCESS-TOKEN", "INTEGRATION-OFFLINE", "DEVICE-OFFLINE", "DEVICE-DELETED", "DEVICE-UNAVAILABLE", "DEVICE-UNDISCOVERED"]}}}}, "required": ["value"]}, "values": ["online", "offline"], "actedOnBy": ["ping"]}, "DeviceWatch-Enroll": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "DeviceHealthEnroll", "type": "object", "additionalProperties": false, "properties": {"scheme": {"type": "string", "enum": ["MIXED", "TRACKED", "UNTRACKED"]}, "protocol": {"title": "DeviceHealthProtocol", "type": "string", "enum": ["zigbee", "zwave", "bluetooth", "lan", "cloud", "unknown", "ocf", "mqtt"]}, "hubHardwareId": {"title": "String", "type": "string", "maxLength": 255}}}}, "required": ["value"]}}}, "commands": {"ping": {"arguments": [], "name": "ping"}}, "id": "healthCheck", "version": 1, "i18n": {"description": "Allows for the control of the health check.", "attributes": {"checkInterval": {"description": "The current value of checkInterval", "label": "check interval", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}s"}, "DeviceWatch-DeviceStatus": {"description": "The current online/offline status of the device. Deprecated in favor of healthStatus attribute.", "i18n": {"value": {"online": {"description": "The device is online", "label": "online"}, "offline": {"description": "The device is offline", "label": "offline"}}}, "label": "device watch- device status", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "healthStatus": {"description": "The current online/offline status of the device", "i18n": {"value": {"online": {"description": "The device is online", "label": "online"}, "offline": {"description": "The device is offline", "label": "offline"}}}, "label": "health status", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "DeviceWatch-Enroll": {"description": "Event sent to enroll a device in device health.", "label": "enroll in health check", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"ping": {"description": "Ping the device"}}}}, {"name": "Holdable Button", "status": "deprecated", "attributes": {"button": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["held", "pushed"]}}, "required": ["value"]}, "values": ["held", "pushed"]}, "numberOfButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}, "required": ["value"]}}}, "commands": {}, "id": "holdableButton", "version": 1, "i18n": {"description": "A device with one or more holdable buttons. Deprecated in favor of Button.", "attributes": {"button": {"description": "The state of the holdable button", "i18n": {"value": {"pushed": {"description": "The value if the button is pushed", "label": "pushed"}, "held": {"description": "The value if the button is held", "label": "held"}}}, "label": "button", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "numberOfButtons": {"description": "The number of buttons on the device", "label": "number of buttons", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Humidifier Mode", "status": "live", "attributes": {"humidifierMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "HumidifierMode", "type": "string", "enum": ["auto", "low", "medium", "high"]}}}, "values": ["auto", "low", "medium", "high"]}}, "commands": {"setHumidifierMode": {"arguments": [{"name": "humidifierMode", "schema": {"title": "HumidifierMode", "type": "string", "enum": ["auto", "low", "medium", "high"]}, "optional": false}], "name": "setHumidifierMode"}}, "id": "humidifierMode", "version": 1, "i18n": {"description": "Maintains and sets the state of an humidifier", "attributes": {"humidifierMode": {"description": "The current mode of the humidifier, an enum of auto, low, medium, or high", "label": "humidifier", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setHumidifierMode": {"description": "Set the humidifier's mode", "arguments": {"humidifierMode": {"description": "The humidifier mode"}}}}}}, {"name": "Illuminance Measurement", "status": "live", "attributes": {"illuminance": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 100000}, "unit": {"type": "string", "enum": ["lux"], "default": "lux"}}, "required": ["value"]}, "unit": "lux"}}, "commands": {}, "id": "illuminanceMeasurement", "version": 1, "i18n": {"attributes": {"illuminance": {"description": "The illuminance measurement in LUX", "label": "illuminance", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}} lux"}}, "description": "Gives the illuminance reading from devices that support it"}}, {"name": "Image Capture", "status": "live", "attributes": {"image": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "URL", "type": "string", "pattern": "^(https?):\\/\\/((?:[a-zA-Z0-9.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-zA-Z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?$"}}, "required": ["value"]}, "setter": "take"}, "captureTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}}, "encrypted": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "boolean"}}, "required": ["value"]}}}, "commands": {"take": {"arguments": [{"name": "correlationId", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": true}, {"name": "reason", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": true}], "name": "take"}}, "id": "imageCapture", "version": 1, "i18n": {"attributes": {"image": {"description": "String value representing the image captured", "label": "image", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "captureTime": {"description": "Date representing the time the image was captured", "label": "time image captured", "displayTemplate": "{{attribute}} of {{device.label}} was {{value}}"}, "encrypted": {"description": "Flag to indicate that the image is encrypted", "label": "image is encrypted", "displayTemplate": "{{attribute}} of {{device.label}} was {{value}}"}}, "commands": {"take": {"description": "Capture an image"}}, "description": "Allows for the capture of an image on devices that support it"}}, {"name": "Indicator", "status": "deprecated", "attributes": {"indicatorStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["never", "when off", "when on"]}}, "required": ["value"]}, "values": ["never", "when off", "when on"], "enumCommands": [{"command": "indicatorNever", "value": "never"}, {"command": "indicatorWhenOff", "value": "when off"}, {"command": "indicatorWhenOn", "value": "when on"}]}}, "commands": {"indicatorNever": {"arguments": [], "name": "indicatorNever"}, "indicatorWhenOff": {"arguments": [], "name": "indicatorWhenOff"}, "indicatorWhenOn": {"arguments": [], "name": "indicatorWhenOn"}}, "id": "indicator", "version": 1, "i18n": {"attributes": {"indicatorStatus": {"description": "A value representing the current state of the indicator LED", "i18n": {"value": {"never": {"description": "The LED is never on"}}}, "when": "on.value=The LED is on when the switch is on", "label": "indicator status", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "The indicator capability gives you the ability to set the indicator LED light on a Z-Wave switch. As such, the most common use case for the indicator capability is in a Device Handler.", "commands": {"indicatorNever": {"description": "Set the indicator LED to be always off"}, "indicatorWhenOn": {"description": "Set the indicator LED to on when the switch is on"}, "indicatorWhenOff": {"description": "Set the indicator LED to off when the switch is on"}}}}, {"name": "Infrared Level", "status": "live", "attributes": {"infraredLevel": {"schema": {"title": "Percent", "type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 100}, "unit": {"type": "string", "enum": ["%"], "default": "%"}}, "required": ["value"]}, "setter": "setInfraredLevel"}}, "commands": {"setInfraredLevel": {"arguments": [{"name": "level", "schema": {"type": "number", "minimum": 0, "maximum": 100}, "optional": false}], "name": "setInfraredLevel"}}, "id": "infraredLevel", "version": 1, "i18n": {"commands": {"setInfraredLevel": {"arguments": {"level": {"description": "The infrared level value, ``0-100`` in percent"}}, "description": "Set the infrared level to the given value"}}, "attributes": {"infraredLevel": {"description": "A number that represents the current infrared light level, ``0-100`` in percent", "label": "infrared level", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}%"}}, "description": "Allows for the control of the infrared level attribute of a device"}}, {"name": "Keypad Input", "status": "proposed", "attributes": {"supportedKeyCodes": {"schema": {"type": "object", "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["UP", "DOWN", "LEFT", "RIGHT", "SELECT", "BACK", "EXIT", "MENU", "SETTINGS", "HOME", "NUMBER0", "NUMBER1", "NUMBER2", "NUMBER3", "NUMBER4", "NUMBER5", "NUMBER6", "NUMBER7", "NUMBER8", "NUMBER9"]}}}, "additionalProperties": false, "required": ["value"]}}}, "commands": {"sendKey": {"name": "sendKey", "arguments": [{"name": "keyCode", "schema": {"type": "string", "enum": ["UP", "DOWN", "LEFT", "RIGHT", "SELECT", "BACK", "EXIT", "MENU", "SETTINGS", "HOME", "NUMBER0", "NUMBER1", "NUMBER2", "NUMBER3", "NUMBER4", "NUMBER5", "NUMBER6", "NUMBER7", "NUMBER8", "NUMBER9"]}, "optional": false}]}}, "id": "keypadInput", "version": 1, "i18n": {"note": "This capability provides an interface for key code based input and control on a device like a Video Player or a Content App", "description": "Allows for the control of a keypad input", "attributes": {"supportedKeyCodes": {"description": "Supported key codes for this device to process", "label": "supported key codes", "displayTemplate": "{{device.label}} {{attribute}} are {{value}}"}}, "commands": {"sendKey": {"description": "Send keypad input to process a keycode as input to the media device.", "arguments": {"keyCode": {"description": "The key code to process."}}}}}}, {"name": "Language Setting", "status": "proposed", "attributes": {"supportedLanguages": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string"}}}}}, "language": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string"}}}, "setter": "setLanguage"}}, "commands": {"setLanguage": {"arguments": [{"name": "language", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "setLanguage"}}, "id": "languageSetting", "version": 1, "i18n": {"description": "Allows to control the language of a device.", "attributes": {"supportedLanguages": {"description": "Languages supported by the device", "label": "supported languages", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "language": {"description": "The current language of a device", "label": "language", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "commands": {"setLanguage": {"arguments": {"language": {"description": "The language to set the device to"}}, "description": "Set the language"}}}}, {"name": "Light", "status": "deprecated", "attributes": {"switch": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "SwitchState", "type": "string", "enum": ["on", "off"]}}, "required": ["value"]}, "values": ["off", "on"], "enumCommands": [{"command": "on", "value": "on"}, {"command": "off", "value": "off"}]}}, "commands": {"off": {"arguments": [], "name": "off"}, "on": {"arguments": [], "name": "on"}}, "id": "light", "version": 1, "i18n": {"commands": {"on": {"description": "Turn a light on"}, "off": {"description": "Turn a light off"}}, "attributes": {"switch": {"i18n": {"value": {"on": {"description": "The value of the ``switch`` attribute if the light is on"}, "off": {"description": "The value of the ``switch`` attribute if the light is off"}}}, "description": "A string representation of whether the light is on or off", "label": "switch", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "Allows for the control of a light device"}}, {"name": "Location Mode", "status": "live", "attributes": {"mode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "required": ["value"]}, "setter": "setMode"}}, "commands": {"setMode": {"arguments": [{"name": "mode", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "setMode"}}, "id": "locationMode", "version": 1, "i18n": {"description": "Allows for the control of the location mode.", "attributes": {"mode": {"description": "Current location mode status", "label": "mode", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "commands": {"setMode": {"description": "Set the mode for the location", "arguments": {"mode": {"description": "Set the mode for the location"}}}}}}, {"name": "Lock Codes", "status": "live", "attributes": {"codeChanged": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}, "data": {"type": "object", "additionalProperties": false, "properties": {"codeName": {"type": "string"}}}}}, "actedOnBy": ["updateCodes", "deleteCode", "setCode"]}, "codeReport": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}, "required": ["value"]}}, "lockCodes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string"}}}, "actedOnBy": ["updateCodes", "deleteCode", "setCode"]}, "scanCodes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "codeLength": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}}, "setter": "setCodeLength"}, "maxCodes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}}}, "maxCodeLength": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}}}, "minCodeLength": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}}}, "lock": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "LockState", "type": "string", "enum": ["locked", "unknown", "unlocked", "unlocked with timeout"]}, "data": {"type": "object", "additionalProperties": false, "properties": {"method": {"type": "string", "enum": ["manual", "keypad", "auto", "command", "rfid", "fingerprint", "bluetooth"]}, "codeId": {"type": "string"}, "codeName": {"type": "string"}, "timeout": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}}}, "required": ["value"]}, "values": ["locked", "unknown", "unlocked", "unlocked with timeout"], "enumCommands": [{"command": "lock", "value": "locked"}, {"command": "unlock", "value": "unlocked"}, {"command": "unlockWithTimeout", "value": "unlocked with timeout"}]}}, "commands": {"updateCodes": {"arguments": [{"name": "codes", "schema": {"title": "JsonObject", "type": "object"}, "optional": false}], "name": "updateCodes"}, "deleteCode": {"arguments": [{"name": "codeSlot", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": false}], "name": "deleteCode"}, "lock": {"arguments": [], "name": "lock"}, "reloadAllCodes": {"arguments": [], "name": "reloadAllCodes"}, "requestCode": {"arguments": [{"name": "codeSlot", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": false}], "name": "requestCode"}, "setCode": {"arguments": [{"name": "codeSlot", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": false}, {"name": "codePIN", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}, {"name": "codeName", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "setCode"}, "unlock": {"arguments": [], "name": "unlock"}, "unlockWithTimeout": {"arguments": [], "name": "unlockWithTimeout"}, "setCodeLength": {"arguments": [{"name": "length", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": false}], "name": "setCodeLength"}, "nameSlot": {"arguments": [{"name": "codeSlot", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": false}, {"name": "codeName", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "nameSlot"}}, "id": "lockCodes", "version": 1, "i18n": {"description": "Allows for the control of the lock codes from the Smart Lock Guest Access service in the SmartThings mobile app. Note that this capability does not appear in the device detail page.", "attributes": {"codeChanged": {"description": "Indicator if the code has changed", "label": "code changed", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "codeReport": {"description": "A report on the code", "label": "code report", "displayTemplate": "{{device.label}} {{attribute}} was updated"}, "lockCodes": {"description": "Lock codes", "label": "lock codes", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "scanCodes": {"description": "Scan codes", "label": "scan codes", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "codeLength": {"description": "Length of the code, an integer", "label": "code length", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "maxCodes": {"description": "Maximum number of codes, an integer", "label": "max codes", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "maxCodeLength": {"description": "Maximum code length, an integer", "label": "max code length", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "minCodeLength": {"description": "Minimum code length, an integer", "label": "min code length", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "lock": {"description": "The state of the lock", "i18n": {"value": {"locked": {"description": "The lock is in \"locked\" mode", "label": "locked"}, "unknown": {"description": "The lock is in \"unknown\" mode", "label": "unknown"}, "unlocked": {"description": "The lock is in \"unlocked\" mode", "label": "unlocked"}, "unlocked with timeout": {"description": "The lock is in \"unlocked with timeout\" mode", "label": "unlocked with timeout"}}}, "label": "lock", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"updateCodes": {"description": "Update the codes", "arguments": {"codes": {"description": "Update to these codes"}}}, "deleteCode": {"description": "Delete the code", "arguments": {"codeSlot": {"description": "Delete the code in this code slot"}}}, "lock": {"description": "Lock the lock"}, "reloadAllCodes": {"description": "Reload all the codes"}, "requestCode": {"description": "Request a code", "arguments": {"codeSlot": {"description": "Request the code from this code slot"}}}, "setCode": {"description": "Set a code", "arguments": {"codeSlot": {"description": "Set the code in this code slot"}, "codePIN": {"description": "Set the code pin"}, "codeName": {"description": "Set the code name"}}}, "unlock": {"description": "Unlock the lock"}, "unlockWithTimeout": {"description": "Unlock the lock with a timeout"}, "setCodeLength": {"description": "Set the code length for the code", "arguments": {"length": {"description": "Length to which the code should be set"}}}, "nameSlot": {"description": "Set the name slot for the code", "arguments": {"codeSlot": {"description": "Code slot number for the code"}, "codeName": {"description": "Code name for the code"}}}}}}, {"name": "Lock Only", "status": "deprecated", "attributes": {"lock": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "LockState", "type": "string", "enum": ["locked", "unknown", "unlocked", "unlocked with timeout"]}}, "required": ["value"]}, "values": ["locked", "unknown", "unlocked", "unlocked with timeout"], "enumCommands": [{"command": "lock", "value": "locked"}]}}, "commands": {"lock": {"arguments": [], "name": "lock"}}, "id": "lockOnly", "version": 1, "i18n": {"attributes": {"lock": {"i18n": {"value": {"unlocked": {"description": "The device is unlocked"}, "unknown": {"description": "The state of the device is unknown"}, "locked": {"description": "The device is locked"}}}, "unlocked": "with timeout.value=The device is unlocked with a timeout", "description": "The state of the lock device", "label": "lock", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "Allow for the lock control of a lock device", "commands": {"lock": {"description": "Lock the device"}}}}, {"name": "Lock", "status": "live", "attributes": {"lock": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "LockState", "type": "string", "enum": ["locked", "unknown", "unlocked", "unlocked with timeout"]}, "data": {"type": "object", "additionalProperties": false, "properties": {"method": {"type": "string", "enum": ["manual", "keypad", "auto", "command", "rfid", "fingerprint", "bluetooth"]}, "codeId": {"type": "string"}, "codeName": {"type": "string"}, "timeout": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}}}, "required": ["value"]}, "values": ["locked", "unknown", "unlocked", "unlocked with timeout"], "enumCommands": [{"command": "lock", "value": "locked"}, {"command": "unlock", "value": "unlocked"}]}}, "commands": {"lock": {"arguments": [], "name": "lock"}, "unlock": {"arguments": [], "name": "unlock"}}, "id": "lock", "version": 1, "i18n": {"description": "Allow for the control of a lock device", "attributes": {"lock": {"i18n": {"value": {"unknown": {"description": "The state of the device is unknown", "label": "Unknown"}, "locked": {"description": "The device is locked", "label": "Locked"}, "unlocked": {"description": "The device is unlocked", "label": "Unlocked"}, "unlocked with timeout": {"description": "The device is unlocked with a timeout", "label": "Temporarily unlocked"}}}, "description": "The state of the lock device", "label": "lock", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"unlock": {"label": "Unlocked", "description": "Unlock the device"}, "lock": {"label": "Locked", "description": "Lock the device"}}}}, {"name": "Log Trigger", "status": "proposed", "attributes": {"logState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["idle", "inProgress"]}}}, "values": ["idle", "inProgress"]}, "logRequestState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["idle", "triggerRequired"]}}}, "values": ["idle", "triggerRequired"]}, "logInfo": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}, "required": ["value"]}}}, "commands": {"triggerLog": {"arguments": [], "name": "triggerLog"}, "triggerLogWithLogInfo": {"arguments": [{"name": "logInfo", "schema": {"title": "JsonObject", "type": "object"}, "optional": false}], "name": "triggerLogWithLogInfo"}, "triggerLogWithUrl": {"arguments": [{"name": "url", "schema": {"title": "URL", "type": "string", "pattern": "^(https?):\\/\\/((?:[a-zA-Z0-9.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-zA-Z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?$"}, "optional": true}], "name": "triggerLogWithUrl"}}, "id": "logTrigger", "version": 1, "i18n": {"attributes": {"logState": {"description": "State of the log", "label": "log state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "logRequestState": {"description": "State of the log request", "label": "log request state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "logInfo": {"description": "Log information", "label": "log info", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"triggerLog": {"description": "Trigger upload of the log"}, "triggerLogWithLogInfo": {"description": "Trigger upload of the log with log info"}, "triggerLogWithUrl": {"description": "Trigger uploa dof the log with URL"}}, "description": "Trigger uploading of log information"}}, {"name": "Media Controller", "status": "proposed", "attributes": {"activities": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}, "required": ["value"]}, "actedOnBy": ["startActivity"]}, "currentActivity": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "required": ["value"]}, "actedOnBy": ["startActivity"]}}, "commands": {"startActivity": {"arguments": [{"schema": {"title": "String", "type": "string", "maxLength": 255}, "name": "activityId", "optional": false}], "name": "startActivity"}}, "id": "mediaController", "version": 1, "i18n": {"description": "Allows for the control of a media controller device", "attributes": {"currentActivity": {"description": "The currently active activity on the media controller", "label": "current activity", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "activities": {"description": "A list of all of the configured activities on the media controller", "label": "activities", "displayTemplate": "{{device.label}} {{attribute}} was updated"}}, "commands": {"startActivity": {"arguments": {"activityId": {"description": "The identification number of the activity to start"}}, "description": "Start an activity"}}}}, {"name": "Media Group", "status": "proposed", "attributes": {"groupRole": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["primary", "auxilary", "ungrouped"]}}, "required": ["value"]}, "values": ["primary", "auxilary", "ungrouped"]}, "groupPrimaryDeviceId": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "required": ["value"]}}, "groupId": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "required": ["value"]}}, "groupVolume": {"schema": {"title": "IntegerPercent", "type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 100}, "unit": {"type": "string", "enum": ["%"], "default": "%"}}, "required": ["value"]}, "setter": "setGroupVolume", "actedOnBy": ["groupVolumeUp", "groupVolumeDown"]}, "groupMute": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "MuteState", "type": "string", "enum": ["muted", "unmuted"]}}, "required": ["value"]}, "values": ["muted", "unmuted"], "setter": "setGroupMute", "enumCommands": [{"command": "muteGroup", "value": "muted"}, {"command": "unmuteGroup", "value": "unmuted"}]}}, "commands": {"setGroupVolume": {"arguments": [{"name": "groupVolume", "schema": {"type": "integer", "minimum": 0, "maximum": 100}, "optional": false}], "name": "setGroupVolume"}, "groupVolumeUp": {"arguments": [], "name": "groupVolumeUp"}, "groupVolumeDown": {"arguments": [], "name": "groupVolumeDown"}, "setGroupMute": {"arguments": [{"name": "state", "schema": {"title": "MuteState", "type": "string", "enum": ["muted", "unmuted"]}, "optional": false}], "name": "setGroupMute"}, "muteGroup": {"arguments": [], "name": "muteGroup"}, "unmuteGroup": {"arguments": [], "name": "unmuteGroup"}}, "id": "mediaGroup", "version": 1, "i18n": {"description": "Allows for the expression of media grouping.", "attributes": {"groupRole": {"description": "Current role in the group", "i18n": {"value": {"primary": {"description": "Device is the group controller", "label": "primary"}, "auxilary": {"description": "Device is a non-controlling member of the group", "label": "auxilary"}, "ungrouped": {"description": "Device is \"ungrouped\"", "label": "ungrouped"}}}, "label": "group role", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "groupPrimaryDeviceId": {"description": "Reference to the main controller of the group", "label": "group controller identifier", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "groupId": {"description": "An identifier for the group", "label": "group identifier", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "groupVolume": {"description": "The current group volume setting of the audio group", "label": "group volume", "displayTemplate": "{{attribute}} of {{device.label}}: {{value}}%"}, "groupMute": {"description": "Current status of group audio mute", "i18n": {"value": {"muted": {"description": "The group audio is in \"muted\" state", "label": "muted"}, "unmuted": {"description": "The group audio is in \"unmuted\" state", "label": "unmuted"}}}, "label": "group mute", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "commands": {"setGroupVolume": {"description": "Set the group volume level", "arguments": {"groupVolume": {"description": "A value to which the group volume level should be set"}}}, "groupVolumeUp": {"description": "Turn the group volume up"}, "groupVolumeDown": {"description": "Turn the group volume down"}, "setGroupMute": {"description": "Set the group audio mute state", "arguments": {"state": {"description": "Set the group audio mute state to \"muted\" or \"unmuted\""}}}, "muteGroup": {"description": "Set the group audio to mute state"}, "unmuteGroup": {"description": "Set the group audio to unmute state"}}}}, {"name": "Media Input Source", "status": "live", "attributes": {"inputSource": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "MediaSource", "type": "string", "enum": ["AM", "CD", "FM", "HDMI", "HDMI1", "HDMI2", "HDMI3", "HDMI4", "HDMI5", "HDMI6", "digitalTv", "USB", "YouTube", "aux", "bluetooth", "digital", "melon", "wifi"]}}, "required": ["value"]}, "values": ["AM", "CD", "FM", "HDMI", "HDMI1", "HDMI2", "HDMI3", "HDMI4", "HDMI5", "HDMI6", "digitalTv", "USB", "YouTube", "aux", "bluetooth", "digital", "melon", "wifi"], "setter": "setInputSource"}, "supportedInputSources": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "MediaSource", "type": "string", "enum": ["AM", "CD", "FM", "HDMI", "HDMI1", "HDMI2", "HDMI3", "HDMI4", "HDMI5", "HDMI6", "digitalTv", "USB", "YouTube", "aux", "bluetooth", "digital", "melon", "wifi"]}}}, "required": ["value"]}}}, "commands": {"setInputSource": {"arguments": [{"name": "mode", "schema": {"title": "MediaSource", "type": "string", "enum": ["AM", "CD", "FM", "HDMI", "HDMI1", "HDMI2", "HDMI3", "HDMI4", "HDMI5", "HDMI6", "digitalTv", "USB", "YouTube", "aux", "bluetooth", "digital", "melon", "wifi"]}, "optional": false}], "name": "setInputSource"}}, "id": "mediaInputSource", "version": 1, "i18n": {"description": "Allows for the control of the media input source.", "attributes": {"inputSource": {"description": "Current input source", "i18n": {"value": {"AM": {"description": "Input source is AM", "label": "AM"}, "CD": {"description": "Input source is CD", "label": "CD"}, "FM": {"description": "Input source is FM", "label": "FM"}, "HDMI": {"description": "Input source is HDMI", "label": "HDMI"}, "HDMI1": {"description": "Input source is HDMI1", "label": "HDMI1"}, "HDMI2": {"description": "Input source is HDMI2", "label": "HDMI2"}, "HDMI3": {"description": "Input source is HDMI3", "label": "HDMI3"}, "HDMI4": {"description": "Input source is HDMI4", "label": "HDMI4"}, "HDMI5": {"description": "Input source is HDMI5", "label": "HDMI5"}, "HDMI6": {"description": "Input source is HDMI6", "label": "HDMI6"}, "digitalTv": {"description": "Input source is digital TV", "label": "digitalTv"}, "USB": {"description": "Input source is USB", "label": "USB"}, "YouTube": {"description": "Input source is YouTube", "label": "YouTube"}, "aux": {"description": "Input source is aux", "label": "aux"}, "bluetooth": {"description": "Input source is bluetooth", "label": "bluetooth"}, "digital": {"description": "Input source is digital audio", "label": "digital"}, "melon": {"description": "Input source is melon", "label": "melon"}, "wifi": {"description": "Input source is wifi", "label": "wifi"}}}, "label": "input source", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedInputSources": {"description": "Supported input sources", "label": "supported input sources", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setInputSource": {"description": "Set the input source for the media", "arguments": {"mode": {"description": "Set the input source, to AM, CD, FM, HDMI, HDMI1, HDMI2, HDMI3, HDMI4, HDMI5, HDMI6, digitalTv, USB, YouTube, aux, bluetooth, digital, melon, or wifi"}}}}}}, {"name": "Media Playback Repeat", "status": "proposed", "attributes": {"playbackRepeatMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["all", "off", "one"]}}, "required": ["value"]}, "values": ["all", "off", "one"], "setter": "setPlaybackRepeatMode"}}, "commands": {"setPlaybackRepeatMode": {"arguments": [{"name": "mode", "schema": {"type": "string", "enum": ["all", "off", "one"]}, "optional": false}], "name": "setPlaybackRepeatMode"}}, "id": "mediaPlaybackRepeat", "version": 1, "i18n": {"description": "Allows for the control of the media playback repeat.", "attributes": {"playbackRepeatMode": {"description": "The current mode of the playback repeat mode, \"all\", \"off\" or \"one\"", "label": "playback repeat mode", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setPlaybackRepeatMode": {"description": "Set the playback repeat mode", "arguments": {"mode": {"description": "Mode to which to the playback repeat mode should be set, \"all\", \"off\" or \"one\""}}}}}}, {"name": "Media Playback Shuffle", "status": "proposed", "attributes": {"playbackShuffle": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["disabled", "enabled"]}}, "required": ["value"]}, "values": ["disabled", "enabled"], "setter": "setPlaybackShuffle"}}, "commands": {"setPlaybackShuffle": {"arguments": [{"name": "shuffle", "schema": {"type": "string", "enum": ["disabled", "enabled"]}, "optional": false}], "name": "setPlaybackShuffle"}}, "id": "mediaPlaybackShuffle", "version": 1, "i18n": {"description": "Allows for the control of media playback shuffle.", "commands": {"setPlaybackShuffle": {"description": "Set the shuffle playback mode", "arguments": {"shuffle": {"description": "Set the shuffle playback to enabled or disabled"}}}}, "attributes": {"playbackShuffle": {"description": "The current state of the playback shuffle", "label": "playback shuffle", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Media Playback", "status": "live", "attributes": {"playbackStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["paused", "playing", "stopped", "fast forwarding", "rewinding", "buffering"]}}}, "values": ["paused", "playing", "stopped", "fast forwarding", "rewinding", "buffering"], "setter": "setPlaybackStatus", "enumCommands": [{"command": "play", "value": "playing"}, {"command": "pause", "value": "paused"}, {"command": "stop", "value": "stopped"}, {"command": "fastForward", "value": "fast forwarding"}, {"command": "rewind", "value": "rewinding"}]}, "supportedPlaybackCommands": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "MediaPlaybackCommands", "type": "string", "enum": ["pause", "play", "stop", "fastForward", "rewind"]}}}}}}, "commands": {"setPlaybackStatus": {"arguments": [{"name": "status", "schema": {"type": "string", "enum": ["paused", "playing", "stopped", "fast forwarding", "rewinding"]}, "optional": false}], "name": "setPlaybackStatus"}, "play": {"arguments": [], "name": "play"}, "pause": {"arguments": [], "name": "pause"}, "stop": {"arguments": [], "name": "stop"}, "fastForward": {"arguments": [], "name": "fastForward"}, "rewind": {"arguments": [], "name": "rewind"}}, "id": "mediaPlayback", "version": 1, "i18n": {"description": "Allows for the control of the media playback.", "attributes": {"playbackStatus": {"description": "Status of the media playback. Null if user is watching a TV show.", "i18n": {"value": {"paused": {"description": "Media playback is in a \"paused\" state", "label": "Pause"}, "playing": {"description": "Media playback is in a \"playing\" state", "label": "Play"}, "stopped": {"description": "Media playback is in a \"stopped\" state", "label": "Stop"}, "fast forwarding": {"description": "Media playback is in a \"fast forwarding\" state", "label": "Fast forward"}, "rewinding": {"description": "Media playback is in a \"rewinding\" state", "label": "Rewind"}, "buffering": {"description": "Media playback is in a \"buffering\" state", "label": "Buffering"}}}, "label": "Media playback", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedPlaybackCommands": {"description": "Media playback commands which are supported", "label": "supported playback commands", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "commands": {"setPlaybackStatus": {"description": "Set the playback status", "label": "Set playback status", "arguments": {"status": {"description": "Set the playback status to \"paused\", \"playing\", \"stopped\", \"fast forwarding\" or \"rewinding\" state."}}}, "play": {"description": "Start the media playback", "label": "Play"}, "pause": {"description": "Pause the media playback", "label": "Pause"}, "stop": {"description": "Stop the media playback", "label": "Stop"}, "fastForward": {"description": "Fast forward the media playback", "label": "Fast forward"}, "rewind": {"description": "Rewind the media playback", "label": "Rewind"}}}}, {"name": "Media Presets", "status": "proposed", "attributes": {"presets": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "MediaPreset", "type": "object", "additionalProperties": false, "properties": {"id": {"type": "string"}, "name": {"type": "string"}, "mediaSource": {"type": "string"}, "imageUrl": {"type": "string"}}, "required": ["id", "name"]}}}}}}, "commands": {"playPreset": {"arguments": [{"name": "presetId", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "playPreset"}}, "id": "mediaPresets", "version": 1, "i18n": {"commands": {"playPreset": {"description": "Play a preset", "arguments": {"presetId": {"description": "Id of the preset to be played"}}}}, "attributes": {"presets": {"description": "A Json representation of all the presets for the player. It will be a JSON array of objects containing 'id' and 'name' as mandatory fields. Format, '``[{\"id\":\"<id>\",\"name\":\"<name>\"},{}..]``'", "label": "presets", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "Allows setting a preset from a know list of presets for the media player"}}, {"name": "Media Track Control", "status": "live", "attributes": {"supportedTrackControlCommands": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "MediaTrackCommands", "type": "string", "enum": ["previousTrack", "nextTrack"]}}}}}}, "commands": {"nextTrack": {"arguments": [], "name": "nextTrack"}, "previousTrack": {"arguments": [], "name": "previousTrack"}}, "id": "mediaTrackControl", "version": 1, "i18n": {"description": "Allows for the media track control.", "commands": {"nextTrack": {"description": "Go to the next track"}, "previousTrack": {"description": "Go to the previous track"}}, "attributes": {"supportedTrackControlCommands": {"description": "Media track control commands which are supported", "label": "supported track control commands", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Mode", "status": "proposed", "attributes": {"mode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string"}}, "required": ["value"]}, "setter": "setMode"}, "supportedModes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string"}}}}}}, "commands": {"setMode": {"arguments": [{"name": "mode", "schema": {"type": "string"}, "optional": false}], "name": "setMode"}}, "id": "mode", "version": 1, "i18n": {"description": "Allows for control of the modes that the device supports.", "attributes": {"mode": {"description": "Current mode", "label": "mode", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedModes": {"description": "Supported modes for this device to be in", "label": "supported modes", "displayTemplate": "{{device.label}} {{attribute}} are {{value}}"}}, "commands": {"setMode": {"description": "Set the mode", "arguments": {"mode": {"description": "The mode to set the device to"}}}}}}, {"name": "Mold Health Concern", "status": "live", "attributes": {"moldHealthConcern": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "AirQualityHealthConcern", "type": "string", "enum": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "required": ["value"]}, "values": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "commands": {}, "id": "moldHealthConcern", "version": 1, "i18n": {"description": "Health Concern levels of mold sensor measurements.", "attributes": {"moldHealthConcern": {"description": "Current health concern of mold, based on the relative health hazard.", "label": "mold health concern", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}", "i18n": {"value": {"good": {"description": "Mold is likely undetected.", "label": "good"}, "moderate": {"description": "Mold may exist in small quantities.", "label": "moderate"}, "slightlyUnhealthy": {"description": "Some mold is likely to exist.", "label": "slightly unhealthy"}, "unhealthy": {"description": "Mold may exist in unhealthy levels.", "label": "unhealthy"}, "veryUnhealthy": {"description": "Mold may exist in very unhealthy levels.", "label": "very unhealthy"}, "hazardous": {"description": "Mold may exist in levels which are hazardous to health.", "label": "hazardous"}}}}}}}, {"name": "Momentary", "status": "live", "attributes": {}, "commands": {"push": {"arguments": [], "name": "push"}}, "id": "momentary", "version": 1, "i18n": {"note": "The Momentary capability does not define any attributes, so subscribing to any events will be Device Handler-specific. You should consult the specific Device Handler to see what events may be raised when the push() command is executed.", "description": "Allows for the control of a momentary switch device", "commands": {"push": {"description": "Push the momentary switch"}}}}, {"name": "Motion Sensor", "status": "live", "attributes": {"motion": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "ActivityState", "type": "string", "enum": ["active", "inactive"]}}, "required": ["value"]}, "values": ["active", "inactive"]}}, "commands": {}, "id": "motionSensor", "version": 1, "i18n": {"attributes": {"motion": {"description": "The current state of the motion sensor", "i18n": {"value": {"inactive": {"description": "The value when no motion is detected", "label": "No motion"}, "active": {"description": "The value when motion is detected", "label": "Motion detected"}}}, "label": "motion", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "description": "Allows for the ability to read motion sensor device states"}}, {"name": "Music Player", "status": "deprecated", "attributes": {"level": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}}, "setter": "setLevel"}, "mute": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "MuteState", "type": "string", "enum": ["muted", "unmuted"]}}}, "values": ["muted", "unmuted"], "enumCommands": [{"command": "mute", "value": "muted"}, {"command": "unmute", "value": "unmuted"}]}, "status": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}, "actedOnBy": ["nextTrack", "pause", "play", "playTrack", "previousTrack", "restoreTrack", "resumeTrack", "setTrack", "stop"]}, "trackData": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}}, "actedOnBy": ["nextTrack", "pause", "play", "playTrack", "previousTrack", "restoreTrack", "resumeTrack", "setTrack", "stop"]}, "trackDescription": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}}, "commands": {"mute": {"arguments": [], "name": "mute"}, "nextTrack": {"arguments": [], "name": "nextTrack"}, "pause": {"arguments": [], "name": "pause"}, "play": {"arguments": [], "name": "play"}, "playTrack": {"arguments": [{"name": "trackToPlay", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "playTrack"}, "previousTrack": {"arguments": [], "name": "previousTrack"}, "restoreTrack": {"arguments": [{"name": "trackToRestore", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "restoreTrack"}, "resumeTrack": {"arguments": [{"name": "trackToResume", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "resumeTrack"}, "setLevel": {"arguments": [{"name": "level", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": false}], "name": "setLevel"}, "setTrack": {"arguments": [{"name": "trackToSet", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "setTrack"}, "stop": {"arguments": [], "name": "stop"}, "unmute": {"arguments": [], "name": "unmute"}}, "id": "musicPlayer", "version": 1, "i18n": {"commands": {"resumeTrack": {"description": "Restore the playlist position to the given track and start playback", "arguments": {"trackToResume": {"description": "A URI String representing the track to resume"}}}, "restoreTrack": {"description": "Restore the playlist position to the given track", "arguments": {"trackToRestore": {"description": "A URI String representing the track to restore"}}}, "setTrack": {"arguments": {"trackToSet": {"description": "Set the given track to the given URI String"}}, "description": "Set the current track"}, "pause": {"description": "Pause playback"}, "setLevel": {"arguments": {"level": {"description": "The level to set playback to in the range ``0-100`` as a percent"}}, "description": "Set the level to the specified value"}, "mute": {"description": "Mute playback"}, "playTrack": {"description": "Play the given track", "arguments": {"trackToPlay": {"description": "A URI String representing the track to play"}}}, "stop": {"description": "Stop playback"}, "nextTrack": {"description": "Advance to the next track"}, "previousTrack": {"description": "Revert to the previous track"}, "play": {"description": "Start playback"}, "unmute": {"description": "Unmute playback"}}, "attributes": {"trackData": {"description": "A JSON data structure that represents current track data", "label": "track data", "displayTemplate": "{{device.label}} {{attribute}} was updated"}, "level": {"description": "``0-100`` (percent)", "label": "volume", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "mute": {"description": "A string representation of whether the music player is muted or not", "i18n": {"value": {"unmuted": {"description": "The value of the ``mute`` attribute if unmuted", "label": "Unmute"}, "muted": {"description": "The value of the ``mute`` attribute if muted", "label": "Mute"}}}, "label": "mute", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "trackDescription": {"description": "Description of the current playing track", "label": "track description", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "status": {"description": "State of the music player as a string", "i18n": {"value": {"pause": {"label": "Pause"}, "play": {"label": "Play"}, "stop": {"label": "Stop"}}}, "label": "status", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "Allows for control of a music playing device", "note": "The music player capability is still under development. It currently supports the Sonos system and as such is implemented in a way that is tailored to Sonos."}}, {"name": "Network Meter", "status": "live", "attributes": {"uplinkSpeed": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}, "required": ["value"]}}, "downlinkSpeed": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}, "required": ["value"]}}}, "commands": {}, "id": "networkMeter", "version": 1, "i18n": {"description": "Gets the reading of the network meter.", "attributes": {"uplinkSpeed": {"description": "Current reading of the uplink speed from the network meter.", "label": "uplink speed", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "downlinkSpeed": {"description": "Current reading of the downlink speed from the network meter.", "label": "downlink speed", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Notification", "status": "live", "attributes": {}, "commands": {"deviceNotification": {"arguments": [{"name": "notification", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "deviceNotification"}}, "id": "notification", "version": 1, "i18n": {"description": "Allows for displaying notifications on devices that allow notifications to be displayed", "commands": {"deviceNotification": {"arguments": {"notification": {"description": "The notification message to be displayed on the device"}}, "description": "Send a notification to the device, which will in turn be displayed by the device"}}}}, {"name": "Object Detection", "status": "live", "attributes": {"detected": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "ObjectDetectionValue", "type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}, "qty": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "data": {"title": "JsonObject", "type": "object"}}, "required": ["value"]}}, "required": ["value"]}}, "supportedValues": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "String", "type": "string", "maxLength": 255}}}}}}, "commands": {}, "id": "objectDetection", "version": 1, "i18n": {"attributes": {"detected": {"description": "The current objects that are detected", "label": "detected", "displayTemplate": "{{device.label}} detected {{detected.qty}} {{detected.value}}"}, "supportedValues": {"description": "The set of allowable values that the detected attribute can hold.", "label": "supported values", "displayTemplate": "{{device.label}} detected {{detected.qty}} {{detected.value}}"}}, "description": "Allows for the ability to read object detection device state"}}, {"name": "Occupancy Sensor", "status": "live", "attributes": {"occupancy": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "OccupancyState", "type": "string", "enum": ["occupied", "unoccupied"]}}, "required": ["value"]}, "values": ["occupied", "unoccupied"]}}, "commands": {}, "id": "occupancySensor", "version": 1, "i18n": {"description": "The ability to see the current status of a occupancy sensor device", "attributes": {"occupancy": {"i18n": {"value": {"occupied": {"description": "The area is occupied", "label": "Inside"}, "unoccupied": {"description": "The area is unoccupied", "label": "Away"}}}, "description": "The current state of the occupancy sensor", "label": "occupancy", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"id": "ocf", "name": "Ocf", "status": "proposed", "attributes": {"n": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "icv": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "dmv": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "di": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "pi": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "mnmn": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "mnml": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "mnmo": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "mndt": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "mnpv": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "mnos": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "mnhw": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "mnfv": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "mnsl": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "st": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}, "vid": {"schema": {"title": "StringAttribute", "type": "object", "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "additionalProperties": false, "required": ["value"]}, "actedOnBy": ["postOcfCommand"]}}, "commands": {"postOcfCommand": {"arguments": [{"name": "href", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}, {"name": "value", "schema": {"title": "JsonObject", "type": "object"}, "optional": false}], "name": "postOcfCommand"}}, "version": 1, "i18n": {"commands": {"postOcfCommand": {"arguments": {"value": {"description": "OCF value"}, "href": {"description": "OCF href"}}, "description": "Send raw OCF command"}}, "attributes": {"st": {"description": "SystemTime (Date)", "label": "st", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "mnsl": {"description": "Support link (URL)", "label": "mnsl", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "pi": {"description": "Platform ID", "label": "pi", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "mnmo": {"description": "Model Number", "label": "mnmo", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "mnos": {"description": "OS Version", "label": "mnos", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "mnfv": {"description": "Firmware version", "label": "mnfv", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "icv": {"description": "OIC(OCF) Core Spec. Version (ex> \"core.1.1.0\")", "label": "icv", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "di": {"description": "Device Id", "label": "di", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "mnml": {"description": "Manufacturer Details Link(URL)", "label": "mnml", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "dmv": {"description": "OIC(OCF) Vertical Domain Spec. Version (ex>  \"res.1.1.0,sh.1.1.0\",)", "label": "dmv", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "mnpv": {"description": "Platform Version", "label": "mnpv", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "n": {"description": "Device Name  (ex> \"[TV] Samsung 6 Series (43)\")", "label": "n", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "mnmn": {"description": "Manufacturer Name", "label": "mnmn", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "vid": {"description": "Vendor ID (or Device ID of Device Type)", "label": "vid", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "mndt": {"description": "Date of Manufacture (Date)", "label": "mndt", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "mnhw": {"description": "Hardware Version", "label": "mnhw", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "Device that supports the OCF protocol"}}, {"name": "Odor Sensor", "status": "live", "attributes": {"odorLevel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}, "required": ["value"]}}}, "commands": {}, "id": "odorSensor", "version": 1, "i18n": {"description": "Gets the odor sensor reading.", "attributes": {"odorLevel": {"description": "The current oder sensor level reading", "label": "odor level", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Operating State", "status": "proposed", "attributes": {"machineState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "OperatingState", "type": "string", "enum": ["paused", "running", "ready"]}}, "required": ["value"]}, "values": ["paused", "running", "ready"], "setter": "setMachineState"}, "supportedMachineStates": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "OperatingState", "type": "string", "enum": ["paused", "running", "ready"]}}}, "required": ["value"]}}}, "commands": {"setMachineState": {"arguments": [{"name": "state", "schema": {"title": "OperatingState", "type": "string", "enum": ["paused", "running", "ready"]}, "optional": false}], "name": "setMachineState"}}, "id": "operatingState", "version": 1, "i18n": {"description": "Allows for the control of the operational state.", "attributes": {"machineState": {"description": "Current state of the machine", "i18n": {"value": {"ready": {"description": "The machine is in \"ready\" mode", "label": "ready"}, "running": {"description": "The machine is in \"running\" mode", "label": "running"}, "paused": {"description": "The machine is in \"paused\" mode", "label": "paused"}}}, "label": "machine state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedMachineStates": {"description": "States supported by the machine", "i18n": {"value": {"ready": {"description": "The machine is in \"ready\" mode", "label": "ready"}, "running": {"description": "The machine is in \"running\" mode", "label": "running"}, "paused": {"description": "The machine is in \"paused\" mode", "label": "paused"}}}, "label": "supported machine states", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setMachineState": {"description": "Set the machine state", "arguments": {"state": {"description": "Set the machine to this state"}}}}}}, {"name": "Outlet", "status": "deprecated", "attributes": {"switch": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "SwitchState", "type": "string", "enum": ["on", "off"]}}, "required": ["value"]}, "values": ["off", "on"], "enumCommands": [{"command": "on", "value": "on"}, {"command": "off", "value": "off"}]}}, "commands": {"off": {"arguments": [], "name": "off"}, "on": {"arguments": [], "name": "on"}}, "id": "outlet", "version": 1, "i18n": {"attributes": {"switch": {"i18n": {"value": {"off": {"description": "The value of the ``switch`` attribute if the outlet is off"}, "on": {"description": "The value of the ``switch`` attribute if the outlet is on"}}}, "description": "A string representation of whether the outlet is on or off", "label": "switch", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"on": {"description": "Turn an outlet on"}, "off": {"description": "Turn an outlet off"}}, "description": "Allows for the control of an outlet device. Deprecated in favor of Switch."}}, {"name": "Oven Mode", "status": "proposed", "attributes": {"ovenMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "OvenMode", "type": "string", "enum": ["heating", "grill", "warming", "defrosting", "Conventional", "Bake", "BottomHeat", "ConvectionBake", "ConvectionRoast", "Broil", "ConvectionBroil", "SteamCook", "SteamBake", "SteamRoast", "SteamBottomHeatplusConvection", "Microwave", "MWplusGrill", "MWplusConvection", "MWplusHotBlast", "MWplusHotBlast2", "SlimMiddle", "SlimStrong", "SlowCook", "Proof", "Dehydrate", "Others"]}}, "required": ["value"]}, "values": ["heating", "grill", "warming", "defrosting", "Conventional", "Bake", "BottomHeat", "ConvectionBake", "ConvectionRoast", "Broil", "ConvectionBroil", "SteamCook", "SteamBake", "SteamRoast", "SteamBottomHeatplusConvection", "Microwave", "MWplusGrill", "MWplusConvection", "MWplusHotBlast", "MWplusHotBlast2", "SlimMiddle", "SlimStrong", "SlowCook", "Proof", "Dehydrate", "Others"], "setter": "setOvenMode"}, "supportedOvenModes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "OvenMode", "type": "string", "enum": ["heating", "grill", "warming", "defrosting", "Conventional", "Bake", "BottomHeat", "ConvectionBake", "ConvectionRoast", "Broil", "ConvectionBroil", "SteamCook", "SteamBake", "SteamRoast", "SteamBottomHeatplusConvection", "Microwave", "MWplusGrill", "MWplusConvection", "MWplusHotBlast", "MWplusHotBlast2", "SlimMiddle", "SlimStrong", "SlowCook", "Proof", "Dehydrate", "Others"]}}}}}}, "commands": {"setOvenMode": {"arguments": [{"name": "mode", "schema": {"title": "OvenMode", "type": "string", "enum": ["heating", "grill", "warming", "defrosting", "Conventional", "Bake", "BottomHeat", "ConvectionBake", "ConvectionRoast", "Broil", "ConvectionBroil", "SteamCook", "SteamBake", "SteamRoast", "SteamBottomHeatplusConvection", "Microwave", "MWplusGrill", "MWplusConvection", "MWplusHotBlast", "MWplusHotBlast2", "SlimMiddle", "SlimStrong", "SlowCook", "Proof", "Dehydrate", "Others"]}, "optional": false}], "name": "setOvenMode"}}, "id": "ovenMode", "version": 1, "i18n": {"description": "Allows for the control of the oven mode.", "attributes": {"ovenMode": {"description": "The mode of operation that the oven is set to", "i18n": {"value": {"heating": {"label": "Heat"}, "grill": {"label": "Grill"}, "warming": {"label": "Warm"}, "defrosting": {"label": "Defrost"}, "Conventional": {"label": "Conventional"}, "Bake": {"label": "Bake"}, "BottomHeat": {"label": "Bottom Heat"}, "ConvectionBake": {"label": "Convection Bake"}, "ConvectionRoast": {"label": "Convection Roast"}, "Broil": {"label": "Broil"}, "ConvectionBroil": {"label": "Convection Broil"}, "SteamCook": {"label": "Steam Cook"}, "SteamBake": {"label": "Steam Bake"}, "SteamRoast": {"label": "Steam Roast"}, "SteamBottomHeatplusConvection": {"label": "Steam Bottom Heat + Convection"}, "Microwave": {"label": "Microwave"}, "MWplusGrill": {"label": "Microwave + Grill"}, "MWplusConvection": {"label": "Microwave + Convection"}, "MWplusHotBlast": {"label": "Microwave + Hot Blast"}, "MWplusHotBlast2": {"label": "Microwave + Hot Blast 2"}, "SlimMiddle": {"label": "Slim Middle"}, "SlimStrong": {"label": "Slim Strong"}, "SlowCook": {"label": "Slow Cook"}, "Proof": {"label": "Proof"}, "Dehydrate": {"label": "Dehydrate"}, "Others": {"label": "Others"}}}, "label": "oven mode", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedOvenModes": {"description": "The modes supported by this oven", "label": "supported oven modes", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "commands": {"setOvenMode": {"description": "Set the operation mode of the oven", "arguments": {"mode": {"description": "The mode to which oven operation should be set to"}}}}}}, {"name": "Oven Operating State", "status": "proposed", "attributes": {"machineState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["ready", "running", "paused"]}}}, "values": ["ready", "running", "paused"], "setter": "setMachineState", "actedOnBy": ["stop"]}, "supportedMachineStates": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["ready", "running", "paused"]}}}}}, "ovenJobState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["cleaning", "cooking", "cooling", "draining", "preheat", "ready", "rinsing", "finished", "scheduledStart", "warming", "defrosting", "sensing", "searing", "fastPreheat", "scheduledEnd", "stoneHeating", "timeHoldPreheat"]}}}, "values": ["cleaning", "cooking", "cooling", "draining", "preheat", "ready", "rinsing", "finished", "scheduledStart", "warming", "defrosting", "sensing", "searing", "fastPreheat", "scheduledEnd", "stoneHeating", "timeHoldPreheat"]}, "completionTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}}, "operationTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}}, "actedOnBy": ["stop"]}, "progress": {"schema": {"title": "IntegerPercent", "type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 100}, "unit": {"type": "string", "enum": ["%"], "default": "%"}}, "required": ["value"]}}}, "commands": {"setMachineState": {"arguments": [{"name": "state", "schema": {"type": "string", "enum": ["stop"]}, "optional": false}], "name": "setMachineState"}, "stop": {"arguments": [], "name": "stop"}, "start": {"arguments": [{"name": "mode", "schema": {"title": "OvenMode", "type": "string", "enum": ["heating", "grill", "warming", "defrosting", "Conventional", "Bake", "BottomHeat", "ConvectionBake", "ConvectionRoast", "Broil", "ConvectionBroil", "SteamCook", "SteamBake", "SteamRoast", "SteamBottomHeatplusConvection", "Microwave", "MWplusGrill", "MWplusConvection", "MWplusHotBlast", "MWplusHotBlast2", "SlimMiddle", "SlimStrong", "SlowCook", "Proof", "Dehydrate", "Others"]}, "optional": true}, {"name": "time", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": true}, {"name": "setpoint", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": true}], "name": "start"}}, "id": "ovenOperatingState", "version": 1, "i18n": {"description": "Allows for the control of the oven operational state.", "attributes": {"machineState": {"description": "Current state of the oven", "i18n": {"value": {"ready": {"description": "The oven is in \"ready\" mode", "label": "ready"}, "running": {"description": "The oven is in \"running\" mode", "label": "running"}, "paused": {"description": "The oven is in \"paused\" mode", "label": "paused"}}}, "label": "machine state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedMachineStates": {"description": "States supported by the oven", "i18n": {"value": {"ready": {"description": "The oven is in \"ready\" mode", "label": "ready"}, "running": {"description": "The oven is in \"running\" mode", "label": "running"}, "paused": {"description": "The oven is in \"paused\" mode", "label": "paused"}}}, "label": "supported machine states", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "ovenJobState": {"description": "The state of the oven job", "i18n": {"value": {"cleaning": {"description": "Oven is in \"cleaning\" state", "label": "cleaning"}, "cooking": {"description": "Oven is in \"cooking\" state", "label": "cooking"}, "cooling": {"description": "Oven is in \"cooling\" state", "label": "cooling"}, "draining": {"description": "Oven is in \"draining\" state", "label": "draining"}, "preheat": {"description": "Oven is in \"preheat\" state", "label": "preheat"}, "ready": {"description": "Oven is in \"ready\" state", "label": "ready"}, "rinsing": {"description": "Oven is in \"rinsing\" state", "label": "rinsing"}, "finished": {"description": "Oven is in \"finished\" state", "label": "finished"}, "scheduledStart": {"description": "Oven is in \"scheduledStart\" state", "label": "scheduledStart"}, "warming": {"description": "Oven is in \"warming\" state", "label": "warming"}, "defrosting": {"description": "Oven is in \"defrosting\" state", "label": "defrosting"}, "sensing": {"description": "Oven is in \"sensing\" state", "label": "sensing"}, "searing": {"description": "Oven is in \"searing\" state", "label": "searing"}, "fastPreheat": {"description": "Oven is in \"fastPreheat\" state", "label": "fastPreheat"}, "scheduledEnd": {"description": "Oven is in \"scheduledEnd\" state", "label": "scheduledEnd"}, "stoneHeating": {"description": "Oven is in \"stoneHeating\" state", "label": "stoneHeating"}, "timeHoldPreheat": {"description": "Oven is in \"timeHoldPreheat\" state", "label": "timeHoldPreheat"}}}, "label": "oven job state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "completionTime": {"description": "The completion time for the oven job", "label": "completion time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "operationTime": {"description": "Operation time of the oven job", "label": "operation time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "progress": {"description": "The percentage complete for the oven job", "label": "progress", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}%"}}, "commands": {"setMachineState": {"description": "Set the oven state", "arguments": {"state": {"description": "Set the oven to this state"}}}, "stop": {"description": "Stop the oven operation"}, "start": {"description": "Start the oven operation", "arguments": {"mode": {"description": "the mode for oven-mode"}, "time": {"description": "operationTime for oven-operaitng-state"}, "setpoint": {"description": "the setpoint for oven-setpoint"}}}}}}, {"name": "Oven Operational State", "status": "deprecated", "attributes": {"machineState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["ready", "running", "paused"]}}}, "values": ["ready", "running", "paused"], "setter": "setMachineState", "actedOnBy": ["stop"]}, "supportedMachineStates": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["ready", "running", "paused"]}}}}}, "ovenJobState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["cleaning", "cooking", "cooling", "draining", "preheat", "ready", "rinsing", "finished", "scheduledStart", "warming", "defrosting", "sensing", "searing", "fastPreheat", "scheduledEnd", "stoneHeating", "timeHoldPreheat"]}}}, "values": ["cleaning", "cooking", "cooling", "draining", "preheat", "ready", "rinsing", "finished", "scheduledStart", "warming", "defrosting", "sensing", "searing", "fastPreheat", "scheduledEnd", "stoneHeating", "timeHoldPreheat"]}, "completionTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}}, "operationTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}}, "actedOnBy": ["stop"]}, "progress": {"schema": {"title": "IntegerPercent", "type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 100}, "unit": {"type": "string", "enum": ["%"], "default": "%"}}, "required": ["value"]}}}, "commands": {"setMachineState": {"arguments": [{"name": "state", "schema": {"type": "string", "enum": ["stop"]}, "optional": false}], "name": "setMachineState"}, "stop": {"arguments": [], "name": "stop"}}, "id": "ovenOperationalState", "version": 1, "i18n": {"description": "Allows for the control of the oven operational state.", "attributes": {"machineState": {"description": "Current state of the oven", "i18n": {"value": {"ready": {"description": "The oven is in \"ready\" mode", "label": "ready"}, "running": {"description": "The oven is in \"running\" mode", "label": "running"}, "paused": {"description": "The oven is in \"paused\" mode", "label": "paused"}}}, "label": "machine state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedMachineStates": {"description": "States supported by the oven", "i18n": {"value": {"ready": {"description": "The oven is in \"ready\" mode", "label": "ready"}, "running": {"description": "The oven is in \"running\" mode", "label": "running"}, "paused": {"description": "The oven is in \"paused\" mode", "label": "paused"}}}, "label": "supported machine states", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "ovenJobState": {"description": "The state of the oven job", "i18n": {"value": {"cleaning": {"description": "Oven is in \"cleaning\" state", "label": "cleaning"}, "cooking": {"description": "Oven is in \"cooking\" state", "label": "cooking"}, "cooling": {"description": "Oven is in \"cooling\" state", "label": "cooling"}, "draining": {"description": "Oven is in \"draining\" state", "label": "draining"}, "preheat": {"description": "Oven is in \"preheat\" state", "label": "preheat"}, "ready": {"description": "Oven is in \"ready\" state", "label": "ready"}, "rinsing": {"description": "Oven is in \"rinsing\" state", "label": "rinsing"}, "finished": {"description": "Oven is in \"finished\" state", "label": "finished"}, "scheduledStart": {"description": "Oven is in \"scheduledStart\" state", "label": "scheduledStart"}, "warming": {"description": "Oven is in \"warming\" state", "label": "warming"}, "defrosting": {"description": "Oven is in \"defrosting\" state", "label": "defrosting"}, "sensing": {"description": "Oven is in \"sensing\" state", "label": "sensing"}, "searing": {"description": "Oven is in \"searing\" state", "label": "searing"}, "fastPreheat": {"description": "Oven is in \"fastPreheat\" state", "label": "fastPreheat"}, "scheduledEnd": {"description": "Oven is in \"scheduledEnd\" state", "label": "scheduledEnd"}, "stoneHeating": {"description": "Oven is in \"stoneHeating\" state", "label": "stoneHeating"}, "timeHoldPreheat": {"description": "Oven is in \"timeHoldPreheat\" state", "label": "timeHoldPreheat"}}}, "label": "oven job state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "completionTime": {"description": "The completion time for the oven job", "label": "completion time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "operationTime": {"description": "Operation time of the oven job", "label": "operation time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "progress": {"description": "The percentage complete for the oven job", "label": "progress", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}%"}}, "commands": {"setMachineState": {"description": "Set the oven state", "arguments": {"state": {"description": "Set the oven to this state"}}}, "stop": {"description": "Stop the oven operation"}}}}, {"name": "Oven Setpoint", "status": "proposed", "attributes": {"ovenSetpoint": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}, "required": ["value"]}, "setter": "setOvenSetpoint"}}, "commands": {"setOvenSetpoint": {"arguments": [{"name": "setpoint", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": false}], "name": "setOvenSetpoint"}}, "id": "ovenSetpoint", "version": 1, "i18n": {"description": "Allows for the control of the oven set point.", "commands": {"setOvenSetpoint": {"description": "Set the oven set point.", "arguments": {"setpoint": {"description": "Set the oven set point to this number"}}}}, "attributes": {"ovenSetpoint": {"description": "Current value of the oven set point", "label": "oven setpoint", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Panic Alarm", "status": "live", "attributes": {"panicAlarm": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["panic", "clear"]}}, "required": ["value"]}, "values": ["panic", "clear"]}}, "commands": {}, "id": "panicAlarm", "version": 1, "i18n": {"attributes": {"panicAlarm": {"i18n": {"value": {"clear": {"description": "The panic alarm is clear", "label": "clear"}, "panic": {"description": "The panic alarm is in panic", "label": "panic"}}}, "description": "The current status of the panic alarm", "label": "panic alarm", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "Allows for monitoring the status of a panic alarm"}}, {"name": "Pest Control", "status": "proposed", "attributes": {"pestControl": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["idle", "trapArmed", "trapRearmRequired", "pestDetected", "pestExterminated"]}}, "required": ["value"]}, "values": ["idle", "trapArmed", "trapRearmRequired", "pestDetected", "pestExterminated"]}}, "commands": {}, "id": "pestControl", "version": 1, "i18n": {"description": "Supports pest control driven alarms", "attributes": {"pestControl": {"i18n": {"value": {"idle": {"description": "The pest control device is idle", "label": "is idle"}, "trapArmed": {"description": "The pest control device is armed", "label": "is armed"}, "trapRearmRequired": {"description": "The pest control device requires rearming", "label": "requires rearming"}, "pestDetected": {"description": "The pest control device detected a pest", "label": "has detected a pest"}, "pestExterminated": {"description": "The pest control device exterminated a pest", "label": "has exterminated a pest"}}}, "label": "pest control", "displayTemplate": "{{device.label}} {{value}}"}}}}, {"name": "pH Measurement", "status": "live", "attributes": {"pH": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 14}, "unit": {"type": "string", "enum": ["pH"], "default": "pH"}}, "required": ["value"]}}}, "commands": {}, "id": "pHMeasurement", "version": 1, "i18n": {"attributes": {"pH": {"description": "A number representing the current pH level measured by the device", "label": "ph", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}pH"}}, "description": "Read the pH value off of a pH measurement capable device"}}, {"name": "Polling", "status": "deprecated", "attributes": {}, "commands": {"poll": {"arguments": [], "name": "poll"}}, "id": "polling", "version": 1, "i18n": {"description": "Allows for the polling of devices that support it. Deprecated, devices should schedule their own polling using the scheduling API or use the Ping capability.", "commands": {"poll": {"description": "Poll the device"}}}}, {"name": "Power Consumption Report", "status": "live", "attributes": {"powerConsumption": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PowerConsumption", "type": "object", "additionalProperties": false, "properties": {"start": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "end": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "energy": {"type": "number"}, "power": {"type": "number"}, "deltaEnergy": {"type": "number"}, "powerEnergy": {"type": "number"}, "energySaved": {"type": "number"}, "persistedEnergy": {"type": "number"}, "persistedSavedEnergy": {"type": "number"}}}}, "required": ["value"]}}}, "commands": {}, "id": "powerConsumptionReport", "version": 1, "i18n": {"attributes": {"powerConsumption": {"i18n": {"value": {"prop": {"description": "The instant power and accumulated energy consumed during specific time period"}}}, "description": "energy and power consumption during specific time period", "label": "power consumption", "displayTemplate": "{{device.label}} {{attribute}} was updated"}}, "description": "Allows periodically reporting the energy and power consumption"}}, {"name": "Power Meter", "status": "live", "attributes": {"power": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number"}, "unit": {"type": "string", "enum": ["W"], "default": "W"}}, "required": ["value"]}}}, "commands": {}, "id": "powerMeter", "version": 1, "i18n": {"description": "Allows for reading the power consumption from devices that report it", "attributes": {"power": {"description": "A number representing the current power consumption. Check the device documentation for how this value is reported", "label": "power meter", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}W"}}}}, {"name": "Power Source", "status": "live", "attributes": {"powerSource": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["battery", "dc", "mains", "unknown"]}}, "required": ["value"]}, "values": ["battery", "dc", "mains", "unknown"]}}, "commands": {}, "id": "powerSource", "version": 1, "i18n": {"description": "Gives the ability to determine the current power source of the device", "attributes": {"powerSource": {"description": "The current power source for the device", "i18n": {"value": {"dc": {"description": "The device is using a DC power source", "label": "DC power supply"}, "unknown": {"description": "The current power source of the device is unknown", "label": "Unknown"}, "battery": {"description": "The device is using battery", "label": "Battery"}, "mains": {"description": "The device is using an AC power source", "label": "AC power supply"}}}, "label": "power source", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Precipitation Measurement", "status": "proposed", "attributes": {"precipitationLevel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveNumber", "type": "number", "minimum": 0}, "unit": {"type": "string", "enum": ["mm", "in"]}}, "required": ["value", "unit"]}}}, "commands": {"resetPrecipitationLevel": {"arguments": [], "name": "resetPrecipitationLevel"}}, "id": "precipitationMeasurement", "version": 1, "i18n": {"description": "Allows for reading the level of precipitation from devices that report it.", "attributes": {"precipitationLevel": {"description": "The level of precipitation measured in millimeters or inches.", "label": "precipitation level", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}{{unit}}"}}, "commands": {"resetPrecipitationLevel": {"description": "Set the reported precipitation level back to 0."}}}}, {"name": "Precipitation Rate", "status": "proposed", "attributes": {"precipitationRate": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveNumber", "type": "number", "minimum": 0}, "unit": {"type": "string", "enum": ["mm/h", "in/h"]}}, "required": ["value", "unit"]}}}, "commands": {}, "id": "precipitationRate", "version": 1, "i18n": {"description": "Allows for reading the rate of precipitation from devices that report it.", "attributes": {"precipitationRate": {"description": "The rate of precipitation measured in mm/hr or in/hr.", "label": "precipitation rate", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}{{unit}}"}}}}, {"name": "Precipitation Sensor", "status": "proposed", "attributes": {"precipitationIntensity": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["none", "possiblePrecipitation", "light", "moderate", "heavy", "violent"]}}, "required": ["value"]}, "values": ["none", "possiblePrecipitation", "light", "moderate", "heavy", "violent"]}}, "commands": {}, "id": "precipitationSensor", "version": 1, "i18n": {"description": "Allows for reading the state of precipitation from devices that report it.", "attributes": {"precipitationIntensity": {"i18n": {"value": {"none": {"description": "There is no precipitation.", "label": "no precipitation"}, "possiblePrecipitation": {"description": "There is likely precipitation, but the intensity is not known.", "label": "possible precipitation"}, "light": {"description": "There is light precipitation (generally for rainfall with a precipitation rate that is < 0.2 in/hr or < 2 mm/hr).", "label": "light"}, "moderate": {"description": "There is moderate precipitation (generally for rainfall with a precipitation rate that is between 0.21 in/hr to 0.5 in/hr or 2 mm/hr to 10 mm/hr).", "label": "moderate"}, "heavy": {"description": "There is heavy precipitation (generally for rainfall with a precipitation rate that is > 0.5 in/hr or 10 mm/hr to 50 mm/hr).", "label": "heavy"}, "violent": {"description": "There is violent precipitation (generally for rainfall with a precipitation rate that is > 2.0 in/hr or > 50 mm/hr).", "label": "violent"}}}, "description": "A human readable representation of the presence of precipitation or the precipitation intensity (values based on definitions for rainfall from U.S. N.O.A.A. or U.K. Met Office).", "label": "precipitation intensity", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Presence Sensor", "status": "live", "attributes": {"presence": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PresenceState", "type": "string", "enum": ["present", "not present"]}}, "required": ["value"]}, "values": ["not present", "present"]}}, "commands": {}, "id": "presenceSensor", "version": 1, "i18n": {"description": "The ability to see the current status of a presence sensor device", "attributes": {"presence": {"i18n": {"value": {"present": {"description": "The device is present", "label": "Arrived"}, "not present": {"label": "Left"}}}, "not": "present.value=The device is not present", "description": "The current state of the presence sensor", "label": "presence", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Radon Health Concern", "status": "proposed", "attributes": {"radonHealthConcern": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "AirQualityHealthConcern", "type": "string", "enum": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "required": ["value"]}, "values": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "commands": {}, "id": "radonHealthConcern", "version": 1, "i18n": {"description": "Health Concern levels of radon sensor measurements.", "attributes": {"radonHealthConcern": {"description": "Current health concern of radon sensor measurement, based on the relative health hazard", "label": "radon health concern", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}}}, {"name": "Radon Measurement", "status": "live", "attributes": {"radonLevel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number"}, "unit": {"type": "string", "enum": ["pCi/L"], "default": "pCi/L"}}, "required": ["value", "unit"]}}}, "commands": {}, "id": "radonMeasurement", "version": 1, "i18n": {"description": "Measure radon levels", "attributes": {"radonLevel": {"description": "The level of radon detected", "label": "radon level", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}} pCi/L"}}}}, {"name": "Rapid Cooling", "status": "proposed", "attributes": {"rapidCooling": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["off", "on"]}}, "required": ["value"]}, "values": ["off", "on"], "setter": "setRapidCooling"}}, "commands": {"setRapidCooling": {"arguments": [{"name": "rapidCooling", "schema": {"type": "string", "enum": ["off", "on"]}, "optional": false}], "name": "setRapidCooling"}}, "id": "rapidCooling", "version": 1, "i18n": {"description": "Allows for the control of rapid cooling.", "attributes": {"rapidCooling": {"description": "Current status of the rapid cooling", "i18n": {"value": {"off": {"description": "The rapid cooling is in \"off\" state"}, "on": {"description": "The rapid cooling is in \"on\" state"}}}, "label": "rapid cooling", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setRapidCooling": {"description": "Set the rapid cooling", "arguments": {"rapidCooling": {"description": "Set the rapid cooling to \"off\" or \"on\" state"}}}}}}, {"name": "Refresh", "status": "live", "attributes": {}, "commands": {"refresh": {"arguments": [], "name": "refresh"}}, "id": "refresh", "version": 1, "i18n": {"commands": {"refresh": {"description": "Send the refresh command to the device"}}, "description": "Allow the execution of the refresh command for devices that support it"}}, {"name": "Refrigeration Setpoint", "status": "proposed", "attributes": {"refrigerationSetpoint": {"schema": {"title": "Temperature", "type": "object", "additionalProperties": false, "properties": {"value": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "unit": {"title": "TemperatureUnit", "type": "string", "enum": ["F", "C"]}}, "required": ["value", "unit"]}, "setter": "setRefrigerationSetpoint"}}, "commands": {"setRefrigerationSetpoint": {"arguments": [{"name": "setpoint", "schema": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "optional": false}], "name": "setRefrigerationSetpoint"}}, "id": "refrigerationSetpoint", "version": 1, "i18n": {"description": "Allows for the control of the refrigeration set point.", "attributes": {"refrigerationSetpoint": {"description": "The temperature at which refrigeration should trigger", "label": "refrigeration setpoint", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}{{unit}}"}}, "commands": {"setRefrigerationSetpoint": {"description": "Set the refrigeration setpoint.", "arguments": {"setpoint": {"description": "A temperature value to which the refrigeration setpoint should be set to"}}}}}}, {"name": "Refrigeration", "status": "live", "attributes": {"rapidCooling": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["off", "on"]}}}, "values": ["off", "on"], "setter": "setRapidCooling"}, "rapidFreezing": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["off", "on"]}}}, "values": ["off", "on"], "setter": "setRapidFreezing"}, "defrost": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["off", "on"]}}}, "values": ["off", "on"], "setter": "setDefrost"}}, "commands": {"setRapidCooling": {"arguments": [{"name": "rapidCooling", "schema": {"type": "string", "enum": ["off", "on"]}, "optional": false}], "name": "setRapidCooling"}, "setRapidFreezing": {"arguments": [{"name": "rapidCooling", "schema": {"type": "string", "enum": ["off", "on"]}, "optional": false}], "name": "setRapidFreezing"}, "setDefrost": {"arguments": [{"name": "rapidCooling", "schema": {"type": "string", "enum": ["off", "on"]}, "optional": false}], "name": "setDefrost"}}, "id": "refrigeration", "version": 1, "i18n": {"description": "Allows for the control of the refrigeration.", "commands": {"setRapidCooling": {"description": "Sets the rapid cooling on or off", "arguments": {"rapidCooling": {"description": "The on or off value for the rapid cooling"}}}, "setRapidFreezing": {"description": "Sets the rapid freezing on or off", "arguments": {"rapidCooling": {"description": "The on or off value for the rapid freezing"}}}, "setDefrost": {"description": "Sets the defrost on or off", "arguments": {"rapidCooling": {"description": "The on or off value for the defrost"}}}}, "attributes": {"rapidCooling": {"description": "Status of the rapid cooling", "label": "rapid cooling", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "rapidFreezing": {"description": "Status of the rapid freezing", "label": "rapid freezing", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "defrost": {"description": "Status of the defrost", "label": "defrost", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Relative Brightness", "status": "proposed", "attributes": {"brightnessIntensity": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 7}, "unit": {"type": "string", "enum": ["level"]}}, "required": ["value", "unit"]}}}, "commands": {}, "id": "relativeBrightness", "version": 1, "i18n": {"description": "Allow reading the relative brightness intensity from devices that support it", "attributes": {"brightnessIntensity": {"description": "A numerical representation of the relative brightness intensity taken by the device. Example references: 0 = complete dark, 1 = overcast night, 2 = full moon, 3 = deep twilight, 4 = twilight, 5 = very dark day, 6 = overcast day, 7 = full daylight", "label": "Illuminance level", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}} {{unit}}"}}}}, {"name": "Relative Humidity Measurement", "status": "live", "attributes": {"humidity": {"schema": {"title": "Percent", "type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 100}, "unit": {"type": "string", "enum": ["%"], "default": "%"}}, "required": ["value"]}}}, "commands": {}, "id": "relativeHumidityMeasurement", "version": 1, "i18n": {"description": "Allow reading the relative humidity from devices that support it", "attributes": {"humidity": {"description": "A numerical representation of the relative humidity measurement taken by the device", "label": "relative humidity", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}%"}}}}, {"name": "Relay Switch", "status": "deprecated", "attributes": {"switch": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "SwitchState", "type": "string", "enum": ["on", "off"]}}, "required": ["value"]}, "values": ["off", "on"], "enumCommands": [{"command": "on", "value": "on"}, {"command": "off", "value": "off"}]}}, "commands": {"off": {"arguments": [], "name": "off"}, "on": {"arguments": [], "name": "on"}}, "id": "relaySwitch", "version": 1, "i18n": {"commands": {"off": {"description": "Turn a relay switch off"}, "on": {"description": "Turn a relay switch on"}}, "attributes": {"switch": {"i18n": {"value": {"off": {"description": "The value of the ``switch`` attribute if the relay switch is off"}, "on": {"description": "The value of the ``switch`` attribute if the relay switch is on"}}}, "description": "A string representation of whether the relay switch is on or off", "label": "switch", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "Allows for the control of a relay switch device. This is **deprecated** please use switch instead."}}, {"name": "Remote Control Status", "status": "live", "attributes": {"remoteControlEnabled": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["false", "true"]}}, "required": ["value"]}, "values": ["false", "true"]}}, "commands": {}, "id": "remoteControlStatus", "version": 1, "i18n": {"description": "Gets the value of remote control status.", "attributes": {"remoteControlEnabled": {"description": "Current status of the remote control", "label": "Remote control", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}", "i18n": {"value": {"false": {"label": "disabled"}, "true": {"label": "enabled"}}}}}}}, {"name": "Rice Cooker", "status": "proposed", "attributes": {"cookerState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["ready", "running", "scheduled", "error"]}}}}, "cookerMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["cooking", "keepWarm", "reheating", "autoClean", "soakInnerPot"]}}}, "setter": "setMode"}, "supportedCookerModes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["cooking", "keepWarm", "reheating", "autoClean", "soakInnerPot"]}}}}}, "menu": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "RiceCookerMenu", "type": "string", "enum": ["stickyPlainRice", "wellCookedPlainRice", "frozenPlainRice", "mixedGrains", "brownRice100", "riceWithBeans", "barleyMixedGrainRice", "superGrains", "frozenMixedGrain", "cauldronRice", "riceForGimbap", "plainQuick", "konjacRice", "mixedGrainForSalad", "mixedGrainsQuick", "nutritiousRiceInHotPot", "steamedDish", "nutritiousPorridge", "scorchedRiceTea", "bakedEgg", "sousVide", "scorchedRice", "babyFoodStep1", "babyFoodStep2", "babyFoodStep3", "riceWithSeasonedVegetablesInHotPot", "mixedGrainForSlim", "mixedGrainForVitality", "haedeul", "alchanmi", "odaemi", "oatRice", "chickpeaRice", "quinoaRice", "lentilBeanRice", "steamedSweetPotato", "galbijjim", "samgyetang", "riceWithWebfootOctopusAndSaussureaInHotPot", "riceWithAbaloneInHotPot", "riceWithTruffledBulgogiInHotPot", "riceWithSteakInHotPot", "riceWithRipeKimchiAndAbaloneInHotPot", "riceWithBeefAndBeanSproutsInHotPot", "riceWithAssortedMushrommsInHotPot", "riceWithBrackenAndSteakInHotPot", "riceWithBeefAndAssortedMushroomsInHotPot", "riceWithSpicyWebfootOctopusInHotPot", "kamutRice", "mixedGrainForSaladWithLentilBean", "mixedGrainForSaladWithChickpea(1Cup)", "mixedGrainForSaladWithQuinoa", "mixedGrainForSaladWithMillet", "mixedGrainForSaladWithChickpea(2Cup)", "mixedGrainForSaladWithBarley", "mixedGrainForSaladWithBrownRice(1Cup)", "mixedGrainForSaladWithOatRice", "mixedGrainForSaladWithBrownRice(2Cup)", "mixedGrainForSaladWithKamut", "mixedGrainForSaladWithBrownRice", "mixedGrainForSaladWithQuinoa(1Cup)", "mixedGrainForSaladWithChickpea", "mixedGrainForSaladWithQuinoa(2Cup)", "mixedGrainForSaladWithAdlay", "mixedGrainForSaladWithLentilBean(1Cup)", "plainPorridge", "mixedGrainForSaladWithLentilBean(2Cup)", "abalonePorridge", "pineNutPorridge", "boiledEgg", "chicken,SweetPumpkin,Cabbage,StickyRicePorridge", "chicken,Zucchini,SweetPotato,StickyRicePorridge", "beef,Apple,BroccoliPorridge", "chicken,BokChoy,BananaPorridge", "beef,Zucchini,PearPorridge", "beef,ShiitakeMushroom,EggPorridge", "beef,KingTrumpetMushroom,BroccoliPorridge", "chicken,BeanSprouts,Jujube,StickyRicePorridge", "cod-Meat,Vitamin,CarrotPorridge", "chicken,SweetPotato,Beet,BeetPorridge", "chicken,PineNut,Chestnut,Spinach,SoftBoiledRice", "beef,Beet,EnokiMushroom,PerillaSeeds,SoftBoiledRice", "chicken,Cheese,Beet,Eggplant,SoftBoiledRice", "codFlesh,SweetPumpkin,Mung-BeanSprouts,BlackSesame,SoftBoiledRice", "beef,Cabbage,WhiteMushroom,Jujube,SoftBoiledRice", "broccoliPorridge", "potatoCarrotPorridge", "yakbab", "steamedPotato", "customMenu01", "customMenu02", "customMenu03", "customMenu04", "customMenu05", "customMenu06", "customMenu07", "customMenu08", "customMenu09", "customMenu10", "customMenu11", "customMenu12", "customMenu13", "customMenu14", "customMenu15", "customMenu16", "customMenu17", "customMenu18", "customMenu19", "customMenu20"]}}, "required": ["value"]}}, "supportedMenus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "RiceCookerMenu", "type": "string", "enum": ["stickyPlainRice", "wellCookedPlainRice", "frozenPlainRice", "mixedGrains", "brownRice100", "riceWithBeans", "barleyMixedGrainRice", "superGrains", "frozenMixedGrain", "cauldronRice", "riceForGimbap", "plainQuick", "konjacRice", "mixedGrainForSalad", "mixedGrainsQuick", "nutritiousRiceInHotPot", "steamedDish", "nutritiousPorridge", "scorchedRiceTea", "bakedEgg", "sousVide", "scorchedRice", "babyFoodStep1", "babyFoodStep2", "babyFoodStep3", "riceWithSeasonedVegetablesInHotPot", "mixedGrainForSlim", "mixedGrainForVitality", "haedeul", "alchanmi", "odaemi", "oatRice", "chickpeaRice", "quinoaRice", "lentilBeanRice", "steamedSweetPotato", "galbijjim", "samgyetang", "riceWithWebfootOctopusAndSaussureaInHotPot", "riceWithAbaloneInHotPot", "riceWithTruffledBulgogiInHotPot", "riceWithSteakInHotPot", "riceWithRipeKimchiAndAbaloneInHotPot", "riceWithBeefAndBeanSproutsInHotPot", "riceWithAssortedMushrommsInHotPot", "riceWithBrackenAndSteakInHotPot", "riceWithBeefAndAssortedMushroomsInHotPot", "riceWithSpicyWebfootOctopusInHotPot", "kamutRice", "mixedGrainForSaladWithLentilBean", "mixedGrainForSaladWithChickpea(1Cup)", "mixedGrainForSaladWithQuinoa", "mixedGrainForSaladWithMillet", "mixedGrainForSaladWithChickpea(2Cup)", "mixedGrainForSaladWithBarley", "mixedGrainForSaladWithBrownRice(1Cup)", "mixedGrainForSaladWithOatRice", "mixedGrainForSaladWithBrownRice(2Cup)", "mixedGrainForSaladWithKamut", "mixedGrainForSaladWithBrownRice", "mixedGrainForSaladWithQuinoa(1Cup)", "mixedGrainForSaladWithChickpea", "mixedGrainForSaladWithQuinoa(2Cup)", "mixedGrainForSaladWithAdlay", "mixedGrainForSaladWithLentilBean(1Cup)", "plainPorridge", "mixedGrainForSaladWithLentilBean(2Cup)", "abalonePorridge", "pineNutPorridge", "boiledEgg", "chicken,SweetPumpkin,Cabbage,StickyRicePorridge", "chicken,Zucchini,SweetPotato,StickyRicePorridge", "beef,Apple,BroccoliPorridge", "chicken,BokChoy,BananaPorridge", "beef,Zucchini,PearPorridge", "beef,ShiitakeMushroom,EggPorridge", "beef,KingTrumpetMushroom,BroccoliPorridge", "chicken,BeanSprouts,Jujube,StickyRicePorridge", "cod-Meat,Vitamin,CarrotPorridge", "chicken,SweetPotato,Beet,BeetPorridge", "chicken,PineNut,Chestnut,Spinach,SoftBoiledRice", "beef,Beet,EnokiMushroom,PerillaSeeds,SoftBoiledRice", "chicken,Cheese,Beet,Eggplant,SoftBoiledRice", "codFlesh,SweetPumpkin,Mung-BeanSprouts,BlackSesame,SoftBoiledRice", "beef,Cabbage,WhiteMushroom,Jujube,SoftBoiledRice", "broccoliPorridge", "potatoCarrotPorridge", "yakbab", "steamedPotato", "customMenu01", "customMenu02", "customMenu03", "customMenu04", "customMenu05", "customMenu06", "customMenu07", "customMenu08", "customMenu09", "customMenu10", "customMenu11", "customMenu12", "customMenu13", "customMenu14", "customMenu15", "customMenu16", "customMenu17", "customMenu18", "customMenu19", "customMenu20"]}}}}}, "schedulableMenus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "RiceCookerMenu", "type": "string", "enum": ["stickyPlainRice", "wellCookedPlainRice", "frozenPlainRice", "mixedGrains", "brownRice100", "riceWithBeans", "barleyMixedGrainRice", "superGrains", "frozenMixedGrain", "cauldronRice", "riceForGimbap", "plainQuick", "konjacRice", "mixedGrainForSalad", "mixedGrainsQuick", "nutritiousRiceInHotPot", "steamedDish", "nutritiousPorridge", "scorchedRiceTea", "bakedEgg", "sousVide", "scorchedRice", "babyFoodStep1", "babyFoodStep2", "babyFoodStep3", "riceWithSeasonedVegetablesInHotPot", "mixedGrainForSlim", "mixedGrainForVitality", "haedeul", "alchanmi", "odaemi", "oatRice", "chickpeaRice", "quinoaRice", "lentilBeanRice", "steamedSweetPotato", "galbijjim", "samgyetang", "riceWithWebfootOctopusAndSaussureaInHotPot", "riceWithAbaloneInHotPot", "riceWithTruffledBulgogiInHotPot", "riceWithSteakInHotPot", "riceWithRipeKimchiAndAbaloneInHotPot", "riceWithBeefAndBeanSproutsInHotPot", "riceWithAssortedMushrommsInHotPot", "riceWithBrackenAndSteakInHotPot", "riceWithBeefAndAssortedMushroomsInHotPot", "riceWithSpicyWebfootOctopusInHotPot", "kamutRice", "mixedGrainForSaladWithLentilBean", "mixedGrainForSaladWithChickpea(1Cup)", "mixedGrainForSaladWithQuinoa", "mixedGrainForSaladWithMillet", "mixedGrainForSaladWithChickpea(2Cup)", "mixedGrainForSaladWithBarley", "mixedGrainForSaladWithBrownRice(1Cup)", "mixedGrainForSaladWithOatRice", "mixedGrainForSaladWithBrownRice(2Cup)", "mixedGrainForSaladWithKamut", "mixedGrainForSaladWithBrownRice", "mixedGrainForSaladWithQuinoa(1Cup)", "mixedGrainForSaladWithChickpea", "mixedGrainForSaladWithQuinoa(2Cup)", "mixedGrainForSaladWithAdlay", "mixedGrainForSaladWithLentilBean(1Cup)", "plainPorridge", "mixedGrainForSaladWithLentilBean(2Cup)", "abalonePorridge", "pineNutPorridge", "boiledEgg", "chicken,SweetPumpkin,Cabbage,StickyRicePorridge", "chicken,Zucchini,SweetPotato,StickyRicePorridge", "beef,Apple,BroccoliPorridge", "chicken,BokChoy,BananaPorridge", "beef,Zucchini,PearPorridge", "beef,ShiitakeMushroom,EggPorridge", "beef,KingTrumpetMushroom,BroccoliPorridge", "chicken,BeanSprouts,Jujube,StickyRicePorridge", "cod-Meat,Vitamin,CarrotPorridge", "chicken,SweetPotato,Beet,BeetPorridge", "chicken,PineNut,Chestnut,Spinach,SoftBoiledRice", "beef,Beet,EnokiMushroom,PerillaSeeds,SoftBoiledRice", "chicken,Cheese,Beet,Eggplant,SoftBoiledRice", "codFlesh,SweetPumpkin,Mung-BeanSprouts,BlackSesame,SoftBoiledRice", "beef,Cabbage,WhiteMushroom,Jujube,SoftBoiledRice", "broccoliPorridge", "potatoCarrotPorridge", "yakbab", "steamedPotato", "customMenu01", "customMenu02", "customMenu03", "customMenu04", "customMenu05", "customMenu06", "customMenu07", "customMenu08", "customMenu09", "customMenu10", "customMenu11", "customMenu12", "customMenu13", "customMenu14", "customMenu15", "customMenu16", "customMenu17", "customMenu18", "customMenu19", "customMenu20"]}}}}}, "completionTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}}, "startTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}}, "event": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["cookingComplete", "keepWarmComplete", "reheatingComplete", "autoCleanComplete", "soakInnerPotComplete", "steamEmission"]}}, "required": ["value"]}}, "supportedEvents": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["cookingComplete", "keepWarmComplete", "reheatingComplete", "autoCleanComplete", "soakInnerPotComplete", "steamEmission"]}}}}}, "schedulingEnabled": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "boolean"}}, "required": ["value"]}}, "scheduledTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}}}, "commands": {"startCooking": {"arguments": [{"name": "menu", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "startCooking"}, "setMode": {"arguments": [{"name": "mode", "schema": {"title": "cookerMode", "type": "string", "enum": ["keepWarm", "reheating", "autoClean", "soakInnerPot"]}, "optional": false}], "name": "setMode"}, "stop": {"arguments": [], "name": "stop"}, "scheduleCooking": {"arguments": [{"name": "time", "schema": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "optional": false}, {"name": "menu", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "scheduleCooking"}}, "id": "riceCooker", "version": 1, "i18n": {"attributes": {"cookerState": {"description": "Current state of the rice cooker", "i18n": {"value": {"ready": {"description": "The rice cooker is in \"ready\" state", "label": "ready"}, "running": {"description": "The rice cooker is in \"running\" state", "label": "running"}, "scheduled": {"description": "The rice cooker is in \"scheduled\" state", "label": "scheduled"}, "error": {"description": "The rice cooker is in \"error\" state", "label": "error"}}}, "label": "rice cooker state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "cookerMode": {"description": "The running Modes of the rice cooker", "i18n": {"value": {"cooking": {"description": "The rice cooker is in \"cooking\" mode", "label": "cooking"}, "keepWarm": {"description": "The rice cooker is in \"keepWarm\" mode", "label": "keep warm"}, "reheating": {"description": "The rice cooker is in \"reheating\" mode", "label": "reheating"}, "autoClean": {"description": "The rice cooker is in \"autoClean\" mode", "label": "auto clean"}, "soakInnerPot": {"description": "The rice cooker is in \"soakInnerPot\" mode", "label": "soak inner pot"}}}, "label": "rice cooker modes", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedCookerModes": {"description": "Modes supported by the rice cooker running state", "i18n": {"value": {"cooking": {"description": "The rice cooker is in \"cooking\" mode", "label": "cooking"}, "keepWarm": {"description": "The rice cooker is in \"keepWarm\" mode", "label": "keep warm"}, "reheating": {"description": "The rice cooker is in \"reheating\" mode", "label": "reheating"}, "autoClean": {"description": "The rice cooker is in \"autoClean\" mode", "label": "auto clean"}, "soakInnerPot": {"description": "The rice cooker is in \"soakInnerPot\" mode", "label": "soak inner pot"}}}, "label": "supported rice cooker modes", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "menu": {"description": "The rice cooker menu", "i18n": {"value": {"stickyPlainRice": {"description": "The glutinous plain rice", "label": "Sticky Plain Rice"}, "wellCookedPlainRice": {"description": "The properly cooked plain rice", "label": "Well Cooked Plain Rice"}, "frozenPlainRice": {"description": "The frozen and stored plain rice", "label": "Frozen Plain Rice"}, "mixedGrains": {"description": "The mixed grain rice", "label": "Mixed Grains"}, "brownRice100": {"description": "The 100% Brown Rice Rice", "label": "Brown Rice 100%"}, "riceWithBeans": {"description": "The healthy bean rice", "label": "Rice with Beans"}, "barleyMixedGrainRice": {"description": "The mixed grain rice with barley", "label": "Barley Mixed Grain Rice"}, "superGrains": {"description": "The rice mixed with 5 kinds of grains", "label": "Super Grains"}, "frozenMixedGrain": {"description": "The frozen and stored grain rice", "label": "Frozen Mixed Grain"}, "cauldronRice": {"description": "The rice cooked in a cauldron", "label": "Cauldron Rice"}, "riceForGimbap": {"description": "The rice for Gimbap", "label": "Rice for Gimbap"}, "plainQuick": {"description": "The quick plain rice", "label": "Plain Quick"}, "konjacRice": {"description": "The rice with Konjac", "label": "Konjac Rice"}, "mixedGrainForSalad": {"description": "The mixed grain rice for salad", "label": "Mixed Grain for Salad"}, "mixedGrainsQuick": {"description": "The quick mixed grain", "label": "Mixed Grains Quick"}, "nutritiousRiceInHotPot": {"description": "The nutritious rice in stone pot", "label": "Nutritious Rice in Hot Pot"}, "steamedDish": {"description": "The steamed dish", "label": "Steamed Dish"}, "nutritiousPorridge": {"description": "The nutritious porridge", "label": "Nutritious Porridge"}, "scorchedRiceTea": {"description": "The scorched rice tea", "label": "Scorched Rice Tea"}, "bakedEgg": {"description": "The baked egg", "label": "Baked Egg"}, "sousVide": {"description": "The sous vide", "label": "Sous Vide"}, "scorchedRice": {"description": "The scorched rice", "label": "Scorched Rice"}, "babyFoodStep1": {"description": "The baby food step 1", "label": "Baby Food Step 1"}, "babyFoodStep2": {"description": "The baby food step 2", "label": "Baby Food Step 2"}, "babyFoodStep3": {"description": "The baby food step 3", "label": "Baby Food Step 3"}, "riceWithSeasonedVegetablesInHotPot": {"description": "The rice with seasoned vegetables in stone pot", "label": "Rice with Seasoned Vegetables in Hot Pot"}, "mixedGrainForSlim": {"description": "The mixed grain rice for slim", "label": "Mixed Grain for Slim"}, "mixedGrainForVitality": {"description": "The mixed grain for vitality", "label": "Mixed Grain for Vitality"}, "haedeul": {"description": "The rice grown in Icheon", "label": "Haedeul"}, "alchanmi": {"description": "The rice grown in Icheon", "label": "Alchanmi"}, "odaemi": {"description": "The rice grown in Cheorwon", "label": "Odaemi"}, "oatRice": {"description": "The oat rice", "label": "Oat Rice"}, "chickpeaRice": {"description": "The chickpea rice", "label": "Chickpea Rice"}, "quinoaRice": {"description": "The quinoa rice", "label": "Quinoa Rice"}, "lentilBeanRice": {"description": "The lentil bean rice", "label": "Lentil Bean Rice"}, "steamedSweetPotato": {"description": "The steamed sweet potato", "label": "Steamed Sweet Potato"}, "galbijjim": {"description": "The braised short ribs", "label": "Galbijjim"}, "samgyetang": {"description": "The chicken soup", "label": "Samgyetang"}, "riceWithWebfootOctopusAndSaussureaInHotPot": {"description": "The rice with webfoot octopus and saussurea in stone pot", "label": "Rice with Webfoot Octopus and Saussurea in Hot Pot"}, "riceWithAbaloneInHotPot": {"description": "The rice with abalone in stone pot", "label": "Rice with Abalone in Hot Pot"}, "riceWithTruffledBulgogiInHotPot": {"description": "The rice with truffled bulgogi in stone pot", "label": "Rice with Truffled Bulgogi in Hot Pot"}, "riceWithSteakInHotPot": {"description": "The rice with steak in stone pot", "label": "rice with Steak in Hot Pot"}, "riceWithRipeKimchiAndAbaloneInHotPot": {"description": "The rice with ripe kimchi and abalone in stone pot", "label": "Rice with Ripe Kimchi and Abalone in Hot Pot"}, "riceWithBeefAndBeanSproutsInHotPot": {"description": "The rice with beef and bean sprouts in stone pot", "label": "Rice with Beef and Bean Sprouts in Hot Pot"}, "riceWithAssortedMushrommsInHotPot": {"description": "The rice with assorted mushromms in stone pot", "label": "Rice with Assorted Mushromms in Hot Pot"}, "riceWithBrackenAndSteakInHotPot": {"description": "The rice with bracken and steak in stone pot", "label": "Rice with Bracken and Steak in Hot Pot"}, "riceWithBeefAndAssortedMushroomsInHotPot": {"description": "The rice with beef and assorted mushrooms in stone pot", "label": "Rice with Beef and Assorted Mushrooms in Hot Pot"}, "riceWithSpicyWebfootOctopusInHotPot": {"description": "The rice with spicy webfoot octopus in stone pot", "label": "Rice with Spicy Webfoot Octopus in Hot Pot"}, "kamutRice": {"description": "The kamut rice", "label": "Kamut Rice"}, "mixedGrainForSaladWithLentilBean": {"description": "The mixed grain for salad with lentil bean", "label": "Mixed Grain for Salad with Lentil Bean"}, "mixedGrainForSaladWithChickpea(1Cup)": {"description": "The mixed grain for salad with chickpea", "label": "Mixed Grain for Salad with Chickpea (1 Cup)"}, "mixedGrainForSaladWithQuinoa": {"description": "The mixed grain for salad with quinoa", "label": "Mixed Grain for Salad with Quinoa"}, "mixedGrainForSaladWithMillet": {"description": "The mixed grain for salad with millet", "label": "Mixed Grain for Salad with Millet"}, "mixedGrainForSaladWithChickpea(2Cup)": {"description": "The mixed grain for salad with chickpea", "label": "Mixed Grain for Salad with Chickpea (2 Cup)"}, "mixedGrainForSaladWithBarley": {"description": "The mixed grain for salad with barley", "label": "Mixed Grain for Salad with Barley"}, "mixedGrainForSaladWithBrownRice(1Cup)": {"description": "The mixed grain for salad with brown rice", "label": "Mixed Grain for Salad with Brown Rice (1 Cup)"}, "mixedGrainForSaladWithOatRice": {"description": "The mixed grain for salad with oat rice", "label": "Mixed Grain for Salad with Oat Rice"}, "mixedGrainForSaladWithBrownRice(2Cup)": {"description": "The mixed grain for salad with brown rice", "label": "Mixed Grain for Salad with Brown Rice (2 Cup)"}, "mixedGrainForSaladWithKamut": {"description": "The mixed grain for salad with kamut", "label": "Mixed Grain for Salad with Kamut"}, "mixedGrainForSaladWithBrownRice": {"description": "The mixed grain for salad with brown rice", "label": "Mixed Grain for Salad with Brown Rice"}, "mixedGrainForSaladWithQuinoa(1Cup)": {"description": "The mixed grain for salad with quinoa", "label": "Mixed Grain for Salad with Quinoa (1Cup)"}, "mixedGrainForSaladWithChickpea": {"description": "The mixed grain for salad with chickpea", "label": "Mixed Grain for Salad with Chickpea"}, "mixedGrainForSaladWithQuinoa(2Cup)": {"description": "The mixed grain for salad with quinoa", "label": "Mixed Grain for Salad with Quinoa (2Cup)"}, "mixedGrainForSaladWithAdlay": {"description": "The mixed grain for salad with adlay", "label": "Mixed Grain for Salad with Adlay"}, "mixedGrainForSaladWithLentilBean(1Cup)": {"description": "The mixed grain for salad with lentil bean", "label": "Mixed Grain for Salad with Lentil Bean (1Cup)"}, "plainPorridge": {"description": "The plain porridge", "label": "Plain Porridge"}, "mixedGrainForSaladWithLentilBean(2Cup)": {"description": "The mixed grain for salad with lentil bean", "label": "Mixed Grain For Salad with Lentil Bean (2 Cup)"}, "abalonePorridge": {"description": "The abalone porridge", "label": "Abalone Porridge"}, "pineNutPorridge": {"description": "The pine nut porridge", "label": "Pine Nut Porridge"}, "boiledEgg": {"description": "The boiled egg", "label": "Boiled Egg"}, "chicken,SweetPumpkin,Cabbage,StickyRicePorridge": {"description": "The sticky rice porridge of chicken, sweet pumpkin, cabbage", "label": "Chicken, Sweet Pumpkin, Cabbage, Sticky Rice Porridge"}, "chicken,Zucchini,SweetPotato,StickyRicePorridge": {"description": "The sticky rice porridge of chicken, zucchini, sweet potato", "label": "Chicken, Zucchini, Sweet Potato, Sticky Rice Porridge"}, "beef,Apple,BroccoliPorridge": {"description": "The of beef, apple, broccoli porridge", "label": "Beef, Apple, Broccoli Porridge"}, "chicken,BokChoy,BananaPorridge": {"description": "The chicken, bokchoy, banana porridge", "label": "Chicken, BokChoy, Banana Porridge"}, "beef,Zucchini,PearPorridge": {"description": "The beef, zucchini, pear porridge", "label": "Beef, Zucchini, Pear Porridge"}, "beef,ShiitakeMushroom,EggPorridge": {"description": "The beef, shiitake mushroom, egg porridge", "label": "Beef, Shiitake Mushroom, Egg Porridge"}, "beef,KingTrumpetMushroom,BroccoliPorridge": {"description": "The beef, king trumpet mushroom, broccoli porridge", "label": "Beef, King Trumpet Mushroom, Broccoli Porridge"}, "chicken,BeanSprouts,Jujube,StickyRicePorridge": {"description": "The Sticky rice porridge of chicken, bean sprouts, jujube", "label": "Chicken, Bean Sprouts, Jujube, Sticky Rice Porridge"}, "cod-Meat,Vitamin,CarrotPorridge": {"description": "The cod-meat, vitamin, carrot porridge", "label": "Cod-Meat, Vitamin, Carrot Porridge"}, "chicken,SweetPotato,Beet,BeetPorridge": {"description": "The chicken, sweet potato, beet, beet porridge", "label": "Chicken, Sweet Potato, Beet, Beet Porridge"}, "chicken,PineNut,Chestnut,Spinach,SoftBoiledRice": {"description": "The soft boiled rice of chicken, pine nut, chestnut, spinach", "label": "Chicken, Pine Nut, Chestnut, Spinach, Soft Boiled Rice"}, "beef,Beet,EnokiMushroom,PerillaSeeds,SoftBoiledRice": {"description": "The soft boiled rice of beef, beet, enoki mushroom, perilla seeds", "label": "Beef, Beet, Enoki Mushroom, Perilla Seeds, Soft Boiled Rice"}, "chicken,Cheese,Beet,Eggplant,SoftBoiledRice": {"description": "The soft boiled rice of chicken, cheese, beet, eggplant", "label": "Chicken, Cheese, Beet, Eggplant, Soft Boiled Rice"}, "codFlesh,SweetPumpkin,Mung-BeanSprouts,BlackSesame,SoftBoiledRice": {"description": "The soft boiled rice of cod flesh, sweet pumpkin, mung-bean sprouts, black sesame", "label": "Cod Flesh, Sweet Pumpkin, Mung-Bean Sprouts, Black Sesame, Soft Boiled Rice"}, "beef,Cabbage,WhiteMushroom,Jujube,SoftBoiledRice": {"description": "The soft boiled rice of beef, cabbage, white mushroom, jujube", "label": "Beef,Cabbage,White Mushroom,Jujube,Soft Boiled Rice"}, "broccoliPorridge": {"description": "The broccoli porridge", "label": "Broccoli Porridge"}, "potatoCarrotPorridge": {"description": "The potato carrot porridge", "label": "Potato Carrot Porridge"}, "yakbab": {"description": "The a sweet Korean dish made by steaming glutinous rice, and mixing with chestnuts, jujubes, and pine nuts", "label": "Yakbab"}, "steamedPotato": {"description": "The steamed potato", "label": "Steamed Potato"}}}, "label": "menu", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedMenus": {"description": "Supported menus for this rice cooker to be in", "i18n": {"value": {"stickyPlainRice": {"description": "The glutinous plain rice", "label": "Sticky Plain Rice"}, "wellCookedPlainRice": {"description": "The properly cooked plain rice", "label": "Well Cooked Plain Rice"}, "frozenPlainRice": {"description": "The frozen and stored plain rice", "label": "Frozen Plain Rice"}, "mixedGrains": {"description": "The mixed grain rice", "label": "Mixed Grains"}, "brownRice100": {"description": "The 100% Brown Rice Rice", "label": "Brown Rice 100%"}, "riceWithBeans": {"description": "The healthy bean rice", "label": "Rice with Beans"}, "barleyMixedGrainRice": {"description": "The mixed grain rice with barley", "label": "Barley Mixed Grain Rice"}, "superGrains": {"description": "The rice mixed with 5 kinds of grains", "label": "Super Grains"}, "frozenMixedGrain": {"description": "The frozen and stored grain rice", "label": "Frozen Mixed Grain"}, "cauldronRice": {"description": "The rice cooked in a cauldron", "label": "Cauldron Rice"}, "riceForGimbap": {"description": "The rice for Gimbap", "label": "Rice for Gimbap"}, "plainQuick": {"description": "The quick plain rice", "label": "Plain Quick"}, "konjacRice": {"description": "The rice with Konjac", "label": "Konjac Rice"}, "mixedGrainForSalad": {"description": "The mixed grain rice for salad", "label": "Mixed Grain for Salad"}, "mixedGrainsQuick": {"description": "The quick mixed grain", "label": "Mixed Grains Quick"}, "nutritiousRiceInHotPot": {"description": "The nutritious rice in stone pot", "label": "Nutritious Rice in Hot Pot"}, "steamedDish": {"description": "The steamed dish", "label": "Steamed Dish"}, "nutritiousPorridge": {"description": "The nutritious porridge", "label": "Nutritious Porridge"}, "scorchedRiceTea": {"description": "The scorched rice tea", "label": "Scorched Rice Tea"}, "bakedEgg": {"description": "The baked egg", "label": "Baked Egg"}, "sousVide": {"description": "The sous vide", "label": "Sous Vide"}, "scorchedRice": {"description": "The scorched rice", "label": "Scorched Rice"}, "babyFoodStep1": {"description": "The baby food step 1", "label": "Baby Food Step 1"}, "babyFoodStep2": {"description": "The baby food step 2", "label": "Baby Food Step 2"}, "babyFoodStep3": {"description": "The baby food step 3", "label": "Baby Food Step 3"}, "riceWithSeasonedVegetablesInHotPot": {"description": "The rice with seasoned vegetables in stone pot", "label": "Rice with Seasoned Vegetables in Hot Pot"}, "mixedGrainForSlim": {"description": "The mixed grain rice for slim", "label": "Mixed Grain for Slim"}, "mixedGrainForVitality": {"description": "The mixed grain for vitality", "label": "Mixed Grain for Vitality"}, "haedeul": {"description": "The rice grown in Icheon", "label": "Haedeul"}, "alchanmi": {"description": "The rice grown in Icheon", "label": "Alchanmi"}, "odaemi": {"description": "The rice grown in Cheorwon", "label": "Odaemi"}, "oatRice": {"description": "The oat rice", "label": "Oat Rice"}, "chickpeaRice": {"description": "The chickpea rice", "label": "Chickpea Rice"}, "quinoaRice": {"description": "The quinoa rice", "label": "Quinoa Rice"}, "lentilBeanRice": {"description": "The lentil bean rice", "label": "Lentil Bean Rice"}, "steamedSweetPotato": {"description": "The steamed sweet potato", "label": "Steamed Sweet Potato"}, "galbijjim": {"description": "The braised short ribs", "label": "Galbijjim"}, "samgyetang": {"description": "The chicken soup", "label": "Samgyetang"}, "riceWithWebfootOctopusAndSaussureaInHotPot": {"description": "The rice with webfoot octopus and saussurea in stone pot", "label": "Rice with Webfoot Octopus and Saussurea in Hot Pot"}, "riceWithAbaloneInHotPot": {"description": "The rice with abalone in stone pot", "label": "Rice with Abalone in Hot Pot"}, "riceWithTruffledBulgogiInHotPot": {"description": "The rice with truffled bulgogi in stone pot", "label": "Rice with Truffled Bulgogi in Hot Pot"}, "riceWithSteakInHotPot": {"description": "The rice with steak in stone pot", "label": "rice with Steak in Hot Pot"}, "riceWithRipeKimchiAndAbaloneInHotPot": {"description": "The rice with ripe kimchi and abalone in stone pot", "label": "Rice with Ripe Kimchi and Abalone in Hot Pot"}, "riceWithBeefAndBeanSproutsInHotPot": {"description": "The rice with beef and bean sprouts in stone pot", "label": "Rice with Beef and Bean Sprouts in Hot Pot"}, "riceWithAssortedMushrommsInHotPot": {"description": "The rice with assorted mushromms in stone pot", "label": "Rice with Assorted Mushromms in Hot Pot"}, "riceWithBrackenAndSteakInHotPot": {"description": "The rice with bracken and steak in stone pot", "label": "Rice with Bracken and Steak in Hot Pot"}, "riceWithBeefAndAssortedMushroomsInHotPot": {"description": "The rice with beef and assorted mushrooms in stone pot", "label": "Rice with Beef and Assorted Mushrooms in Hot Pot"}, "riceWithSpicyWebfootOctopusInHotPot": {"description": "The rice with spicy webfoot octopus in stone pot", "label": "Rice with Spicy Webfoot Octopus in Hot Pot"}, "kamutRice": {"description": "The kamut rice", "label": "Kamut Rice"}, "mixedGrainForSaladWithLentilBean": {"description": "The mixed grain for salad with lentil bean", "label": "Mixed Grain for Salad with Lentil Bean"}, "mixedGrainForSaladWithChickpea(1Cup)": {"description": "The mixed grain for salad with chickpea", "label": "Mixed Grain for Salad with Chickpea (1 Cup)"}, "mixedGrainForSaladWithQuinoa": {"description": "The mixed grain for salad with quinoa", "label": "Mixed Grain for Salad with Quinoa"}, "mixedGrainForSaladWithMillet": {"description": "The mixed grain for salad with millet", "label": "Mixed Grain for Salad with Millet"}, "mixedGrainForSaladWithChickpea(2Cup)": {"description": "The mixed grain for salad with chickpea", "label": "Mixed Grain for Salad with Chickpea (2 Cup)"}, "mixedGrainForSaladWithBarley": {"description": "The mixed grain for salad with barley", "label": "Mixed Grain for Salad with Barley"}, "mixedGrainForSaladWithBrownRice(1Cup)": {"description": "The mixed grain for salad with brown rice", "label": "Mixed Grain for Salad with Brown Rice (1 Cup)"}, "mixedGrainForSaladWithOatRice": {"description": "The mixed grain for salad with oat rice", "label": "Mixed Grain for Salad with Oat Rice"}, "mixedGrainForSaladWithBrownRice(2Cup)": {"description": "The mixed grain for salad with brown rice", "label": "Mixed Grain for Salad with Brown Rice (2 Cup)"}, "mixedGrainForSaladWithKamut": {"description": "The mixed grain for salad with kamut", "label": "Mixed Grain for Salad with Kamut"}, "mixedGrainForSaladWithBrownRice": {"description": "The mixed grain for salad with brown rice", "label": "Mixed Grain for Salad with Brown Rice"}, "mixedGrainForSaladWithQuinoa(1Cup)": {"description": "The mixed grain for salad with quinoa", "label": "Mixed Grain for Salad with Quinoa (1Cup)"}, "mixedGrainForSaladWithChickpea": {"description": "The mixed grain for salad with chickpea", "label": "Mixed Grain for Salad with Chickpea"}, "mixedGrainForSaladWithQuinoa(2Cup)": {"description": "The mixed grain for salad with quinoa", "label": "Mixed Grain for Salad with Quinoa (2Cup)"}, "mixedGrainForSaladWithAdlay": {"description": "The mixed grain for salad with adlay", "label": "Mixed Grain for Salad with Adlay"}, "mixedGrainForSaladWithLentilBean(1Cup)": {"description": "The mixed grain for salad with lentil bean", "label": "Mixed Grain for Salad with Lentil Bean (1Cup)"}, "plainPorridge": {"description": "The plain porridge", "label": "Plain Porridge"}, "mixedGrainForSaladWithLentilBean(2Cup)": {"description": "The mixed grain for salad with lentil bean", "label": "Mixed Grain For Salad with Lentil Bean (2 Cup)"}, "abalonePorridge": {"description": "The abalone porridge", "label": "Abalone Porridge"}, "pineNutPorridge": {"description": "The pine nut porridge", "label": "Pine Nut Porridge"}, "boiledEgg": {"description": "The boiled egg", "label": "Boiled Egg"}, "chicken,SweetPumpkin,Cabbage,StickyRicePorridge": {"description": "The sticky rice porridge of chicken, sweet pumpkin, cabbage", "label": "Chicken, Sweet Pumpkin, Cabbage, Sticky Rice Porridge"}, "chicken,Zucchini,SweetPotato,StickyRicePorridge": {"description": "The sticky rice porridge of chicken, zucchini, sweet potato", "label": "Chicken, Zucchini, Sweet Potato, Sticky Rice Porridge"}, "beef,Apple,BroccoliPorridge": {"description": "The of beef, apple, broccoli porridge", "label": "Beef, Apple, Broccoli Porridge"}, "chicken,BokChoy,BananaPorridge": {"description": "The chicken, bokchoy, banana porridge", "label": "Chicken, BokChoy, Banana Porridge"}, "beef,Zucchini,PearPorridge": {"description": "The beef, zucchini, pear porridge", "label": "Beef, Zucchini, Pear Porridge"}, "beef,ShiitakeMushroom,EggPorridge": {"description": "The beef, shiitake mushroom, egg porridge", "label": "Beef, Shiitake Mushroom, Egg Porridge"}, "beef,KingTrumpetMushroom,BroccoliPorridge": {"description": "The beef, king trumpet mushroom, broccoli porridge", "label": "Beef, King Trumpet Mushroom, Broccoli Porridge"}, "chicken,BeanSprouts,Jujube,StickyRicePorridge": {"description": "The Sticky rice porridge of chicken, bean sprouts, jujube", "label": "Chicken, Bean Sprouts, Jujube, Sticky Rice Porridge"}, "cod-Meat,Vitamin,CarrotPorridge": {"description": "The cod-meat, vitamin, carrot porridge", "label": "Cod-Meat, Vitamin, Carrot Porridge"}, "chicken,SweetPotato,Beet,BeetPorridge": {"description": "The chicken, sweet potato, beet, beet porridge", "label": "Chicken, Sweet Potato, Beet, Beet Porridge"}, "chicken,PineNut,Chestnut,Spinach,SoftBoiledRice": {"description": "The soft boiled rice of chicken, pine nut, chestnut, spinach", "label": "Chicken, Pine Nut, Chestnut, Spinach, Soft Boiled Rice"}, "beef,Beet,EnokiMushroom,PerillaSeeds,SoftBoiledRice": {"description": "The soft boiled rice of beef, beet, enoki mushroom, perilla seeds", "label": "Beef, Beet, Enoki Mushroom, Perilla Seeds, Soft Boiled Rice"}, "chicken,Cheese,Beet,Eggplant,SoftBoiledRice": {"description": "The soft boiled rice of chicken, cheese, beet, eggplant", "label": "Chicken, Cheese, Beet, Eggplant, Soft Boiled Rice"}, "codFlesh,SweetPumpkin,Mung-BeanSprouts,BlackSesame,SoftBoiledRice": {"description": "The soft boiled rice of cod flesh, sweet pumpkin, mung-bean sprouts, black sesame", "label": "Cod Flesh, Sweet Pumpkin, Mung-Bean Sprouts, Black Sesame, Soft Boiled Rice"}, "beef,Cabbage,WhiteMushroom,Jujube,SoftBoiledRice": {"description": "The soft boiled rice of beef, cabbage, white mushroom, jujube", "label": "Beef,Cabbage,White Mushroom,Jujube,Soft Boiled Rice"}, "broccoliPorridge": {"description": "The broccoli porridge", "label": "Broccoli Porridge"}, "potatoCarrotPorridge": {"description": "The potato carrot porridge", "label": "Potato Carrot Porridge"}, "yakbab": {"description": "The a sweet Korean dish made by steaming glutinous rice, and mixing with chestnuts, jujubes, and pine nuts", "label": "Yakbab"}, "steamedPotato": {"description": "The steamed potato", "label": "Steamed Potato"}}}, "label": "supported menus", "displayTemplate": "{{device.label}} {{attribute}} are {{value}}"}, "schedulableMenus": {"description": "Menus for this rice cooker that can be scheduled", "i18n": {"value": {"stickyPlainRice": {"description": "The glutinous plain rice", "label": "Sticky Plain Rice"}, "wellCookedPlainRice": {"description": "The properly cooked plain rice", "label": "Well Cooked Plain Rice"}, "frozenPlainRice": {"description": "The frozen and stored plain rice", "label": "Frozen Plain Rice"}, "mixedGrains": {"description": "The mixed grain rice", "label": "Mixed Grains"}, "brownRice100": {"description": "The 100% Brown Rice Rice", "label": "Brown Rice 100%"}, "riceWithBeans": {"description": "The healthy bean rice", "label": "Rice with Beans"}, "barleyMixedGrainRice": {"description": "The mixed grain rice with barley", "label": "Barley Mixed Grain Rice"}, "superGrains": {"description": "The rice mixed with 5 kinds of grains", "label": "Super Grains"}, "frozenMixedGrain": {"description": "The frozen and stored grain rice", "label": "Frozen Mixed Grain"}, "cauldronRice": {"description": "The rice cooked in a cauldron", "label": "Cauldron Rice"}, "riceForGimbap": {"description": "The rice for Gimbap", "label": "Rice for Gimbap"}, "plainQuick": {"description": "The quick plain rice", "label": "Plain Quick"}, "konjacRice": {"description": "The rice with Konjac", "label": "Konjac Rice"}, "mixedGrainForSalad": {"description": "The mixed grain rice for salad", "label": "Mixed Grain for Salad"}, "mixedGrainsQuick": {"description": "The quick mixed grain", "label": "Mixed Grains Quick"}, "nutritiousRiceInHotPot": {"description": "The nutritious rice in stone pot", "label": "Nutritious Rice in Hot Pot"}, "steamedDish": {"description": "The steamed dish", "label": "Steamed Dish"}, "nutritiousPorridge": {"description": "The nutritious porridge", "label": "Nutritious Porridge"}, "scorchedRiceTea": {"description": "The scorched rice tea", "label": "Scorched Rice Tea"}, "bakedEgg": {"description": "The baked egg", "label": "Baked Egg"}, "sousVide": {"description": "The sous vide", "label": "Sous Vide"}, "scorchedRice": {"description": "The scorched rice", "label": "Scorched Rice"}, "babyFoodStep1": {"description": "The baby food step 1", "label": "Baby Food Step 1"}, "babyFoodStep2": {"description": "The baby food step 2", "label": "Baby Food Step 2"}, "babyFoodStep3": {"description": "The baby food step 3", "label": "Baby Food Step 3"}, "riceWithSeasonedVegetablesInHotPot": {"description": "The rice with seasoned vegetables in stone pot", "label": "Rice with Seasoned Vegetables in Hot Pot"}, "mixedGrainForSlim": {"description": "The mixed grain rice for slim", "label": "Mixed Grain for Slim"}, "mixedGrainForVitality": {"description": "The mixed grain for vitality", "label": "Mixed Grain for Vitality"}, "haedeul": {"description": "The rice grown in Icheon", "label": "Haedeul"}, "alchanmi": {"description": "The rice grown in Icheon", "label": "Alchanmi"}, "odaemi": {"description": "The rice grown in Cheorwon", "label": "Odaemi"}, "oatRice": {"description": "The oat rice", "label": "Oat Rice"}, "chickpeaRice": {"description": "The chickpea rice", "label": "Chickpea Rice"}, "quinoaRice": {"description": "The quinoa rice", "label": "Quinoa Rice"}, "lentilBeanRice": {"description": "The lentil bean rice", "label": "Lentil Bean Rice"}, "steamedSweetPotato": {"description": "The steamed sweet potato", "label": "Steamed Sweet Potato"}, "galbijjim": {"description": "The braised short ribs", "label": "Galbijjim"}, "samgyetang": {"description": "The chicken soup", "label": "Samgyetang"}, "riceWithWebfootOctopusAndSaussureaInHotPot": {"description": "The rice with webfoot octopus and saussurea in stone pot", "label": "Rice with Webfoot Octopus and Saussurea in Hot Pot"}, "riceWithAbaloneInHotPot": {"description": "The rice with abalone in stone pot", "label": "Rice with Abalone in Hot Pot"}, "riceWithTruffledBulgogiInHotPot": {"description": "The rice with truffled bulgogi in stone pot", "label": "Rice with Truffled Bulgogi in Hot Pot"}, "riceWithSteakInHotPot": {"description": "The rice with steak in stone pot", "label": "rice with Steak in Hot Pot"}, "riceWithRipeKimchiAndAbaloneInHotPot": {"description": "The rice with ripe kimchi and abalone in stone pot", "label": "Rice with Ripe Kimchi and Abalone in Hot Pot"}, "riceWithBeefAndBeanSproutsInHotPot": {"description": "The rice with beef and bean sprouts in stone pot", "label": "Rice with Beef and Bean Sprouts in Hot Pot"}, "riceWithAssortedMushrommsInHotPot": {"description": "The rice with assorted mushromms in stone pot", "label": "Rice with Assorted Mushromms in Hot Pot"}, "riceWithBrackenAndSteakInHotPot": {"description": "The rice with bracken and steak in stone pot", "label": "Rice with Bracken and Steak in Hot Pot"}, "riceWithBeefAndAssortedMushroomsInHotPot": {"description": "The rice with beef and assorted mushrooms in stone pot", "label": "Rice with Beef and Assorted Mushrooms in Hot Pot"}, "riceWithSpicyWebfootOctopusInHotPot": {"description": "The rice with spicy webfoot octopus in stone pot", "label": "Rice with Spicy Webfoot Octopus in Hot Pot"}, "kamutRice": {"description": "The kamut rice", "label": "Kamut Rice"}, "mixedGrainForSaladWithLentilBean": {"description": "The mixed grain for salad with lentil bean", "label": "Mixed Grain for Salad with Lentil Bean"}, "mixedGrainForSaladWithChickpea(1Cup)": {"description": "The mixed grain for salad with chickpea", "label": "Mixed Grain for Salad with Chickpea (1 Cup)"}, "mixedGrainForSaladWithQuinoa": {"description": "The mixed grain for salad with quinoa", "label": "Mixed Grain for Salad with Quinoa"}, "mixedGrainForSaladWithMillet": {"description": "The mixed grain for salad with millet", "label": "Mixed Grain for Salad with Millet"}, "mixedGrainForSaladWithChickpea(2Cup)": {"description": "The mixed grain for salad with chickpea", "label": "Mixed Grain for Salad with Chickpea (2 Cup)"}, "mixedGrainForSaladWithBarley": {"description": "The mixed grain for salad with barley", "label": "Mixed Grain for Salad with Barley"}, "mixedGrainForSaladWithBrownRice(1Cup)": {"description": "The mixed grain for salad with brown rice", "label": "Mixed Grain for Salad with Brown Rice (1 Cup)"}, "mixedGrainForSaladWithOatRice": {"description": "The mixed grain for salad with oat rice", "label": "Mixed Grain for Salad with Oat Rice"}, "mixedGrainForSaladWithBrownRice(2Cup)": {"description": "The mixed grain for salad with brown rice", "label": "Mixed Grain for Salad with Brown Rice (2 Cup)"}, "mixedGrainForSaladWithKamut": {"description": "The mixed grain for salad with kamut", "label": "Mixed Grain for Salad with Kamut"}, "mixedGrainForSaladWithBrownRice": {"description": "The mixed grain for salad with brown rice", "label": "Mixed Grain for Salad with Brown Rice"}, "mixedGrainForSaladWithQuinoa(1Cup)": {"description": "The mixed grain for salad with quinoa", "label": "Mixed Grain for Salad with Quinoa (1Cup)"}, "mixedGrainForSaladWithChickpea": {"description": "The mixed grain for salad with chickpea", "label": "Mixed Grain for Salad with Chickpea"}, "mixedGrainForSaladWithQuinoa(2Cup)": {"description": "The mixed grain for salad with quinoa", "label": "Mixed Grain for Salad with Quinoa (2Cup)"}, "mixedGrainForSaladWithAdlay": {"description": "The mixed grain for salad with adlay", "label": "Mixed Grain for Salad with Adlay"}, "mixedGrainForSaladWithLentilBean(1Cup)": {"description": "The mixed grain for salad with lentil bean", "label": "Mixed Grain for Salad with Lentil Bean (1Cup)"}, "plainPorridge": {"description": "The plain porridge", "label": "Plain Porridge"}, "mixedGrainForSaladWithLentilBean(2Cup)": {"description": "The mixed grain for salad with lentil bean", "label": "Mixed Grain For Salad with Lentil Bean (2 Cup)"}, "abalonePorridge": {"description": "The abalone porridge", "label": "Abalone Porridge"}, "pineNutPorridge": {"description": "The pine nut porridge", "label": "Pine Nut Porridge"}, "boiledEgg": {"description": "The boiled egg", "label": "Boiled Egg"}, "chicken,SweetPumpkin,Cabbage,StickyRicePorridge": {"description": "The sticky rice porridge of chicken, sweet pumpkin, cabbage", "label": "Chicken, Sweet Pumpkin, Cabbage, Sticky Rice Porridge"}, "chicken,Zucchini,SweetPotato,StickyRicePorridge": {"description": "The sticky rice porridge of chicken, zucchini, sweet potato", "label": "Chicken, Zucchini, Sweet Potato, Sticky Rice Porridge"}, "beef,Apple,BroccoliPorridge": {"description": "The of beef, apple, broccoli porridge", "label": "Beef, Apple, Broccoli Porridge"}, "chicken,BokChoy,BananaPorridge": {"description": "The chicken, bokchoy, banana porridge", "label": "Chicken, BokChoy, Banana Porridge"}, "beef,Zucchini,PearPorridge": {"description": "The beef, zucchini, pear porridge", "label": "Beef, Zucchini, Pear Porridge"}, "beef,ShiitakeMushroom,EggPorridge": {"description": "The beef, shiitake mushroom, egg porridge", "label": "Beef, Shiitake Mushroom, Egg Porridge"}, "beef,KingTrumpetMushroom,BroccoliPorridge": {"description": "The beef, king trumpet mushroom, broccoli porridge", "label": "Beef, King Trumpet Mushroom, Broccoli Porridge"}, "chicken,BeanSprouts,Jujube,StickyRicePorridge": {"description": "The Sticky rice porridge of chicken, bean sprouts, jujube", "label": "Chicken, Bean Sprouts, Jujube, Sticky Rice Porridge"}, "cod-Meat,Vitamin,CarrotPorridge": {"description": "The cod-meat, vitamin, carrot porridge", "label": "Cod-Meat, Vitamin, Carrot Porridge"}, "chicken,SweetPotato,Beet,BeetPorridge": {"description": "The chicken, sweet potato, beet, beet porridge", "label": "Chicken, Sweet Potato, Beet, Beet Porridge"}, "chicken,PineNut,Chestnut,Spinach,SoftBoiledRice": {"description": "The soft boiled rice of chicken, pine nut, chestnut, spinach", "label": "Chicken, Pine Nut, Chestnut, Spinach, Soft Boiled Rice"}, "beef,Beet,EnokiMushroom,PerillaSeeds,SoftBoiledRice": {"description": "The soft boiled rice of beef, beet, enoki mushroom, perilla seeds", "label": "Beef, Beet, Enoki Mushroom, Perilla Seeds, Soft Boiled Rice"}, "chicken,Cheese,Beet,Eggplant,SoftBoiledRice": {"description": "The soft boiled rice of chicken, cheese, beet, eggplant", "label": "Chicken, Cheese, Beet, Eggplant, Soft Boiled Rice"}, "codFlesh,SweetPumpkin,Mung-BeanSprouts,BlackSesame,SoftBoiledRice": {"description": "The soft boiled rice of cod flesh, sweet pumpkin, mung-bean sprouts, black sesame", "label": "Cod Flesh, Sweet Pumpkin, Mung-Bean Sprouts, Black Sesame, Soft Boiled Rice"}, "beef,Cabbage,WhiteMushroom,Jujube,SoftBoiledRice": {"description": "The soft boiled rice of beef, cabbage, white mushroom, jujube", "label": "Beef,Cabbage,White Mushroom,Jujube,Soft Boiled Rice"}, "broccoliPorridge": {"description": "The broccoli porridge", "label": "Broccoli Porridge"}, "potatoCarrotPorridge": {"description": "The potato carrot porridge", "label": "Potato Carrot Porridge"}, "yakbab": {"description": "The a sweet Korean dish made by steaming glutinous rice, and mixing with chestnuts, jujubes, and pine nuts", "label": "Yakbab"}, "steamedPotato": {"description": "The steamed potato", "label": "Steamed Potato"}}}, "label": "schedulable menu", "displayTemplate": "{{device.label}} {{attribute}} are {{value}}"}, "completionTime": {"description": "The running completion time for the rice cooker", "label": "completion time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "startTime": {"description": "Start time of the rice cooker", "label": "start time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "event": {"description": "Event for automation event trigger", "i18n": {"value": {"cookingComplete": {"description": "The rice cooker is in \"cooking\" complete", "label": "cooking complete"}, "keepWarmComplete": {"description": "The rice cooker is in \"keepWarm\" complete", "label": "keep warm complete"}, "reheatingComplete": {"description": "The rice cooker is in \"reheating\" complete", "label": "reheating complete"}, "autoCleanComplete": {"description": "The rice cooker is in \"autoClean\" complete", "label": "auto clean complete"}, "soakInnerPotComplete": {"description": "The rice cooker is in \"soakInnerPot\" complete", "label": "soak inner pot complete"}, "steamEmission": {"description": "Steam came out of the rice cooker.", "label": "steam emission"}}}, "label": "event", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedEvents": {"description": "All supported events for automation event trigger", "i18n": {"value": {"cookingComplete": {"description": "The rice cooker is in \"cooking\" complete", "label": "cooking complete"}, "keepWarmComplete": {"description": "The rice cooker is in \"keepWarm\" complete", "label": "keep warm complete"}, "reheatingComplete": {"description": "The rice cooker is in \"reheating\" complete", "label": "reheating complete"}, "autoCleanComplete": {"description": "The rice cooker is in \"autoClean\" complete", "label": "auto clean complete"}, "soakInnerPotComplete": {"description": "The rice cooker is in \"soakInnerPot\" complete", "label": "soak inner pot complete"}, "steamEmission": {"description": "Steam came out of the rice cooker.", "label": "steam emission"}}}, "label": "supported events", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "schedulingEnabled": {"description": "Whether the rice cooker supports scheduled cooking", "label": "scheduling support", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "scheduledTime": {"description": "Scheduled start time for rice cooker", "label": "scheduled time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"startCooking": {"description": "Start the cooking mode", "arguments": {"menu": {"description": "the menu for rice cooker cooking"}}}, "setMode": {"description": "Start the normal mode", "arguments": {"mode": {"description": "the mode for rice cooker running"}}}, "stop": {"description": "Stop the rice cooker operation"}, "scheduleCooking": {"description": "Schedule cooking to start at a later time", "arguments": {"time": {"description": "the scheduled start time of rice cooker"}, "menu": {"description": "the scheduled menu of rice cooker"}}}}}}, {"name": "Robot Cleaner Cleaning Mode", "status": "live", "attributes": {"robotCleanerCleaningMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["auto", "part", "repeat", "manual", "stop", "map"]}}, "required": ["value"]}, "values": ["auto", "part", "repeat", "manual", "stop", "map"], "setter": "setRobotCleanerCleaningMode"}}, "commands": {"setRobotCleanerCleaningMode": {"arguments": [{"name": "mode", "schema": {"type": "string", "enum": ["auto", "part", "repeat", "manual", "stop", "map"]}, "optional": false}], "name": "setRobotCleanerCleaningMode"}}, "id": "robotCleanerCleaningMode", "version": 1, "i18n": {"description": "Allows for the control of the robot cleaner cleaning mode.", "commands": {"setRobotCleanerCleaningMode": {"description": "Set the robot cleaner cleaning mode", "arguments": {"mode": {"description": "Set the robot cleaner cleaning mode, to \"auto\", \"part\", \"repeat\", \"manual\" or \"stop\" modes"}}}}, "attributes": {"robotCleanerCleaningMode": {"description": "Current status of the robot cleaner cleaning mode", "i18n": {"value": {"auto": {"label": "Auto", "description": "The robot cleaner cleaning mode is in \"auto\" mode"}, "part": {"label": "Spot", "description": "The robot cleaner cleaning mode is in \"part\" mode"}, "repeat": {"label": "Repeat", "description": "The robot cleaner cleaning mode is in \"repeat\" mode"}, "manual": {"label": "Manual", "description": "The robot cleaner cleaning mode is in \"manual\" mode"}, "stop": {"label": "Stop", "description": "The robot cleaner cleaning mode is in \"stop\" mode"}, "map": {"label": "Map", "description": "The robot cleaner cleaning mode is in \"map\" mode"}}}, "label": "robot cleaner cleaning mode", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Robot Cleaner Movement", "status": "proposed", "attributes": {"robotCleanerMovement": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["homing", "idle", "charging", "alarm", "powerOff", "reserve", "point", "after", "cleaning", "pause"]}}, "required": ["value"]}, "values": ["homing", "idle", "charging", "alarm", "powerOff", "reserve", "point", "after", "cleaning", "pause"], "setter": "setRobotCleanerMovement"}}, "commands": {"setRobotCleanerMovement": {"arguments": [{"name": "mode", "schema": {"type": "string", "enum": ["homing", "idle", "charging", "alarm", "powerOff", "reserve", "point", "after", "cleaning", "pause"]}, "optional": false}], "name": "setRobotCleanerMovement"}}, "id": "robotCleanerMovement", "version": 1, "i18n": {"description": "Allows for the control of the robot cleaner movement.", "commands": {"setRobotCleanerMovement": {"description": "Set the robot cleaner movement", "arguments": {"mode": {"description": "Set the robot cleaner movement mode, to \"homing\""}}}}, "attributes": {"robotCleanerMovement": {"description": "Current status of the robot cleaner movement", "i18n": {"value": {"homing": {"label": "Returning to dock", "description": "The robot cleaner movement is in \"homing\" mode"}, "idle": {"label": "Standby", "description": "The robot cleaner movement is in \"idle\" mode"}, "charging": {"label": "Charging", "description": "The robot cleaner movement is in \"charging\" mode"}, "alarm": {"label": "Error", "description": "The robot cleaner movement is in \"alarm\" mode"}, "powerOff": {"label": "Off", "description": "The robot cleaner movement is in \"power off\" mode"}, "reserve": {"label": "Scheduled", "description": "The robot cleaner movement is in \"reserve\" mode"}, "point": {"label": "Point cleaning", "description": "The robot cleaner movement is in \"point\" mode"}, "after": {"label": "Charging before cleaning", "description": "The robot cleaner movement is in \"after\" mode"}, "cleaning": {"label": "Cleaning", "description": "The robot cleaner movement is in \"cleaning\" mode"}, "pause": {"label": "Pause", "description": "The robot cleaner movement is in \"pause\" mode"}}}, "label": "robot cleaner movement", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Robot Cleaner State", "status": "deprecated", "attributes": {"robotCleanerCleaningState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["cleaningAuto", "cleaningManual", "cleaningPart", "cleaningRepeat", "cleaningStop"]}}}, "values": ["cleaningAuto", "cleaningManual", "cleaningPart", "cleaningRepeat", "cleaningStop"], "setter": "setRobotCleanerCleaningState"}, "robotCleanerControlState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["controlAfter", "controlAlarm", "controlCharging", "controlCleaning", "controlHoming", "controlIdle", "controlPause", "controlPoint", "controlPowerOff", "controlReserve"]}}}, "values": ["controlAfter", "controlAlarm", "controlCharging", "controlCleaning", "controlHoming", "controlIdle", "controlPause", "controlPoint", "controlPowerOff", "controlReserve"], "setter": "setRobotCleanerControlState"}, "robotCleanerTurboState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["turboOff", "turboOn", "turboSilence"]}}}, "values": ["turboOff", "turboOn", "turboSilence"], "setter": "setRobotCleanerTurboState"}, "supportedRobotCleanerStates": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["cleaningAuto", "cleaningManual", "cleaningPart", "cleaningRepeat", "cleaningStop"]}}}}}}, "commands": {"setRobotCleanerCleaningState": {"arguments": [{"name": "state", "schema": {"type": "string", "enum": ["cleaningAuto", "cleaningStop"]}, "optional": false}], "name": "setRobotCleanerCleaningState"}, "setRobotCleanerControlState": {"arguments": [{"name": "state", "schema": {"type": "string", "enum": ["controlHoming"]}, "optional": false}], "name": "setRobotCleanerControlState"}, "setRobotCleanerTurboState": {"arguments": [{"name": "state", "schema": {"type": "string", "enum": ["turboOff", "turboOn", "turboSilence"]}, "optional": false}], "name": "setRobotCleanerTurboState"}, "stop": {"arguments": [], "name": "stop"}}, "id": "robotCleanerState", "version": 1, "i18n": {"description": "Allows for the control of the robot cleaner state.", "commands": {"setRobotCleanerCleaningState": {"description": "Set the cleaning state of the Robot Cleaner", "arguments": {"schedule": {"description": "A value to which the Robot Cleaner cleaning state should be set to"}}}, "setRobotCleanerControlState": {"description": "Set the control state of the Robot Cleaner", "arguments": {"schedule": {"description": "A value to which the Robot Cleaner control state should be set to"}}}, "setRobotCleanerTurboState": {"description": "Set the turbo state of the Robot Cleaner", "arguments": {"schedule": {"description": "A value to which the Robot Cleaner turbo state should be set to"}}}, "stop": {"description": "Provide the description"}}, "attributes": {"robotCleanerCleaningState": {"description": "The cleaning state of the Robot Cleaner", "label": "robot cleaner cleaning state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "robotCleanerControlState": {"description": "The control state of the Robot Cleaner", "label": "robot cleaner control state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "robotCleanerTurboState": {"description": "The turbo state of the Robot Cleaner", "label": "robot cleaner turbo state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedRobotCleanerStates": {"description": "The states supported by the Robot Cleaner", "label": "supported robot cleaner states", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Robot Cleaner Turbo Mode", "status": "live", "attributes": {"robotCleanerTurboMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["on", "off", "silence", "extraSilence"]}}, "required": ["value"]}, "values": ["on", "off", "silence", "extraSilence"], "setter": "setRobotCleanerTurboMode"}}, "commands": {"setRobotCleanerTurboMode": {"arguments": [{"name": "mode", "schema": {"type": "string", "enum": ["on", "off", "silence", "extraSilence"]}, "optional": false}], "name": "setRobotCleanerTurboMode"}}, "id": "robotCleanerTurboMode", "version": 1, "i18n": {"description": "Allows for the control of the robot cleaner turbo mode.", "attributes": {"robotCleanerTurboMode": {"description": "Current status of the robot cleaner turbo mode", "i18n": {"value": {"on": {"label": "on", "description": "The robot cleaner turbo is in 'on' mode"}, "off": {"label": "off", "description": "The robot cleaner turbo is in 'off' mode"}, "silence": {"label": "silence", "description": "The robot cleaner turbo is in 'silence' mode"}, "extraSilence": {"label": "extraSilence", "description": "The robot cleaner turbo is in 'extraSilence' mode"}}}, "label": "robot cleaner turbo mode", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setRobotCleanerTurboMode": {"description": "Set the robot cleaner turbo mode", "arguments": {"mode": {"description": "Set the robot cleaner movement mode to 'on', 'off', 'silence' or 'extraSilence' mode"}}}}}}, {"name": "Samsung TV", "status": "live", "attributes": {"messageButton": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}}}, "mute": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["muted", "unknown", "unmuted"]}}}, "values": ["muted", "unknown", "unmuted"], "enumCommands": [{"command": "mute", "value": "muted"}, {"command": "unmute", "value": "unmuted"}]}, "pictureMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["dynamic", "movie", "standard", "unknown"]}}}, "values": ["dynamic", "movie", "standard", "unknown"], "setter": "setPictureMode"}, "soundMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["clear voice", "movie", "music", "standard", "unknown"]}}}, "values": ["clear voice", "movie", "music", "standard", "unknown"], "setter": "setSoundMode"}, "switch": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "SwitchState", "type": "string", "enum": ["on", "off"]}}}, "values": ["off", "on"], "enumCommands": [{"command": "on", "value": "on"}, {"command": "off", "value": "off"}]}, "volume": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}}, "setter": "setVolume", "actedOnBy": ["volumeUp", "volumeDown"]}}, "commands": {"mute": {"arguments": [], "name": "mute"}, "off": {"arguments": [], "name": "off"}, "on": {"arguments": [], "name": "on"}, "setPictureMode": {"arguments": [{"name": "pictureMode", "schema": {"type": "string", "enum": ["dynamic", "movie", "standard"]}, "optional": false}], "name": "setPictureMode"}, "setSoundMode": {"arguments": [{"name": "soundMode", "schema": {"type": "string", "enum": ["clear voice", "movie", "music", "standard"]}, "optional": false}], "name": "setSoundMode"}, "setVolume": {"arguments": [{"name": "volume", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": false}], "name": "setVolume"}, "showMessage": {"arguments": [{"name": "1", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}, {"name": "2", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}, {"name": "3", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}, {"name": "4", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "showMessage"}, "unmute": {"arguments": [], "name": "unmute"}, "volumeDown": {"arguments": [], "name": "volumeDown"}, "volumeUp": {"arguments": [], "name": "volumeUp"}}, "id": "samsungTV", "version": 1, "i18n": {"description": "Allows for the control of Samsung TV.", "attributes": {"messageButton": {"description": "Message description", "label": "message button", "displayTemplate": "{{attribute}} of {{device.label}} is updated"}, "mute": {"description": "Status of the mute", "label": "mute", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "pictureMode": {"description": "Status of the picture mode", "label": "picture mode", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "soundMode": {"description": "Status of the sound mode", "label": "sound mode", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "switch": {"description": "Status of the switch, on or off", "label": "switch", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "volume": {"description": "Status of the volume", "label": "volume", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "commands": {"mute": {"description": "Set the mute status"}, "off": {"description": "Set the TV to off"}, "on": {"description": "Set the TV to on"}, "setPictureMode": {"description": "Set the picture mode"}, "setSoundMode": {"description": "Set the sound mode"}, "setVolume": {"description": "Set the volume"}, "showMessage": {"description": "Set to show the message"}, "unmute": {"description": "Unmute the TV sound"}, "volumeDown": {"description": "Turn the volume down"}, "volumeUp": {"description": "Turn the volume up"}}}}, {"name": "Scenes", "id": "scenes", "version": 1, "status": "proposed", "attributes": {"scene": {"schema": {"type": "object", "properties": {"value": {"type": "string"}}, "additionalProperties": false, "required": ["value"]}, "setter": "setScene"}, "supportedScenes": {"schema": {"type": "object", "properties": {"value": {"type": "array", "items": {"type": "string"}}}, "additionalProperties": false, "required": ["value"]}}}, "commands": {"setScene": {"name": "setScene", "arguments": [{"name": "scene", "schema": {"type": "string"}, "optional": false}]}}, "i18n": {"description": "Allows for listing and execution of user-defined scenes, including the notion of a current scene", "attributes": {"scene": {"description": "The currently active scene", "label": "scene", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedScenes": {"description": "Supported scenes for this device to be in", "label": "supported scenes", "displayTemplate": "{{device.label}} {{attribute}} are {{value}}"}}, "commands": {"setScene": {"description": "Set the scene", "arguments": {"scene": {"description": "The scene to set the device to"}}}}, "note": "This capability contains no enumerations or translations of scene names since they are defined by users for each individual device."}}, {"name": "Scent", "status": "proposed", "attributes": {"scentName": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "scentIntensity": {"schema": {"title": "IntegerPercent", "type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 100}, "unit": {"type": "string", "enum": ["%"], "default": "%"}}, "required": ["value"]}, "setter": "setScentIntensity"}}, "commands": {"setScentIntensity": {"arguments": [{"name": "intensity", "schema": {"type": "integer", "minimum": 0, "maximum": 100}, "optional": false}], "name": "setScentIntensity"}}, "id": "scent", "version": 1, "i18n": {"attributes": {"scentName": {"description": "A string that represents the name of the scent", "label": "name", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "scentIntensity": {"description": "A number that represents the current scent intensity, usually ``0-100`` in percent", "label": "intensity", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}%"}}, "commands": {"setScentIntensity": {"arguments": {"intensity": {"description": "The intensity value, usually ``0-100`` in percent"}}, "description": "Set the intensity to the given value"}}, "description": "Allows for the control of the intensity attribute of a scent"}}, {"name": "Security System", "status": "live", "attributes": {"securitySystemStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["armedAway", "armedStay", "disarmed"]}}, "required": ["value"]}, "values": ["armedAway", "armedStay", "disarmed"], "enumCommands": [{"command": "armStay", "value": "armedStay"}, {"command": "armAway", "value": "armedAway"}, {"command": "disarm", "value": "disarmed"}]}, "alarm": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "required": ["value"]}}}, "commands": {"armStay": {"arguments": [{"name": "bypassAll", "schema": {"type": "boolean"}, "optional": false}], "name": "armStay"}, "armAway": {"arguments": [{"name": "bypassAll", "schema": {"type": "boolean"}, "optional": false}], "name": "armAway"}, "disarm": {"arguments": [], "name": "disarm"}}, "id": "securitySystem", "version": 1, "i18n": {"attributes": {"securitySystemStatus": {"i18n": {"value": {"armedStay": {"description": "The security system is armed while premise is occupied", "label": "armedStay"}, "armedAway": {"description": "The security system is armed while premise is vacant", "label": "armedAway"}}}, "description": "The current status of the security system", "disarmed": "The security system is disarmed", "label": "security system status", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "alarm": {"description": "The reference to the device that most recently generated an event to trigger an alarm", "label": "alarm", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "commands": {"armStay": {"description": "Set the security system to ``armedStay``"}, "disarm": {"description": "Set the security system to ``disarmed``"}, "armAway": {"description": "Set the security system to ``armedAway``"}}, "description": "Allows for the control of a security system device"}}, {"name": "Sensor", "status": "deprecated", "attributes": {}, "commands": {}, "id": "sensor", "version": 1, "i18n": {"description": "The Sensor capability is a \"tagging\" capability. It defines no attributes or commands. In SmartThings terms, it represents that a Device has attributes."}}, {"name": "Shock Sensor", "status": "deprecated", "attributes": {"shock": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["clear", "detected"]}}, "required": ["value"]}, "values": ["clear", "detected"]}}, "commands": {}, "id": "shockSensor", "version": 1, "i18n": {"attributes": {"shock": {"description": "A representation of the shock value from the Device", "i18n": {"value": {"clear": {"description": "There is not currently a shock value from the Device"}, "detected": {"description": "The Device is reporting a shock is detected"}}}, "label": "shock", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "A Device that senses whether or not there is a shock"}}, {"name": "Signal Strength", "status": "live", "attributes": {"lqi": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 255}}, "required": ["value"]}}, "rssi": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": -200, "maximum": 0}, "unit": {"type": "string", "enum": ["dBm"], "default": "dBm"}}, "required": ["value"]}}}, "commands": {}, "id": "signalStrength", "version": 1, "i18n": {"attributes": {"rssi": {"description": "A number representing the Received Signal Strength Indication", "label": "rssi", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}dBm"}, "lqi": {"description": "A number representing the Link Quality Indication", "label": "lqi", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "description": "Gives the ability to read the signal stregth of Devices that support it"}}, {"name": "Sleep Sensor", "status": "live", "attributes": {"sleeping": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["not sleeping", "sleeping"]}}, "required": ["value"]}, "values": ["not sleeping", "sleeping"]}}, "commands": {}, "id": "sleepSensor", "version": 1, "i18n": {"description": "A Device that senses whether or not someone is sleeping", "attributes": {"sleeping": {"description": "A representation of the sleeping value from the Device", "i18n": {"value": {"sleeping": {"description": "The Device detected a \"sleeping\" state", "label": "sleeping"}}}, "not": "sleeping.value=The Device detected a \"not sleeping\" state", "label": "sleeping", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Smoke Detector", "status": "live", "attributes": {"smoke": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["clear", "detected", "tested"]}}, "required": ["value"]}, "values": ["clear", "detected", "tested"]}}, "commands": {}, "id": "smokeDetector", "version": 1, "i18n": {"attributes": {"smoke": {"i18n": {"value": {"detected": {"description": "Smoke detected", "label": "Detected"}, "clear": {"description": "No smoke detected", "label": "Clear"}, "tested": {"description": "Smoke detector test button was activated", "label": "Tested"}}}, "description": "The state of the smoke detection device", "label": "smoke", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "description": "A device that detects the presence or absence of smoke."}}, {"name": "Sound Detection", "status": "live", "attributes": {"soundDetectionState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "EnableState", "type": "string", "enum": ["enabled", "disabled"]}}, "required": ["value"]}, "values": ["enabled", "disabled"], "enumCommands": [{"command": "enableSoundDetection", "value": "enabled"}, {"command": "disableSoundDetection", "value": "disabled"}]}, "soundDetected": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "DetectedSoundType", "type": "string", "enum": ["noSound", "babyCrying", "glassBreaking", "fireAlarm", "dogBarking", "catMeowing", "doorKnocking", "siren", "fingerSnapping", "snoring"]}}, "required": ["value"]}, "values": ["noSound", "babyCrying", "glassBreaking", "fireAlarm", "dogBarking", "catMeowing", "doorKnocking", "siren", "fingerSnapping", "snoring"]}, "supportedSoundTypes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "DetectedSoundType", "type": "string", "enum": ["noSound", "babyCrying", "glassBreaking", "fireAlarm", "dogBarking", "catMeowing", "doorKnocking", "siren", "fingerSnapping", "snoring"]}}}, "required": ["value"]}}}, "commands": {"enableSoundDetection": {"arguments": [], "name": "enableSoundDetection"}, "disableSoundDetection": {"arguments": [], "name": "disableSoundDetection"}}, "id": "soundDetection", "version": 1, "i18n": {"attributes": {"soundDetectionState": {"description": "The operational state of sound detection whether enabled or disabled", "label": "Sound Detection State", "displayTemplate": "{{attribute}} of {{device.label}} was: {{value}}", "i18n": {"value": {"enabled": {"label": "On"}, "disabled": {"label": "Off"}}}}, "soundDetected": {"description": "The detected sound type from the DetectedSoundType datatype", "label": "Sound detection", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}", "i18n": {"value": {"babyCrying": {"label": "Baby crying"}, "glassBreaking": {"label": "Breaking glass"}, "fireAlarm": {"label": "Fire alarm"}, "noSound": {"label": "None"}, "dogBarking": {"label": "Dog bark detected"}, "catMeowing": {"label": "Cat meow detected"}, "doorKnocking": {"label": "Door knocking detected"}, "siren": {"label": "Siren detected"}, "fingerSnapping": {"label": "Finger snapping detected"}, "snoring": {"label": "Snoring detected"}}}}, "supportedSoundTypes": {"description": "The sound types that can be detected by this device", "label": "Supported Sound Types", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "commands": {"enableSoundDetection": {"label": "On", "description": "Set sound detection to the enabled state"}, "disableSoundDetection": {"label": "Off", "description": "Set sound detection to the disabled state"}}, "description": "Detected Sound"}}, {"name": "Sound Pressure Level", "status": "live", "attributes": {"soundPressureLevel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 194}, "unit": {"type": "string", "enum": ["dB"], "default": "dB"}}, "required": ["value"]}}}, "commands": {}, "id": "soundPressureLevel", "version": 1, "i18n": {"description": "Gets the value of the sound pressure level.", "attributes": {"soundPressureLevel": {"description": "Level of the sound pressure", "label": "sound pressure level", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}dB"}}}}, {"name": "Sound Sensor", "status": "live", "attributes": {"sound": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["detected", "not detected"]}}, "required": ["value"]}, "values": ["detected", "not detected"]}}, "commands": {}, "id": "soundSensor", "version": 1, "i18n": {"attributes": {"sound": {"not": "detected.value=Sound is not detected", "i18n": {"value": {"detected": {"description": "Sound is detected", "label": "Sound detected"}, "not detected": {"label": "No sound"}}}, "description": "Whether or not sound was detected by the Device", "label": "sound", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "description": "A Device that senses sound"}}, {"name": "Speech Recognition", "status": "proposed", "attributes": {"phraseSpoken": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "maxLength": 1000}}, "required": ["value"]}}}, "commands": {}, "id": "speechRecognition", "version": 1, "i18n": {"description": "Gets the spoken phrase string.", "attributes": {"phraseSpoken": {"description": "The string value of the spoken phrase", "label": "phrase spoken", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Speech Synthesis", "status": "proposed", "attributes": {}, "commands": {"speak": {"arguments": [{"name": "phrase", "schema": {"type": "string", "maxLength": 1000}, "optional": false}], "name": "speak"}}, "id": "speechSynthesis", "version": 1, "i18n": {"description": "Allows for the control by speech.", "commands": {"speak": {"description": "Speak the control phrase", "arguments": {"phrase": {"description": "The control phrase spoken"}}}}}}, {"name": "Stateless Air Cleaner Mode Button", "status": "proposed", "attributes": {"availableAirCleanerModeButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["changeMode"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["changeMode"]}, "optional": false}], "name": "setButton"}}, "id": "statelessAirCleanerModeButton", "version": 1, "i18n": {"description": "Allows for the control of a device with stateless Air Cleaner mode buttons", "attributes": {"availableAirCleanerModeButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableAirCleanerModeButtons to send to the device"}}}}}}, {"name": "Stateless Audio Mute Button", "status": "live", "attributes": {"availableAudioMuteButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["muteToggle"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["muteToggle"]}, "optional": false}], "name": "setButton"}}, "id": "statelessAudioMuteButton", "version": 1, "i18n": {"description": "Allows for the control of a device with a stateless audio mute toggle button", "attributes": {"availableAudioMuteButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableAudioMuteButtons to send to the device"}}}}}}, {"name": "Stateless Audio Volume Button", "status": "live", "attributes": {"availableAudioVolumeButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["volumeUp", "volumeDown"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["volumeUp", "volumeDown"]}, "optional": false}], "name": "setButton"}}, "id": "statelessAudioVolumeButton", "version": 1, "i18n": {"description": "Allows for the control of a device with stateless audio volume control buttons", "attributes": {"availableAudioVolumeButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableAudioVolumeButtons to send to the device"}}}}}}, {"name": "Stateless Channel Button", "status": "live", "attributes": {"availableChannelButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["channelUp", "channelDown"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["channelUp", "channelDown"]}, "optional": false}], "name": "setButton"}}, "id": "statelessChannelButton", "version": 1, "i18n": {"description": "Allows for the control of a device with stateless channel control buttons", "attributes": {"availableChannelButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableChannelButtons to send to the device"}}}}}}, {"name": "Stateless Curtain Power Button", "status": "proposed", "attributes": {"availableCurtainPowerButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["open", "close", "pause"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["open", "close", "pause"]}, "optional": false}], "name": "setButton"}}, "id": "statelessCurtainPowerButton", "version": 1, "i18n": {"description": "Allows for the control of a device with stateless curtain power buttons", "attributes": {"availableCurtainPowerButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableCurtainPowerButtons to send to the device"}}}}}}, {"name": "Stateless Custom Button", "status": "live", "attributes": {"availableCustomButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string"}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string"}, "optional": false}], "name": "setButton"}}, "id": "statelessCustomButton", "version": 1, "i18n": {"description": "Allows for the control of a device with stateless custom command buttons", "attributes": {"availableCustomButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableButtons to send to the device"}}}}}}, {"name": "Stateless Fanspeed Button", "status": "live", "attributes": {"availableFanspeedButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["fanspeedUp", "fanspeedDown"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["fanspeedUp", "fanspeedDown"]}, "optional": false}], "name": "setButton"}}, "id": "statelessFanspeedButton", "version": 1, "i18n": {"description": "Allows for the control of a device with stateless fan speed control buttons", "attributes": {"availableFanspeedButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableFanspeedButtons to send to the device"}}}}}}, {"name": "Stateless Fanspeed Mode Button", "status": "proposed", "attributes": {"availableFanspeedModeButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["changeMode"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["changeMode"]}, "optional": false}], "name": "setButton"}}, "id": "statelessFanspeedModeButton", "version": 1, "i18n": {"description": "Allows for the control of a device with stateless fan speed mode buttons", "attributes": {"availableFanspeedModeButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableFanspeedModeButtons to send to the device"}}}}}}, {"name": "Stateless Humidifier Mode Button", "status": "proposed", "attributes": {"availableHumidifierModeButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["changeMode"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["changeMode"]}, "optional": false}], "name": "setButton"}}, "id": "statelessHumidifierModeButton", "version": 1, "i18n": {"description": "Allows for the control of a device with stateless humidifier mode buttons", "attributes": {"availableHumidifierModeButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableHumidifierModeButtons to send to the device"}}}}}}, {"name": "Stateless Media Playback Button", "status": "proposed", "attributes": {"availableMediaPlaybackButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "MediaPlaybackCommands", "type": "string", "enum": ["pause", "play", "stop", "fastForward", "rewind"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"title": "MediaPlaybackCommands", "type": "string", "enum": ["pause", "play", "stop", "fastForward", "rewind"]}, "optional": false}], "name": "setButton"}}, "id": "statelessMediaPlaybackButton", "version": 1, "i18n": {"description": "Allows for the control of a media playback device with stateless action buttons", "attributes": {"availableMediaPlaybackButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableMediaPlaybackButtons to send to the device"}}}}}}, {"name": "Stateless Power Button", "status": "live", "attributes": {"availablePowerButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["powerOn", "powerOff"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["powerOn", "powerOff"]}, "optional": false}], "name": "setButton"}}, "id": "statelessPowerButton", "version": 1, "i18n": {"description": "Allows for the control of a device with a stateless power button", "attributes": {"availablePowerButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availablePowerButtons to send to the device"}}}}}}, {"name": "Stateless Power Toggle Button", "status": "live", "attributes": {"availablePowerToggleButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["powerToggle"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["powerToggle"]}, "optional": false}], "name": "setButton"}}, "id": "statelessPowerToggleButton", "version": 1, "i18n": {"description": "Allows for the control of a device with a stateless power button", "attributes": {"availablePowerToggleButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availablePowerToggleButtons to send to the device"}}}}}}, {"name": "Stateless Robot Cleaner Action Button", "status": "proposed", "attributes": {"availableRobotCleanerActionButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["start", "stop", "quit"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["start", "stop", "quit"]}, "optional": false}], "name": "setButton"}}, "id": "statelessRobotCleanerActionButton", "version": 1, "i18n": {"description": "Allows for the control of a robot cleaner with stateless action buttons", "attributes": {"availableRobotCleanerActionButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableRobotCleanerActionButtons to send to the device"}}}}}}, {"name": "Stateless Robot Cleaner Home Button", "status": "proposed", "attributes": {"availableRobotCleanerHomeButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["home"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["home"]}, "optional": false}], "name": "setButton"}}, "id": "statelessRobotCleanerHomeButton", "version": 1, "i18n": {"description": "Allows for the control of a robot cleaner with a stateless home button", "attributes": {"availableRobotCleanerHomeButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableRobotCleanerHomeButtons to send to the device"}}}}}}, {"name": "Stateless Robot Cleaner Toggle Button", "status": "proposed", "attributes": {"availableRobotCleanerToggleButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["actionToggle"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["actionToggle"]}, "optional": false}], "name": "setButton"}}, "id": "statelessRobotCleanerToggleButton", "version": 1, "i18n": {"description": "Allows for the control of a stateless robot cleaner toggle button", "attributes": {"availableRobotCleanerToggleButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableRobotCleanerToggleButtons to send to the device"}}}}}}, {"name": "Stateless Scenes", "id": "statelessScenes", "version": 1, "status": "proposed", "attributes": {"supportedScenes": {"schema": {"type": "object", "properties": {"value": {"type": "array", "items": {"type": "string"}}}, "additionalProperties": false, "required": ["value"]}}}, "commands": {"setScene": {"name": "setScene", "arguments": [{"name": "scene", "schema": {"type": "string"}, "optional": false}]}}, "i18n": {"description": "Allows for listing and execution of user-defined scenes", "attributes": {"supportedScenes": {"description": "Supported scenes for this device to be in", "label": "supported scenes", "displayTemplate": "{{device.label}} {{attribute}} are {{value}}"}}, "commands": {"setScene": {"description": "Set the scene", "arguments": {"scene": {"description": "The scene to set the device to"}}}}, "note": "This capability contains no enumerations or translations of scene names since they are defined by users for each individual device."}}, {"name": "Stateless Set Channel Button", "status": "proposed", "attributes": {}, "commands": {"setChannel": {"arguments": [{"name": "channel", "schema": {"type": "string"}, "optional": false}], "name": "setChannel"}}, "id": "statelessSetChannelButton", "version": 1, "i18n": {"note": "The Stateless Set Channel Button capability does not define any attributes", "description": "Allows for the setting of a tv channel by channel number", "commands": {"setChannel": {"description": "Emulate the setting of the channel by specifying the channel number", "arguments": {"channel": {"description": "The channel to set the device to (ie \"14\" or \"14-2\")"}}}}}}, {"name": "Stateless Set Channel By Content Button", "status": "proposed", "attributes": {}, "commands": {"setChannelByContent": {"arguments": [{"name": "contentName", "schema": {"type": "string"}, "optional": false}], "name": "setChannelByContent"}}, "id": "statelessSetChannelByContentButton", "version": 1, "i18n": {"note": "The Stateless Set Channel By Content Button capability does not define any attributes", "description": "Allows for the setting of a TV channel by content name", "commands": {"setChannelByContent": {"description": "Emulate the setting of the channel by specifying the content name", "arguments": {"contentName": {"description": "The content name to set the device to (ie \"I Love Lucy\", \"Blade Runner\")"}}}}}}, {"name": "Stateless Set Channel By Name Button", "status": "proposed", "attributes": {}, "commands": {"setChannelByName": {"arguments": [{"name": "channel", "schema": {"type": "string"}, "optional": false}], "name": "setChannelByName"}}, "id": "statelessSetChannelByNameButton", "version": 1, "i18n": {"note": "The Stateless Set Channel By Name Button capability does not define any attributes", "description": "Allows for the setting of a tv channel by channel name", "commands": {"setChannelByName": {"description": "Emulate the setting of the channel by specifying the channel name", "arguments": {"channel": {"description": "The channel to set the device to (ie \"ESPN2\", \"NBC\")"}}}}}}, {"name": "Stateless Temperature Button", "status": "live", "attributes": {"availableTemperatureButtons": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["temperatureUp", "temperatureDown"]}}}}}}, "commands": {"setButton": {"arguments": [{"name": "button", "schema": {"type": "string", "enum": ["temperatureUp", "temperatureDown"]}, "optional": false}], "name": "setButton"}}, "id": "statelessTemperatureButton", "version": 1, "i18n": {"description": "Allows for the control of a device with stateless temperature control buttons", "attributes": {"availableTemperatureButtons": {"description": "A list of commands/buttons that have been configured in the device", "label": "configured buttons", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setButton": {"description": "Emulate the pressing of a supported button", "arguments": {"button": {"description": "The button in availableTemperatureButtons to send to the device"}}}}}}, {"name": "Stateless Volume Button With Repetition", "status": "proposed", "attributes": {}, "commands": {"volumeUp": {"arguments": [{"name": "repetition", "schema": {"type": "integer", "minimum": 0, "maximum": 10}, "optional": false}], "name": "volumeUp"}, "volumeDown": {"arguments": [{"name": "repetition", "schema": {"type": "integer", "minimum": 0, "maximum": 10}, "optional": false}], "name": "volumeDown"}}, "id": "statelessVolumeButtonWithRepetition", "version": 1, "i18n": {"description": "Allows for increasing or decreasing volumes a specified number of times", "commands": {"volumeUp": {"description": "Emulate pressing 'volume up' X number of times, where X is the 'repetition' value", "arguments": {"repetition": {"description": "The number of times to execute 'volume up'"}}}, "volumeDown": {"description": "Emulate pressing 'volume down' X number of times, where X is the 'repetition' value", "arguments": {"repetition": {"description": "The number of times to execute 'volume down'"}}}}}}, {"name": "Step Sensor", "status": "proposed", "attributes": {"goal": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}, "required": ["value"]}}, "steps": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}, "required": ["value"]}}}, "commands": {}, "id": "stepSensor", "version": 1, "i18n": {"attributes": {"steps": {"description": "The current step count", "label": "steps", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "goal": {"description": "The current step goal", "label": "goal", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "A Device that works as a step counter"}}, {"name": "Switch Level", "status": "live", "attributes": {"level": {"schema": {"title": "IntegerPercent", "type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 100}, "unit": {"type": "string", "enum": ["%"], "default": "%"}}, "required": ["value"]}, "setter": "setLevel"}}, "commands": {"setLevel": {"arguments": [{"name": "level", "schema": {"type": "integer", "minimum": 0, "maximum": 100}, "optional": false}, {"name": "rate", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": true}], "name": "setLevel"}}, "id": "switchLevel", "version": 1, "i18n": {"attributes": {"level": {"description": "A number that represents the current level, usually ``0-100`` in percent", "label": "dimmer", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}%"}}, "commands": {"setLevel": {"arguments": {"level": {"description": "The level value, usually ``0-100`` in percent"}, "rate": {"description": "The rate at which to change the level"}}, "description": "Set the level to the given value. If the device supports being turned on and off then it will be turned on if ``level`` is greater than 0 and turned off if ``level`` is equal to 0."}}, "description": "Allows for the control of the level of a device like a light or a dimmer switch.", "note": "The capability is defined to accept two parameters, the level and the rate of dimming. The vast majority of Devices and Device Handlers will *not* support the rate parameter, however, so you'll typically only see this command in the form of ``setLevel(number)``."}}, {"name": "Switch", "status": "live", "attributes": {"switch": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "SwitchState", "type": "string", "enum": ["on", "off"]}}, "required": ["value"]}, "values": ["off", "on"], "enumCommands": [{"command": "on", "value": "on"}, {"command": "off", "value": "off"}]}}, "commands": {"off": {"arguments": [], "name": "off"}, "on": {"arguments": [], "name": "on"}}, "id": "switch", "version": 1, "i18n": {"commands": {"on": {"description": "Turn a switch on"}, "off": {"description": "Turn a switch off"}}, "attributes": {"switch": {"i18n": {"value": {"on": {"description": "The value of the ``switch`` attribute if the switch is on", "label": "On"}, "off": {"description": "The value of the ``switch`` attribute if the switch is off", "label": "Off"}}}, "description": "A string representation of whether the switch is on or off", "label": "switch", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}, "description": "Allows for the control of a switch device"}}, {"name": "Tamper Alert", "status": "live", "attributes": {"tamper": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["clear", "detected"]}}, "required": ["value"]}, "values": ["clear", "detected"]}}, "commands": {}, "id": "tamperAlert", "version": 1, "i18n": {"description": "Gets the value of the tamper alert.", "attributes": {"tamper": {"i18n": {"value": {"clear": {"label": "Not tampered"}, "detected": {"label": "Tampered"}}}, "label": "tamper", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Temperature Alarm", "status": "live", "attributes": {"temperatureAlarm": {"schema": {"type": "object", "properties": {"value": {"type": "string", "enum": ["cleared", "freeze", "heat", "rateOfRise"]}}, "additionalProperties": false, "required": ["value"]}, "values": ["cleared", "freeze", "heat", "rateOfRise"]}}, "commands": {}, "id": "temperatureAlarm", "version": 1, "i18n": {"attributes": {"temperatureAlarm": {"i18n": {"value": {"heat": {"description": "The temperature alarm is due to heat condition", "label": "heat"}, "cleared": {"description": "The temperature alarm is cleared", "label": "cleared"}, "rateOfRise": {"description": "The temperature alarm is due to rate of rise of temperature", "label": "rateOfRise"}, "freeze": {"description": "The temperature alarm is due to freeze condition", "label": "freeze"}}}, "description": "The current status of the temperature alarm", "label": "temperature alarm", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "Supports temperature driven alarms"}}, {"name": "Temperature Measurement", "status": "live", "attributes": {"temperature": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "unit": {"title": "TemperatureUnit", "type": "string", "enum": ["F", "C"]}}, "required": ["value", "unit"]}}}, "commands": {}, "id": "temperatureMeasurement", "version": 1, "i18n": {"description": "Get the temperature from a Device that reports current temperature", "attributes": {"temperature": {"description": "A number that usually represents the current temperature", "label": "temperature", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}{{unit}}"}}}}, {"name": "Test Capability", "status": "live", "attributes": {}, "commands": {}, "id": "testCapability", "version": 1, "i18n": {"description": "test capability"}}, {"name": "Thermostat Cooling Setpoint", "status": "live", "attributes": {"coolingSetpoint": {"schema": {"title": "Temperature", "type": "object", "additionalProperties": false, "properties": {"value": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "unit": {"title": "TemperatureUnit", "type": "string", "enum": ["F", "C"]}}, "required": ["value", "unit"]}, "setter": "setCoolingSetpoint"}}, "commands": {"setCoolingSetpoint": {"arguments": [{"name": "setpoint", "schema": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "optional": false}], "name": "setCoolingSetpoint"}}, "id": "thermostatCoolingSetpoint", "version": 1, "i18n": {"attributes": {"coolingSetpoint": {"description": "The current cooling setpoint", "label": "cooling setpoint", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}{{unit}}"}}, "commands": {"setCoolingSetpoint": {"description": "Set the cooling setpoint", "arguments": {"setpoint": {"description": "A value that the cooling setpoint should be set to"}}}}, "description": "Allows for setting the cooling setpoint on a thermostat"}}, {"name": "Thermostat Fan Mode", "status": "live", "attributes": {"thermostatFanMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "ThermostatFanMode", "type": "string", "enum": ["auto", "circulate", "followschedule", "on"]}, "data": {"type": "object", "additionalProperties": false, "properties": {"supportedThermostatFanModes": {"type": "array", "items": {"title": "ThermostatFanMode", "type": "string", "enum": ["auto", "circulate", "followschedule", "on"]}}}}}, "required": ["value"]}, "values": ["auto", "circulate", "followschedule", "on"], "setter": "setThermostatFanMode", "enumCommands": [{"command": "fanAuto", "value": "auto"}, {"command": "fanCirculate", "value": "circulate"}, {"command": "fanOn", "value": "on"}]}, "supportedThermostatFanModes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "ThermostatFanMode", "type": "string", "enum": ["auto", "circulate", "followschedule", "on"]}}}}}}, "commands": {"fanAuto": {"arguments": [], "name": "fanAuto"}, "fanCirculate": {"arguments": [], "name": "fanCirculate"}, "fanOn": {"arguments": [], "name": "fanOn"}, "setThermostatFanMode": {"arguments": [{"name": "mode", "schema": {"title": "ThermostatFanMode", "type": "string", "enum": ["auto", "circulate", "followschedule", "on"]}, "optional": false}], "name": "setThermostatFanMode"}}, "id": "thermostatFanMode", "version": 1, "i18n": {"commands": {"fanCirculate": {"description": "Set the fan mode to ``circulate``"}, "setThermostatFanMode": {"arguments": {"mode": {"i18n": {"auto": {"description": "Automatically detect when the fan should be on"}, "followschedule": {"description": "The fan is set to follow predefined schedule"}, "on": {"description": "The fan is on"}, "circulate": {"description": "Periodically turn the fan on to circulate air"}}, "description": "The mode may be one of the following values:"}}, "description": "Set the thermostat fan mode"}, "fanOn": {"description": "Set the fan mode to ``on``"}, "fanAuto": {"description": "Set the fan mode to ``auto``"}}, "attributes": {"thermostatFanMode": {"description": "The current mode of the fan on a thermostat", "i18n": {"value": {"on": {"description": "The fan is on", "label": "on"}, "auto": {"description": "The fan is on auto", "label": "auto"}, "circulate": {"description": "The fan is circulating", "label": "circulate"}, "followschedule": {"description": "The fan is set to follow predefined schedule", "label": "followschedule"}}}, "label": "thermostat fan mode", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedThermostatFanModes": {"description": "Modes supported by the thermostat", "label": "supported thermostat fan modes", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}}}, {"name": "Thermostat Heating Setpoint", "status": "live", "attributes": {"heatingSetpoint": {"schema": {"title": "Temperature", "type": "object", "additionalProperties": false, "properties": {"value": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "unit": {"title": "TemperatureUnit", "type": "string", "enum": ["F", "C"]}}, "required": ["value", "unit"]}, "setter": "setHeatingSetpoint"}}, "commands": {"setHeatingSetpoint": {"arguments": [{"name": "setpoint", "schema": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "optional": false}], "name": "setHeatingSetpoint"}}, "id": "thermostatHeatingSetpoint", "version": 1, "i18n": {"commands": {"setHeatingSetpoint": {"arguments": {"setpoint": {"description": "A value that the heating setpoint should be set to"}}, "description": "Set the heating setpoint"}}, "attributes": {"heatingSetpoint": {"description": "The current heating setpoint", "label": "heating temperature", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}{{unit}}"}}, "description": "Allows for setting the heating setpoint on a thermostat"}}, {"name": "Thermostat Mode", "status": "live", "attributes": {"thermostatMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "ThermostatMode", "type": "string", "enum": ["asleep", "auto", "autowitheco", "autowithreset", "autochangeover", "autochangeoveractive", "autocool", "autoheat", "auxheatonly", "auxiliaryemergencyheat", "away", "cool", "custom", "dayoff", "dryair", "eco", "emergency heat", "emergencyheat", "emergencyheatactive", "energysavecool", "energysaveheat", "fanonly", "frostguard", "furnace", "heat", "heatingoff", "home", "hotwateronly", "in", "manual", "moistair", "off", "out", "resume", "rush hour", "rushhour", "schedule", "southernaway"]}, "data": {"type": "object", "additionalProperties": false, "properties": {"supportedThermostatModes": {"type": "array", "items": {"title": "ThermostatMode", "type": "string", "enum": ["asleep", "auto", "autowitheco", "autowithreset", "autochangeover", "autochangeoveractive", "autocool", "autoheat", "auxheatonly", "auxiliaryemergencyheat", "away", "cool", "custom", "dayoff", "dryair", "eco", "emergency heat", "emergencyheat", "emergencyheatactive", "energysavecool", "energysaveheat", "fanonly", "frostguard", "furnace", "heat", "heatingoff", "home", "hotwateronly", "in", "manual", "moistair", "off", "out", "resume", "rush hour", "rushhour", "schedule", "southernaway"]}}}}}, "required": ["value"]}, "setter": "setThermostatMode", "enumCommands": [{"command": "auto", "value": "auto"}, {"command": "cool", "value": "cool"}, {"command": "emergencyHeat", "value": "emergency heat"}, {"command": "heat", "value": "heat"}, {"command": "off", "value": "off"}]}, "supportedThermostatModes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "ThermostatMode", "type": "string", "enum": ["asleep", "auto", "autowitheco", "autowithreset", "autochangeover", "autochangeoveractive", "autocool", "autoheat", "auxheatonly", "auxiliaryemergencyheat", "away", "cool", "custom", "dayoff", "dryair", "eco", "emergency heat", "emergencyheat", "emergencyheatactive", "energysavecool", "energysaveheat", "fanonly", "frostguard", "furnace", "heat", "heatingoff", "home", "hotwateronly", "in", "manual", "moistair", "off", "out", "resume", "rush hour", "rushhour", "schedule", "southernaway"]}}}}}}, "commands": {"auto": {"arguments": [], "name": "auto"}, "cool": {"arguments": [], "name": "cool"}, "emergencyHeat": {"arguments": [], "name": "emergencyHeat"}, "heat": {"arguments": [], "name": "heat"}, "off": {"arguments": [], "name": "off"}, "setThermostatMode": {"arguments": [{"name": "mode", "schema": {"title": "ThermostatMode", "type": "string", "enum": ["asleep", "auto", "autowitheco", "autowithreset", "autochangeover", "autochangeoveractive", "autocool", "autoheat", "auxheatonly", "auxiliaryemergencyheat", "away", "cool", "custom", "dayoff", "dryair", "eco", "emergency heat", "emergencyheat", "emergencyheatactive", "energysavecool", "energysaveheat", "fanonly", "frostguard", "furnace", "heat", "heatingoff", "home", "hotwateronly", "in", "manual", "moistair", "off", "out", "resume", "rush hour", "rushhour", "schedule", "southernaway"]}, "optional": false}], "name": "setThermostatMode"}}, "id": "thermostatMode", "version": 1, "i18n": {"commands": {"setThermostatMode": {"arguments": {"mode": {"description": "heat.value=Put the thermostat in ``emergency heat`` mode", "i18n": {"asleep": {"label": "Asleep"}, "auto": {"label": "Auto"}, "autowitheco": {"label": "Auto With Eco"}, "autowithreset": {"label": "Auto With Reset"}, "autochangeover": {"label": "Auto Changeover"}, "autochangeoveractive": {"label": "Auto Changeover Active"}, "autocool": {"label": "Auto Cool"}, "autoheat": {"label": "Auto Heat"}, "auxheatonly": {"label": "Aux Heat Only"}, "auxiliaryemergencyheat": {"label": "Auxiliary Emergency Heat"}, "away": {"label": "Away"}, "cool": {"label": "Cool"}, "custom": {"label": "Custom"}, "dayoff": {"label": "Day Off"}, "dryair": {"label": "Dry Air"}, "eco": {"label": "Eco"}, "emergency heat": {"label": "Emergency Heat"}, "emergencyheat": {"label": "Emergency Heat"}, "emergencyheatactive": {"label": "Emergency Heat Active"}, "energysavecool": {"label": "Energy Save Cool"}, "energysaveheat": {"label": "Energy Save Heat"}, "fanonly": {"label": "Fan Only"}, "frostguard": {"label": "Frost Guard"}, "furnace": {"label": "Furnace"}, "heat": {"label": "Heat"}, "heatingoff": {"label": "Heating Off"}, "home": {"label": "Home"}, "hotwateronly": {"label": "Hot Water Only"}, "in": {"label": "In"}, "manual": {"label": "Manual"}, "moistair": {"label": "Moistair"}, "off": {"label": "off"}, "out": {"label": "Out"}, "resume": {"label": "Resume"}, "rush hour": {"label": "Rush Hour"}, "rushhour": {"label": "Rush Hour"}, "schedule": {"label": "Schedule"}, "southernaway": {"label": "Southernaway"}}}}, "description": "Set the thermostat mode"}, "cool": {"description": "Set the mode to ``cool``"}, "auto": {"description": "Set the mode to ``auto``"}, "off": {"description": "Set the mode to ``off``"}, "heat": {"description": "Set the mode to ``heat``"}, "emergencyHeat": {"description": "Set the mode to ``emergency heat``"}}, "attributes": {"thermostatMode": {"description": "The current mode of a thermostat", "i18n": {"value": {"asleep": {"label": "Asleep"}, "auto": {"label": "Auto"}, "autowitheco": {"label": "Auto With Eco"}, "autowithreset": {"label": "Auto With Reset"}, "autochangeover": {"label": "Auto Changeover"}, "autochangeoveractive": {"label": "Auto Changeover Active"}, "autocool": {"label": "Auto Cool"}, "autoheat": {"label": "Auto Heat"}, "auxheatonly": {"label": "Aux Heat Only"}, "auxiliaryemergencyheat": {"label": "Auxiliary Emergency Heat"}, "away": {"label": "Away"}, "cool": {"label": "Cool"}, "custom": {"label": "Custom"}, "dayoff": {"label": "Day Off"}, "dryair": {"label": "Dry Air"}, "eco": {"label": "Eco"}, "emergency heat": {"label": "Emergency Heat"}, "emergencyheat": {"label": "Emergency Heat"}, "emergencyheatactive": {"label": "Emergency Heat Active"}, "energysavecool": {"label": "Energy Save Cool"}, "energysaveheat": {"label": "Energy Save Heat"}, "fanonly": {"label": "Fan Only"}, "frostguard": {"label": "Frost Guard"}, "furnace": {"label": "Furnace"}, "heat": {"label": "Heat"}, "heatingoff": {"label": "Heating Off"}, "home": {"label": "Home"}, "hotwateronly": {"label": "Hot Water Only"}, "in": {"label": "In"}, "manual": {"label": "Manual"}, "moistair": {"label": "Moistair"}, "off": {"label": "off"}, "out": {"label": "Out"}, "resume": {"label": "Resume"}, "rush hour": {"label": "Rush Hour"}, "rushhour": {"label": "Rush Hour"}, "schedule": {"label": "Schedule"}, "southernaway": {"label": "Southernaway"}}}, "label": "thermostat mode", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "supportedThermostatModes": {"description": "Modes supported by the thermostat", "label": "supported thermostat modes", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Thermostat Operating State", "status": "live", "attributes": {"thermostatOperatingState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "ThermostatOperatingState", "type": "string", "enum": ["cooling", "fan only", "heating", "idle", "pending cool", "pending heat", "vent economizer"]}}, "required": ["value"]}, "values": ["cooling", "fan only", "heating", "idle", "pending cool", "pending heat", "vent economizer"]}}, "commands": {}, "id": "thermostatOperatingState", "version": 1, "i18n": {"attributes": {"thermostatOperatingState": {"i18n": {"value": {"cooling": {"description": "The thermostat is cooling", "label": "cooling"}, "idle": {"description": "The thermostat is idle", "label": "idle"}, "heating": {"description": "The thermostat is heating", "label": "heating"}}}, "description": "The current state that the thermostat is operating in", "vent": "economizer.value=The thermostat is currently in economizer mode", "pending": "heat.value=The thermostat is currently pending heating when a certain temperature setpoint is reached", "fan": "only.value=The thermostat only has the fan on", "label": "state", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "description": "Gives the ability to see the current state that the thermostat is operating in"}}, {"name": "Thermostat Schedule", "status": "deprecated", "attributes": {"schedule": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}}, "setter": "setSchedule"}}, "commands": {"setSchedule": {"arguments": [{"schema": {"title": "JsonObject", "type": "object"}, "name": "schedule", "optional": false}], "name": "setSchedule"}}, "id": "thermostatSchedule", "version": 1, "i18n": {"description": "Allows for the control of the thermostat schedule.", "attributes": {"schedule": {"description": "The current schedule of the thermostat", "label": "schedule", "displayTemplate": "{{device.label}} {{attribute}} was updated"}}, "commands": {"setSchedule": {"description": "Set the thermostat schedule", "arguments": {"schedule": {"description": "The schedule to which the thermostat should be set"}}}}}}, {"name": "Thermostat Setpoint", "status": "deprecated", "attributes": {"thermostatSetpoint": {"schema": {"title": "Temperature", "type": "object", "additionalProperties": false, "properties": {"value": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "unit": {"title": "TemperatureUnit", "type": "string", "enum": ["F", "C"]}}, "required": ["value", "unit"]}}}, "commands": {}, "id": "thermostatSetpoint", "version": 1, "i18n": {"attributes": {"thermostatSetpoint": {"description": "The current setpoint value", "label": "thermostat setpoint", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}{{unit}}"}}, "description": "Gives the ability to read the current setpoint on a thermostat"}}, {"name": "Thermostat", "status": "deprecated", "attributes": {"coolingSetpoint": {"schema": {"title": "Temperature", "type": "object", "additionalProperties": false, "properties": {"value": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "unit": {"title": "TemperatureUnit", "type": "string", "enum": ["F", "C"]}}, "required": ["value", "unit"]}, "setter": "setCoolingSetpoint"}, "coolingSetpointRange": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": [{"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}], "minItems": 2, "maxItems": 2}}, "required": ["value"]}}, "heatingSetpoint": {"schema": {"title": "Temperature", "type": "object", "additionalProperties": false, "properties": {"value": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "unit": {"title": "TemperatureUnit", "type": "string", "enum": ["F", "C"]}}, "required": ["value", "unit"]}, "setter": "setHeatingSetpoint"}, "heatingSetpointRange": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": [{"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}], "minItems": 2, "maxItems": 2}}, "required": ["value"]}}, "schedule": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}, "required": ["value"]}, "setter": "setSchedule"}, "temperature": {"schema": {"title": "Temperature", "type": "object", "additionalProperties": false, "properties": {"value": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "unit": {"title": "TemperatureUnit", "type": "string", "enum": ["F", "C"]}}, "required": ["value", "unit"]}}, "thermostatFanMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "ThermostatFanMode", "type": "string", "enum": ["auto", "circulate", "followschedule", "on"]}, "data": {"type": "object", "additionalProperties": false, "properties": {"supportedThermostatFanModes": {"type": "array", "items": {"title": "ThermostatFanMode", "type": "string", "enum": ["auto", "circulate", "followschedule", "on"]}}}}}, "required": ["value"]}, "values": ["auto", "circulate", "followschedule", "on"], "setter": "setThermostatFanMode", "enumCommands": [{"command": "fanAuto", "value": "auto"}, {"command": "fanCirculate", "value": "circulate"}, {"command": "fanOn", "value": "on"}]}, "supportedThermostatFanModes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "ThermostatFanMode", "type": "string", "enum": ["auto", "circulate", "followschedule", "on"]}}}}}, "thermostatMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "ThermostatMode", "type": "string", "enum": ["asleep", "auto", "autowitheco", "autowithreset", "autochangeover", "autochangeoveractive", "autocool", "autoheat", "auxheatonly", "auxiliaryemergencyheat", "away", "cool", "custom", "dayoff", "dryair", "eco", "emergency heat", "emergencyheat", "emergencyheatactive", "energysavecool", "energysaveheat", "fanonly", "frostguard", "furnace", "heat", "heatingoff", "home", "hotwateronly", "in", "manual", "moistair", "off", "out", "resume", "rush hour", "rushhour", "schedule", "southernaway"]}, "data": {"type": "object", "additionalProperties": false, "properties": {"supportedThermostatModes": {"type": "array", "items": {"title": "ThermostatMode", "type": "string", "enum": ["asleep", "auto", "autowitheco", "autowithreset", "autochangeover", "autochangeoveractive", "autocool", "autoheat", "auxheatonly", "auxiliaryemergencyheat", "away", "cool", "custom", "dayoff", "dryair", "eco", "emergency heat", "emergencyheat", "emergencyheatactive", "energysavecool", "energysaveheat", "fanonly", "frostguard", "furnace", "heat", "heatingoff", "home", "hotwateronly", "in", "manual", "moistair", "off", "out", "resume", "rush hour", "rushhour", "schedule", "southernaway"]}}}}}, "required": ["value"]}, "values": ["asleep", "auto", "autowitheco", "autowithreset", "autochangeover", "autochangeoveractive", "autocool", "autoheat", "auxheatonly", "auxiliaryemergencyheat", "away", "cool", "custom", "dayoff", "dryair", "eco", "emergency heat", "emergencyheat", "emergencyheatactive", "energysavecool", "energysaveheat", "fanonly", "frostguard", "furnace", "heat", "heatingoff", "home", "in", "manual", "moistair", "off", "out", "resume", "rush hour", "rushhour", "schedule", "southernaway"], "setter": "setThermostatMode", "enumCommands": [{"command": "auto", "value": "auto"}, {"command": "cool", "value": "cool"}, {"command": "emergencyHeat", "value": "emergency heat"}, {"command": "heat", "value": "heat"}, {"command": "off", "value": "off"}]}, "supportedThermostatModes": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "ThermostatMode", "type": "string", "enum": ["asleep", "auto", "autowitheco", "autowithreset", "autochangeover", "autochangeoveractive", "autocool", "autoheat", "auxheatonly", "auxiliaryemergencyheat", "away", "cool", "custom", "dayoff", "dryair", "eco", "emergency heat", "emergencyheat", "emergencyheatactive", "energysavecool", "energysaveheat", "fanonly", "frostguard", "furnace", "heat", "heatingoff", "home", "hotwateronly", "in", "manual", "moistair", "off", "out", "resume", "rush hour", "rushhour", "schedule", "southernaway"]}}}}}, "thermostatOperatingState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "ThermostatOperatingState", "type": "string", "enum": ["cooling", "fan only", "heating", "idle", "pending cool", "pending heat", "vent economizer"]}}, "required": ["value"]}, "values": ["cooling", "fan only", "heating", "idle", "pending cool", "pending heat", "vent economizer"]}, "thermostatSetpoint": {"schema": {"title": "Temperature", "type": "object", "additionalProperties": false, "properties": {"value": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "unit": {"title": "TemperatureUnit", "type": "string", "enum": ["F", "C"]}}, "required": ["value", "unit"]}}, "thermostatSetpointRange": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": [{"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}], "minItems": 2, "maxItems": 2}}}}}, "commands": {"auto": {"arguments": [], "name": "auto"}, "cool": {"arguments": [], "name": "cool"}, "emergencyHeat": {"arguments": [], "name": "emergencyHeat"}, "fanAuto": {"arguments": [], "name": "fanAuto"}, "fanCirculate": {"arguments": [], "name": "fanCirculate"}, "fanOn": {"arguments": [], "name": "fanOn"}, "heat": {"arguments": [], "name": "heat"}, "off": {"arguments": [], "name": "off"}, "setCoolingSetpoint": {"arguments": [{"name": "setpoint", "schema": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "optional": false}], "name": "setCoolingSetpoint"}, "setHeatingSetpoint": {"arguments": [{"name": "setpoint", "schema": {"title": "TemperatureValue", "type": "number", "minimum": -460, "maximum": 10000}, "optional": false}], "name": "setHeatingSetpoint"}, "setSchedule": {"arguments": [{"name": "schedule", "schema": {"title": "JsonObject", "type": "object"}, "optional": false}], "name": "setSchedule"}, "setThermostatFanMode": {"arguments": [{"name": "fanmode", "schema": {"title": "ThermostatFanMode", "type": "string", "enum": ["auto", "circulate", "followschedule", "on"]}, "optional": false}], "name": "setThermostatFanMode"}, "setThermostatMode": {"arguments": [{"name": "mode", "schema": {"title": "ThermostatMode", "type": "string", "enum": ["asleep", "auto", "autowitheco", "autowithreset", "autochangeover", "autochangeoveractive", "autocool", "autoheat", "auxheatonly", "auxiliaryemergencyheat", "away", "cool", "custom", "dayoff", "dryair", "eco", "emergency heat", "emergencyheat", "emergencyheatactive", "energysavecool", "energysaveheat", "fanonly", "frostguard", "furnace", "heat", "heatingoff", "home", "hotwateronly", "in", "manual", "moistair", "off", "out", "resume", "rush hour", "rushhour", "schedule", "southernaway"]}, "optional": false}], "name": "setThermostatMode"}}, "id": "thermostat", "version": 1, "i18n": {"commands": {"setSchedule": {"description": "Set the schedule", "arguments": {"schedule": {"description": "A value that the schedule should be set to"}}}, "setCoolingSetpoint": {"description": "Set the cooling setpoint", "arguments": {"setpoint": {"description": "A value that the cooling setpoint should be set to"}}}, "setThermostatMode": {"arguments": {"mode": {"description": "heat.value=Put the thermostat in ``emergency heat`` mode", "i18n": {"asleep": {"label": "Asleep"}, "auto": {"label": "Auto"}, "autowitheco": {"label": "Auto With Eco"}, "autowithreset": {"label": "Auto With Reset"}, "autochangeover": {"label": "Auto Changeover"}, "autochangeoveractive": {"label": "Auto Changeover Active"}, "autocool": {"label": "Auto Cool"}, "autoheat": {"label": "Auto Heat"}, "auxheatonly": {"label": "Aux Heat Only"}, "auxiliaryemergencyheat": {"label": "Auxiliary Emergency Heat"}, "away": {"label": "Away"}, "cool": {"label": "Cool"}, "custom": {"label": "Custom"}, "dayoff": {"label": "Day Off"}, "dryair": {"label": "Dry Air"}, "eco": {"label": "Eco"}, "emergency heat": {"label": "Emergency Heat"}, "emergencyheat": {"label": "Emergency Heat"}, "emergencyheatactive": {"label": "Emergency Heat Active"}, "energysavecool": {"label": "Energy Save Cool"}, "energysaveheat": {"label": "Energy Save Heat"}, "fanonly": {"label": "Fan Only"}, "frostguard": {"label": "Frost Guard"}, "furnace": {"label": "Furnace"}, "heat": {"label": "Heat"}, "heatingoff": {"label": "Heating Off"}, "home": {"label": "Home"}, "in": {"label": "In"}, "manual": {"label": "Manual"}, "moistair": {"label": "Moistair"}, "off": {"label": "off"}, "out": {"label": "Out"}, "resume": {"label": "Resume"}, "rush hour": {"label": "Rush Hour"}, "rushhour": {"label": "Rush Hour"}, "schedule": {"label": "Schedule"}, "southernaway": {"label": "Southernaway"}}}}, "description": "Set the thermostat mode"}, "fanAuto": {"description": "Set the fan mode to ``auto``"}, "setHeatingSetpoint": {"description": "Set the heating setpoint", "arguments": {"setpoint": {"description": "A value that the heating setpoint should be set to"}}}, "setThermostatFanMode": {"arguments": {"fanmode": {"description": "The mode may be one of the following values:", "i18n": {"on": {"description": "The fan is on"}, "auto": {"description": "Automatically detect when the fan should be on"}, "followschedule": {"description": "The fan is set to follow predefined schedule"}, "circulate": {"description": "Periodically turn the fan on to circulate air"}}}}, "description": "Set the thermostat fan mode"}, "off": {"description": "Set the mode to ``off``"}, "fanCirculate": {"description": "Set the fan mode to ``circulate``"}, "cool": {"description": "Set the mode to ``cool``"}, "heat": {"description": "Set the mode to ``heat``"}, "emergencyHeat": {"description": "Set the mode to ``emergency heat``"}, "auto": {"description": "Set the mode to ``auto``"}, "fanOn": {"description": "Set the fan mode to ``on``"}}, "attributes": {"thermostatMode": {"description": "The current mode of the thermostat", "i18n": {"value": {"asleep": {"label": "Asleep"}, "auto": {"label": "Auto"}, "autowitheco": {"label": "Auto With Eco"}, "autowithreset": {"label": "Auto With Reset"}, "autochangeover": {"label": "Auto Changeover"}, "autochangeoveractive": {"label": "Auto Changeover Active"}, "autocool": {"label": "Auto Cool"}, "autoheat": {"label": "Auto Heat"}, "auxheatonly": {"label": "Aux Heat Only"}, "auxiliaryemergencyheat": {"label": "Auxiliary Emergency Heat"}, "away": {"label": "Away"}, "cool": {"label": "cool"}, "custom": {"label": "Custom"}, "dayoff": {"label": "Day Off"}, "dryair": {"label": "Dry Air"}, "eco": {"label": "eco"}, "emergency heat": {"label": "Emergency"}, "emergencyheat": {"label": "Emergency Heat"}, "emergencyheatactive": {"label": "Emergency Heat Active"}, "energysavecool": {"label": "Energy Save Cool"}, "energysaveheat": {"label": "Energy Save Heat"}, "fanonly": {"label": "Fan Only"}, "frostguard": {"label": "Frost Guard"}, "furnace": {"label": "Furnace"}, "heat": {"label": "Heat"}, "heatingoff": {"label": "Heating Off"}, "home": {"label": "Home"}, "in": {"label": "In"}, "manual": {"label": "Manual"}, "moistair": {"label": "Moistair"}, "off": {"label": "Off"}, "out": {"label": "Out"}, "resume": {"label": "Resume"}, "rush hour": {"label": "Rush Hour"}, "rushhour": {"label": "Rush Hour"}, "schedule": {"label": "Schedule"}, "southernaway": {"label": "Southernaway"}}}, "label": "thermostat mode", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "thermostatOperatingState": {"i18n": {"value": {"idle": {"description": "The thermostat is idle", "label": "Idle"}, "heating": {"description": "The thermostat is heating", "label": "Heating"}, "cooling": {"description": "The thermostat is cooling", "label": "Cooling"}, "fan only": {"label": "Fan only"}, "pending cool": {"label": "Pending cool"}, "pending heat": {"label": "Pending heat"}, "vent economizer": {"label": "Vent economiser"}}}, "description": "The current state that the thermostat is operating in", "pending": "heat.value=The thermostat is currently pending heating when a certain temperature setpoint is reached", "vent": "economizer.value=The thermostat is currently in economizer mode", "fan": "only.value=The thermostat only has the fan on", "label": "thermostat operating state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "thermostatFanMode": {"i18n": {"value": {"auto": {"description": "The fan is on auto", "label": "auto"}, "circulate": {"description": "The fan is circulating", "label": "circulate"}, "on": {"description": "The fan is on", "label": "on"}, "followschedule": {"description": "The fan is set to follow predefined schedule", "label": "followschedule"}}}, "description": "The current mode of the fan on a thermostat", "label": "thermostat fan mode", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "thermostatSetpoint": {"description": "The current setpoint value", "label": "thermostat setpoint", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}{{unit}}"}, "coolingSetpointRange": {"description": "Two element array containing minimum and maximum supported cooling setpoint", "label": "cooling setpoint range", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "coolingSetpoint": {"description": "The current cooling setpoint", "label": "cooling temperature", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}{{unit}}"}, "heatingSetpointRange": {"description": "Two element array containing minimum and maximum supported heating setpoint", "label": "heating setpoint range", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "heatingSetpoint": {"description": "The current heating setpoint", "i18n": {}, "label": "heating temperature", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}{{unit}}"}, "thermostatSetpointRange": {"description": "Two element array containing minimum and maximum supported setpoint", "label": "thermostat setpoint range", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "schedule": {"description": "The schedule for the thermostat", "label": "schedule", "displayTemplate": "{{device.label}} {{attribute}} was updated"}, "temperature": {"description": "The current temperature measurement of the thermostat", "label": "temperature", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}{{unit}}"}, "supportedThermostatFanModes": {"description": "The fan modes that the thermostat supports", "label": "supported thermostat fan modes", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedThermostatModes": {"description": "The modes that the thermostat supports", "label": "supported thermostat modes", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "Allows for the control of a thermostat device"}}, {"name": "Three Axis", "status": "live", "attributes": {"threeAxis": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "integer", "minimum": -10000, "maximum": 10000}, "minItems": 3, "maxItems": 3}, "unit": {"type": "string", "enum": ["mG"], "default": "mG"}}, "required": ["value"]}}}, "commands": {}, "id": "threeAxis", "version": 1, "i18n": {"description": "Gives the three axis coordinates for devices that support it", "attributes": {"threeAxis": {"description": "A Vector3 ``(x,y,z)`` representation of the three axis coordinates", "label": "3-axis sensor", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}mG"}}}}, {"name": "Timed Session", "status": "proposed", "attributes": {"sessionStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["canceled", "paused", "running", "stopped"]}}, "required": ["value"]}, "values": ["canceled", "paused", "running", "stopped"], "enumCommands": [{"command": "cancel", "value": "canceled"}, {"command": "pause", "value": "paused"}, {"command": "start", "value": "running"}, {"command": "stop", "value": "stopped"}]}, "completionTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}, "setter": "setCompletionTime"}}, "commands": {"cancel": {"arguments": [], "name": "cancel"}, "pause": {"arguments": [], "name": "pause"}, "setCompletionTime": {"arguments": [{"name": "completionTime", "schema": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "optional": false}], "name": "setCompletionTime"}, "start": {"arguments": [], "name": "start"}, "stop": {"arguments": [], "name": "stop"}}, "id": "timedSession", "version": 1, "i18n": {"description": "Allows for the control of the timed session.", "attributes": {"sessionStatus": {"description": "Current status of the timed session", "i18n": {"value": {"canceled": {"description": "The timed session is now in \"canceled\" status"}, "paused": {"description": "The timed session is now in \"paused\" status"}, "running": {"description": "The timed session is now in \"running\" status"}, "stopped": {"description": "The timed session is now in \"stopped\" status"}}}, "label": "session status", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "completionTime": {"description": "The date time that the timed session will complete complete", "label": "completion time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setCompletionTime": {"description": "Set the completion time for the timed session", "arguments": {"completionTime": {"description": "Set the completion time for the timed session to this IS0-8601 time"}}}, "cancel": {"description": "Cancel the timed session"}, "pause": {"description": "Pause the timed session"}, "start": {"description": "Start the timed session"}, "stop": {"description": "Stop the timed session"}}}}, {"name": "Tone", "status": "live", "attributes": {}, "commands": {"beep": {"arguments": [], "name": "beep"}}, "id": "tone", "version": 1, "i18n": {"commands": {"beep": {"description": "Beep the device"}}, "description": "Allows for the control of a device that can make an audible tone"}}, {"name": "Touch Sensor", "status": "deprecated", "attributes": {"touch": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["touched"]}}}, "values": ["touched"]}}, "commands": {}, "id": "touchSensor", "version": 1, "i18n": {"attributes": {"touch": {"i18n": {"value": {"touched": {"description": "The value if the device was touched"}}}, "description": "Whether or not the device was touched", "label": "touch", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "Gives the ability to get the touched status for devices that are touch sensitive. This has been **deprecated** in favor of the button capability"}}, {"name": "Tv Channel", "status": "proposed", "attributes": {"tvChannel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}, "setter": "setTvChannel", "actedOnBy": ["channelDown", "channelUp"]}, "tvChannelName": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}, "setter": "setTvChannelName"}}, "commands": {"setTvChannel": {"arguments": [{"name": "tvChannel", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "setTvChannel"}, "channelUp": {"arguments": [], "name": "channelUp"}, "channelDown": {"arguments": [], "name": "channelDown"}, "setTvChannelName": {"arguments": [{"name": "tvChannelName", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": true}], "name": "setTvChannelName"}}, "id": "tvChannel", "version": 1, "i18n": {"description": "Allows for the inspection and control of the TV channel.", "attributes": {"tvChannel": {"description": "Current status of the TV channel", "label": "tv channel", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "tvChannelName": {"description": "Current status of the TV channel name", "label": "tv channel name", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setTvChannel": {"description": "Set the TV channel", "arguments": {"channel": {"description": "The channel to which the TV should be set"}}}, "channelUp": {"description": "Move the TV channel up"}, "channelDown": {"description": "Move the TV channel down"}, "setTvChannelName": {"description": "Set the TV channel Name", "arguments": {"channel": {"description": "The channel name to which the TV should be set"}}}}}}, {"name": "TV", "status": "live", "attributes": {"channel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}}, "actedOnBy": ["channelDown", "channelUp"]}, "movieMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "picture": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "power": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "sound": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "volume": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}}, "actedOnBy": ["volumeDown", "volumeUp"]}}, "commands": {"channelDown": {"arguments": [], "name": "channelDown"}, "channelUp": {"arguments": [], "name": "channelUp"}, "volumeDown": {"arguments": [], "name": "volumeDown"}, "volumeUp": {"arguments": [], "name": "volumeUp"}}, "id": "tV", "version": 1, "i18n": {"description": "Allows for the control of the television.", "attributes": {"channel": {"description": "Current channel setting", "label": "channel", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "movieMode": {"description": "Current movie mode setting", "label": "movie mode", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "picture": {"description": "Current picture setting", "label": "picture", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "power": {"description": "Current power setting", "label": "power", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "sound": {"description": "Current sound setting", "label": "sound", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "volume": {"description": "Current volume setting", "label": "volume", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "commands": {"channelDown": {"description": "Move a channel down"}, "channelUp": {"description": "Move a channel up"}, "volumeDown": {"description": "Set volume lower"}, "volumeUp": {"description": "Set volume higher"}}}}, {"name": "Tvoc Health Concern", "status": "proposed", "attributes": {"tvocHealthConcern": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "AirQualityHealthConcern", "type": "string", "enum": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "required": ["value"]}, "values": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "commands": {}, "id": "tvocHealthConcern", "version": 1, "i18n": {"description": "Health Concern levels of TVOC sensor measurements.", "attributes": {"tvocHealthConcern": {"description": "Current health concern of TVOC, based on the relative health hazard", "label": "TVOC health concern", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}}}, {"name": "Tvoc Measurement", "status": "live", "attributes": {"tvocLevel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 1000000}, "unit": {"type": "string", "enum": ["ppm", "ppb", "ug/m3"], "default": "ppm"}}, "required": ["value", "unit"]}}}, "commands": {}, "id": "tvocMeasurement", "version": 1, "i18n": {"description": "Measure total volatile organic compound levels", "attributes": {"tvocLevel": {"description": "The level of total volatile organic compounds detected", "label": "total volatile organic compound level", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}{{unit}}"}}}}, {"name": "Ultraviolet Index", "status": "live", "attributes": {"ultravioletIndex": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "number", "minimum": 0, "maximum": 255}}, "required": ["value"]}}}, "commands": {}, "id": "ultravioletIndex", "version": 1, "i18n": {"description": "Gives the ability to get the ultraviolet index from devices that report it", "attributes": {"ultravioletIndex": {"description": "A number representing the ultraviolet index", "label": "UV index", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Valve", "status": "live", "attributes": {"valve": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["closed", "open"]}}, "required": ["value"]}, "values": ["closed", "open"], "enumCommands": [{"command": "close", "value": "closed"}, {"command": "open", "value": "open"}]}}, "commands": {"close": {"arguments": [], "name": "close"}, "open": {"arguments": [], "name": "open"}}, "id": "valve", "version": 1, "i18n": {"attributes": {"valve": {"i18n": {"value": {"closed": {"description": "The value of the ``valve`` attribute if the valve is closed", "label": "Closed"}, "open": {"description": "The value of the ``valve`` attribute if the valve is open", "label": "Open"}}}, "description": "A string representation of whether the valve is open or closed", "label": "valve", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "commands": {"close": {"description": "Close the valve"}, "open": {"description": "Open the valve"}}, "description": "Allows for the control of a valve device"}}, {"name": "Vehicle Engine", "status": "proposed", "attributes": {"engineState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["starting", "running", "unknown", "off"]}}, "required": ["value"]}, "values": ["starting", "running", "unknown", "off"], "enumCommands": [{"command": "startEngine", "value": "running"}, {"command": "stopEngine", "value": "off"}]}}, "commands": {"startEngine": {"arguments": [], "name": "startEngine"}, "stopEngine": {"arguments": [], "name": "stopEngine"}}, "id": "vehicleEngine", "version": 1, "i18n": {"description": "Allows for the control of a vehicle engine", "commands": {"startEngine": {"description": "Turn the engine on"}, "stopEngine": {"description": "Turn the engine off"}}, "attributes": {"engineState": {"i18n": {"value": {"starting": {"description": "The engine is in the starting phase", "label": "starting"}, "running": {"description": "The engine is running", "label": "running"}, "unknown": {"description": "The engine state is unknown", "label": "unknown"}, "off": {"description": "The engine is off", "label": "off"}}}, "description": "A string representation of the state of the engine", "label": "engine state", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}}}, {"name": "Vehicle Fuel Level", "status": "proposed", "attributes": {"fuelLevel": {"schema": {"title": "IntegerPercent", "type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 100}, "unit": {"type": "string", "enum": ["%"], "default": "%"}}, "required": ["value"]}, "unit": "%"}}, "commands": {}, "id": "vehicleFuelLevel", "version": 1, "i18n": {"description": "Get the current fuel level of a vehicle", "attributes": {"fuelLevel": {"description": "The current fuel level of a vehicle as a percentage", "label": "fuel level", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}%"}}}}, {"name": "Vehicle Information", "status": "proposed", "attributes": {"vehicleColor": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "vehicleMake": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "vehicleModel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "vehicleTrim": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "vehicleYear": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 9999}}}}, "vehicleId": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "vehiclePlate": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "vehicleImage": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "URL", "type": "string", "pattern": "^(https?):\\/\\/((?:[a-zA-Z0-9.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-zA-Z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?$"}}}}}, "commands": {}, "id": "vehicleInformation", "version": 1, "i18n": {"description": "Information about a vehicle.", "attributes": {"vehicleColor": {"description": "The color of the vehicle.", "label": "vehicle color", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "vehicleMake": {"description": "The make of the vehicle.", "label": "vehicle make", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "vehicleModel": {"description": "The model of the vehicle.", "label": "vehicle model", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "vehicleTrim": {"description": "The trim of the vehicle.", "label": "vehicle trim", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "vehicleYear": {"description": "The model year of the vehicle.", "label": "vehicle year", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "vehicleId": {"description": "The identification (usually VIN - Vehicle Identification Number) of the vehicle.", "label": "vehicle id", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "vehiclePlate": {"description": "The registration plate of the vehicle.", "label": "vehicle plate", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "vehicleImage": {"description": "An image representation of the vehicle as a URL.", "label": "vehicle image", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Vehicle Odometer", "status": "proposed", "attributes": {"odometerReading": {"schema": {"title": "Distance", "type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveNumber", "type": "number", "minimum": 0}, "unit": {"title": "DistanceUnit", "type": "string", "enum": ["mi", "km", "m"]}}, "required": ["value", "unit"]}}}, "commands": {}, "id": "vehicleOdometer", "version": 1, "i18n": {"description": "Get the odometer reading from a vehicle", "attributes": {"odometerReading": {"description": "A number that represents the current odometer reading", "label": "odometer reading", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}{{unit}}"}}}}, {"name": "Vehicle Range", "status": "proposed", "attributes": {"estimatedRemainingRange": {"schema": {"title": "Distance", "type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveNumber", "type": "number", "minimum": 0}, "unit": {"title": "DistanceUnit", "type": "string", "enum": ["mi", "km", "m"]}}, "required": ["value", "unit"]}}}, "commands": {}, "id": "vehicleRange", "version": 1, "i18n": {"description": "Get the estimated remaining range of a vehicle's fuel source", "attributes": {"estimatedRemainingRange": {"description": "A number that represents the estimated remaining range", "label": "estimated remaining range", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}{{unit}}"}}}}, {"name": "Vehicle Tire Pressure Monitor", "status": "proposed", "attributes": {"tirePressureState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["normal", "warn"]}}, "required": ["value"]}, "values": ["normal", "warn"]}}, "commands": {}, "id": "vehicleTirePressureMonitor", "version": 1, "i18n": {"description": "Get the state of a vehicle's tire pressure monitor system", "attributes": {"tirePressureState": {"i18n": {"value": {"normal": {"description": "tire pressure readings are normal", "label": "Normal"}, "warn": {"description": "tire pressure readings are not normal", "label": "Warn"}}}, "description": "A string that represents the state of the tire pressure monitor system", "label": "tire pressure state", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}, {"name": "Very Fine Dust Health Concern", "status": "live", "attributes": {"veryFineDustHealthConcern": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "AirQualityHealthConcern", "type": "string", "enum": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "required": ["value"]}, "values": ["good", "moderate", "slightlyUnhealthy", "unhealthy", "veryUnhealthy", "hazardous"]}}, "commands": {}, "id": "veryFineDustHealthConcern", "version": 1, "i18n": {"description": "Health Concern levels of very fine dust sensor measurements.", "attributes": {"veryFineDustHealthConcern": {"description": "Current health concern of very fine dust -- also refered to as PM1.0, based on the relative health hazard", "label": "very fine dust health concern", "i18n": {"value": {"good": {"label": "Good"}, "moderate": {"label": "Moderate"}, "slightlyUnhealthy": {"label": "Slightly Unhealthy"}, "unhealthy": {"label": "Unhealthy"}, "veryUnhealthy": {"label": "Very Unhealthy"}, "hazardous": {"label": "Hazardous"}}}, "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}"}}}}, {"name": "Very Fine Dust Sensor", "status": "live", "attributes": {"veryFineDustLevel": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "unit": {"type": "string", "enum": ["\u03bcg/m^3"], "default": "\u03bcg/m^3"}}, "required": ["value"]}}}, "commands": {}, "id": "veryFineDustSensor", "version": 1, "i18n": {"description": "Gets the reading of the very fine dust sensor.", "attributes": {"veryFineDustLevel": {"description": "Current level of fine dust -- also refered to as PM1.0, measured in micrograms per cubic meter", "label": "very fine dust level", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}\u03bcg/m^3"}}}}, {"name": "Video Camera", "status": "live", "attributes": {"camera": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["off", "on", "restarting", "unavailable"]}}}, "values": ["off", "on", "restarting", "unavailable"], "enumCommands": [{"command": "on", "value": "on"}, {"command": "off", "value": "off"}]}, "mute": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "MuteState", "type": "string", "enum": ["muted", "unmuted"]}}}, "values": ["muted", "unmuted"], "enumCommands": [{"command": "mute", "value": "muted"}, {"command": "unmute", "value": "unmuted"}]}, "settings": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}, "required": ["value"]}}, "statusMessage": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}}, "commands": {"flip": {"arguments": [], "name": "flip"}, "mute": {"arguments": [], "name": "mute"}, "off": {"arguments": [], "name": "off"}, "on": {"arguments": [], "name": "on"}, "unmute": {"arguments": [], "name": "unmute"}}, "id": "videoCamera", "version": 1, "i18n": {"description": "Allows for the control of the video camera.", "attributes": {"camera": {"description": "The current state of the video camera", "i18n": {"value": {"off": {"label": "Off"}, "on": {"label": "On"}, "restarting": {"label": "Restarting"}, "unavailable": {"label": "Unavailable"}}}, "label": "camera", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "mute": {"description": "The current mute state", "label": "mute", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "settings": {"description": "The current state of the settings", "label": "settings", "displayTemplate": "{{device.label}} {{attribute}} was updated"}, "statusMessage": {"description": "The status message", "label": "status message", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"flip": {"description": "Flip the picture display"}, "mute": {"description": "Mute the video camera"}, "off": {"description": "Turn off the video camera"}, "on": {"description": "Turn on the video camera"}, "unmute": {"description": "Unmute the video camera"}}}}, {"name": "Video Capture", "status": "live", "attributes": {"clip": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}, "required": ["value"]}, "actedOnBy": ["capture"]}, "stream": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}, "required": ["value"]}}}, "commands": {"capture": {"arguments": [{"name": "startTime", "schema": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "optional": false}, {"name": "captureTime", "schema": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "optional": false}, {"name": "endTime", "schema": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "optional": false}, {"name": "correlationId", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": true}, {"name": "reason", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": true}], "name": "capture"}}, "id": "videoCapture", "version": 1, "i18n": {"description": "Allows for the control of the video capture.", "commands": {"capture": {"description": "Set the video capture schedule", "arguments": {"startTime": {"description": "Time, in ISO 8601 format, when the video capture should start"}, "captureTime": {"description": "Video capture time, in ISO 8601 format"}, "endTime": {"description": "Time, in ISO 8601 format, when the video capture should end"}}}}, "attributes": {"clip": {"description": "Video clip details", "label": "clip", "displayTemplate": "{{device.label}} {{attribute}} was updated"}, "stream": {"description": "Video stream details", "label": "stream", "displayTemplate": "{{device.label}} {{attribute}} was updated"}}}}, {"name": "Video Clips", "status": "proposed", "attributes": {"videoClip": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "VideoClip", "type": "object", "additionalProperties": false, "properties": {"status": {"title": "VideoClipStatus", "type": "string", "enum": ["initiated", "streaming", "completed", "failed", "ignored"]}, "clipId": {"title": "String", "type": "string", "maxLength": 255}, "thumbnailUrl": {"title": "URL", "type": "string", "pattern": "^(https?):\\/\\/((?:[a-zA-Z0-9.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-zA-Z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?$"}, "clipUrl": {"title": "URL", "type": "string", "pattern": "^(https?):\\/\\/((?:[a-zA-Z0-9.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-zA-Z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?$"}, "startTime": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "captureTime": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}, "duration": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}}}, "required": ["value"]}, "actedOnBy": ["captureClip"]}}, "commands": {"captureClip": {"arguments": [{"name": "duration", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": false}, {"name": "preFetch", "schema": {"title": "PositiveInteger", "type": "integer", "minimum": 0}, "optional": false}], "name": "captureClip"}}, "id": "videoClips", "version": 1, "i18n": {"description": "Video clip capture", "commands": {"captureClip": {"description": "Capture the video clip", "arguments": {"duration": {"description": "The duration of the video clip"}, "preFetch": {"description": "The prefetch value for the video clip"}}}}, "attributes": {"videoClip": {"description": "Description for the videoClip attribute", "label": "video clip", "displayTemplate": "{{device.label}} {{attribute}} was updated"}}}}, {"name": "Video Stream", "status": "live", "attributes": {"stream": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "JsonObject", "type": "object"}}, "required": ["value"]}, "actedOnBy": ["startStream", "stopStream"]}}, "commands": {"startStream": {"arguments": [], "name": "startStream"}, "stopStream": {"arguments": [], "name": "stopStream"}}, "id": "videoStream", "version": 1, "i18n": {"description": "Allows for the control of the video stream.", "attributes": {"stream": {"description": "Current status of the video stream", "label": "stream", "displayTemplate": "{{device.label}} {{attribute}} was updated"}}, "commands": {"startStream": {"description": "Start the video stream"}, "stopStream": {"description": "Stop the video stream"}}}}, {"name": "Voltage Measurement", "status": "live", "attributes": {"voltage": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Number", "type": "number"}, "unit": {"type": "string", "enum": ["V"], "default": "V"}}, "required": ["value"]}}}, "commands": {}, "id": "voltageMeasurement", "version": 1, "i18n": {"description": "Get the value of voltage measured from devices that support it", "attributes": {"voltage": {"description": "A number representing the current voltage measured", "label": "voltage", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}V"}}}}, {"name": "Washer Mode", "status": "proposed", "attributes": {"washerMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "WasherMode", "type": "string", "enum": ["regular", "heavy", "rinse", "spinDry"]}}, "required": ["value"]}, "values": ["regular", "heavy", "rinse", "spinDry"], "setter": "setWasherMode"}}, "commands": {"setWasherMode": {"arguments": [{"name": "mode", "schema": {"title": "WasherMode", "type": "string", "enum": ["regular", "heavy", "rinse", "spinDry"]}, "optional": false}], "name": "setWasherMode"}}, "id": "washerMode", "version": 1, "i18n": {"description": "Allows for the control of the washer mode.", "attributes": {"washerMode": {"description": "The current mode of the washer", "i18n": {"value": {"regular": {"description": "The washer is in \"regular\" mode"}, "heavy": {"description": "The washer is in \"heavy\" mode"}, "rinse": {"description": "The washer is in \"rinse\" mode"}, "spinDry": {"description": "The washer is in \"spin dry\" mode"}}}, "label": "washer mode", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setWasherMode": {"description": "Set the washer mode", "arguments": {"mode": {"description": "The mode to which washer should be set, either \"regular\" or \"heavy\" or \"rinse\" or \"spinDry\""}}}}}}, {"name": "Water Flow Alarm", "id": "waterFlowAlarm", "version": 1, "status": "proposed", "attributes": {"volumeAlarm": {"schema": {"type": "object", "properties": {"value": {"type": "string", "enum": ["normal", "warning", "alarm"]}}, "additionalProperties": false, "required": ["value"]}, "enumCommands": []}, "durationAlarm": {"schema": {"type": "object", "properties": {"value": {"type": "string", "enum": ["normal", "warning", "alarm"]}}, "additionalProperties": false, "required": ["value"]}, "enumCommands": []}, "rateAlarm": {"schema": {"type": "object", "properties": {"value": {"type": "string", "enum": ["normal", "warning", "alarm"]}}, "additionalProperties": false, "required": ["value"]}, "enumCommands": []}, "supportedAlarmStatuses": {"schema": {"type": "object", "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["normal", "warning", "alarm"]}}}, "additionalProperties": false, "required": ["value"]}, "enumCommands": []}}, "commands": {}, "i18n": {"tag": "en", "label": "Water Flow Alarm", "description": "Water flow duration, volume, and rate alarms", "attributes": {"volumeAlarm": {"label": "Volume", "description": "Flow volume alarm", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}", "i18n": {"value": {"normal": {"label": "Normal"}, "warning": {"label": "Warning"}, "alarm": {"label": "Alarm!"}}}}, "durationAlarm": {"label": "Duration", "description": "Flow duration alarm", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}", "i18n": {"value": {"normal": {"label": "Normal"}, "warning": {"label": "Warning"}, "alarm": {"label": "Alarm!"}}}}, "rateAlarm": {"label": "Rate", "description": "Flow rate alarm", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}", "i18n": {"value": {"normal": {"label": "Normal"}, "warning": {"label": "Warning"}, "alarm": {"label": "Alarm!"}}}}, "supportedAlarmStatuses": {"label": "Supported Alarm Statuses", "description": "List of alarm statuses supported by a specific device", "displayTemplate": "{{attribute}} of {{device.label}} was updated", "i18n": {}}}, "commands": {}}}, {"name": "Washer Operating State", "status": "live", "attributes": {"machineState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}}, "required": ["value"]}, "values": ["pause", "run", "stop"], "setter": "setMachineState"}, "supportedMachineStates": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}}}}}, "washerJobState": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["airWash", "aIRinse", "aISpin", "aIWash", "cooling", "delayWash", "drying", "finish", "none", "preWash", "rinse", "spin", "wash", "weightSensing", "wrinklePrevent", "freezeProtection"]}}, "required": ["value"]}, "values": ["airWash", "aIRinse", "aISpin", "aIWash", "cooling", "delayWash", "drying", "finish", "none", "preWash", "rinse", "spin", "wash", "weightSensing", "wrinklePrevent", "freezeProtection"]}, "completionTime": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "required": ["value"]}}}, "commands": {"setMachineState": {"arguments": [{"name": "state", "schema": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}, "optional": false}], "name": "setMachineState"}}, "id": "washerOperatingState", "version": 1, "i18n": {"description": "Allows for the control of the washer operational state.", "attributes": {"machineState": {"description": "Current status of the washer", "i18n": {"value": {"pause": {"description": "The washer is in \"pause\" mode", "label": "pause"}, "run": {"description": "The washer is in \"run\" mode", "label": "run"}, "stop": {"description": "The washer is in \"stop\" mode", "label": "stop"}}}, "label": "machine state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedMachineStates": {"description": "The states supported by the washer machine", "label": "supported machine states", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "washerJobState": {"description": "The job states supported by the washer", "i18n": {"value": {"airWash": {"description": "The washer job is in \"airWash\" mode", "label": "airWash"}, "aIRinse": {"description": "The washer job is in \"aIRinse\" mode", "label": "aIRinse"}, "aISpin": {"description": "The washer job is in \"aISpin\" mode", "label": "aISpin"}, "aIWash": {"description": "The washer job is in \"aIWash\" mode", "label": "aIWash"}, "cooling": {"description": "The washer job is in \"cooling\" mode", "label": "cooling"}, "delayWash": {"description": "The washer job is in \"delayWash\" mode", "label": "delayWash"}, "drying": {"description": "The washer job is in \"drying\" mode", "label": "drying"}, "finish": {"description": "The washer job is in \"finish\" mode", "label": "finish"}, "none": {"description": "The washer job is in \"none\" mode", "label": "none"}, "preWash": {"description": "The washer job is in \"preWash\" mode", "label": "preWash"}, "rinse": {"description": "The washer job is in \"rinse\" mode", "label": "rinse"}, "spin": {"description": "The washer job is in \"spin\" mode", "label": "spin"}, "wash": {"description": "The washer job is in \"wash\" mode", "label": "wash"}, "weightSensing": {"description": "The washer job is in \"weightSensing\" mode", "label": "weightSensing"}, "wrinklePrevent": {"description": "The washer job is in \"wrinklePrevent\" mode", "label": "wrinklePrevent"}, "freezeProtection": {"description": "The washer job is in \"freezeProtection\" mode", "label": "freezeProtection"}}}, "label": "washer job state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "completionTime": {"description": "The completion time for the washer job", "label": "completion time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setMachineState": {"description": "Set the washer machine state", "arguments": {"state": {"description": "Set the washer machine state to \"pause\", \"run\", or \"stop\" state"}}}}}}, {"name": "Washer Operational State", "status": "deprecated", "attributes": {"machineState": {"schema": {"type": "object", "properties": {"value": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}}, "required": ["value"], "additionalProperties": false}, "values": ["pause", "run", "stop"], "setter": "setMachineState"}, "supportedMachineStates": {"schema": {"type": "object", "properties": {"value": {"type": "array", "items": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}}}, "additionalProperties": false}}, "washerJobState": {"schema": {"type": "object", "properties": {"value": {"type": "string", "enum": ["airWash", "cooling", "delayWash", "drying", "finish", "none", "preWash", "rinse", "spin", "wash", "weightSensing", "wrinklePrevent"]}}, "additionalProperties": false, "required": ["value"]}, "values": ["airWash", "cooling", "delayWash", "drying", "finish", "none", "preWash", "rinse", "spin", "wash", "weightSensing", "wrinklePrevent"]}, "completionTime": {"schema": {"type": "object", "properties": {"value": {"title": "Iso8601Date", "type": "string", "pattern": "^(?:[1-9]\\d{3}-?(?:(?:0[1-9]|1[0-2])-?(?:0[1-9]|1\\d|2[0-8])|(?:0[13-9]|1[0-2])-?(?:29|30)|(?:0[13578]|1[02])-?31)|(?:[1-9]\\d(?:0[48]|[2468][048]|[13579][26])|(?:[2468][048]|[13579][26])00)-?02-?29)T(?:[01]\\d|2[0-3]):?[0-5]\\d:?[0-5]\\d(?:\\.\\d{3})?(?:Z|[+-][01]\\d(?::?[0-5]\\d)?)$"}}, "additionalProperties": false, "required": ["value"]}}}, "commands": {"setMachineState": {"arguments": [{"name": "state", "schema": {"title": "MachineState", "type": "string", "enum": ["pause", "run", "stop"]}, "optional": false}], "name": "setMachineState"}}, "id": "washerOperationalState", "version": 1, "i18n": {"description": "Allows for the control of the washer operational state.", "attributes": {"machineState": {"description": "Current status of the washer", "i18n": {"value": {"pause": {"description": "The washer is in \"pause\" mode", "label": "pause"}, "run": {"description": "The washer is in \"run\" mode", "label": "run"}, "stop": {"description": "The washer is in \"stop\" mode", "label": "stop"}}}, "label": "machine state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "supportedMachineStates": {"description": "The states supported by the washer machine", "label": "supported machine states", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "washerJobState": {"description": "The job states supported by the washer", "i18n": {"value": {"airWash": {"description": "The washer job is in \"airWash\" mode", "label": "airWash"}, "cooling": {"description": "The washer job is in \"cooling\" mode", "label": "cooling"}, "delayWash": {"description": "The washer job is in \"delayWash\" mode", "label": "delayWash"}, "drying": {"description": "The washer job is in \"drying\" mode", "label": "drying"}, "finish": {"description": "The washer job is in \"finish\" mode", "label": "finish"}, "none": {"description": "The washer job is in \"none\" mode", "label": "none"}, "preWash": {"description": "The washer job is in \"preWash\" mode", "label": "preWash"}, "rinse": {"description": "The washer job is in \"rinse\" mode", "label": "rinse"}, "spin": {"description": "The washer job is in \"spin\" mode", "label": "spin"}, "wash": {"description": "The washer job is in \"wash\" mode", "label": "wash"}, "weightSensing": {"description": "The washer job is in \"weightSensing\" mode", "label": "weightSensing"}, "wrinklePrevent": {"description": "The washer job is in \"wrinklePrevent\" mode", "label": "wrinklePrevent"}}}, "label": "washer job state", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "completionTime": {"description": "The completion time for the washer job", "label": "completion time", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setMachineState": {"description": "Set the washer machine state", "arguments": {"state": {"description": "Set the washer machine state to \"pause\", \"run\", or \"stop\" state"}}}}}}, {"name": "Water Meter", "id": "waterMeter", "version": 1, "status": "proposed", "ephemeral": false, "attributes": {"lastHour": {"schema": {"type": "object", "properties": {"value": {"type": "number", "minimum": 0}, "unit": {"type": "string", "enum": ["gal", "L"], "default": "gal"}}, "additionalProperties": false, "required": ["value"]}, "enumCommands": []}, "lastTwentyFourHours": {"schema": {"type": "object", "properties": {"value": {"type": "number", "minimum": 0}, "unit": {"type": "string", "enum": ["gal", "L"], "default": "gal"}}, "additionalProperties": false, "required": ["value"]}, "enumCommands": []}, "lastSevenDays": {"schema": {"type": "object", "properties": {"value": {"type": "number", "minimum": 0}, "unit": {"type": "string", "enum": ["gal", "L"], "default": "gal"}}, "additionalProperties": false, "required": ["value"]}, "enumCommands": []}}, "commands": {}, "i18n": {"tag": "en", "label": "Water Meter", "description": "Get the water usage for hour, day, and week time-periods", "attributes": {"lastHour": {"label": "Last Hour", "description": "Water used in the last hour", "displayTemplate": "Water used in the {{attribute}} by {{device.label}} is {{value}} {{unit}}", "i18n": {}}, "lastTwentyFourHours": {"label": "Last 24 Hours", "description": "Water used in the last 24 hours", "displayTemplate": "Water used in the {{attribute}} by {{device.label}} is {{value}} {{unit}}", "i18n": {}}, "lastSevenDays": {"label": "Last 7 Days", "description": "Water used in the last 7 days", "displayTemplate": "Water used in the {{attribute}} by {{device.label}} is {{value}} {{unit}}", "i18n": {}}}, "commands": {}}}, {"name": "Water Pressure Measurement", "id": "waterPressureMeasurement", "version": 1, "status": "proposed", "ephemeral": false, "attributes": {"pressure": {"schema": {"type": "object", "properties": {"value": {"type": "number", "minimum": 0}, "unit": {"type": "string", "enum": ["psi", "kPa", "bar"], "default": "psi"}}, "additionalProperties": false, "required": ["value"]}, "enumCommands": []}, "pressureAlarm": {"schema": {"type": "object", "properties": {"value": {"type": "string", "enum": ["normal", "low", "high"]}}, "additionalProperties": false, "required": ["value"]}}}, "commands": {}, "i18n": {"tag": "en", "label": "Water Pressure", "description": "Get the water pressure and high/low pressure alarm status", "attributes": {"pressure": {"label": "Pressure", "description": "Water pressure", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}} {{unit}}", "i18n": {}}, "pressureAlarm": {"label": "Pressure Alarm", "description": "Water pressure alarm status", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}", "i18n": {"value": {"normal": {"label": "Normal"}, "low": {"label": "Low Pressure"}, "high": {"label": "High Pressure"}}}}}, "commands": {}}}, {"name": "Water Sensor", "status": "live", "attributes": {"water": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "MoistureState", "type": "string", "enum": ["dry", "wet"]}}, "required": ["value"]}, "values": ["dry", "wet"]}}, "commands": {}, "id": "waterSensor", "version": 1, "i18n": {"attributes": {"water": {"description": "A string representation of whether the water sensor detected water", "i18n": {"value": {"dry": {"description": "Currently, water is undetected", "label": "Dry"}, "wet": {"description": "Water is detected", "label": "Wet"}}}, "label": "water", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}, "description": "Get the status off of a water sensor device"}}, {"name": "webrtc", "status": "live", "attributes": {"supportedFeatures": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "object", "additionalProperties": true, "properties": {"bundle": {"type": "boolean"}, "order": {"type": "string"}, "audio": {"type": "string"}, "video": {"type": "string"}}}}, "required": ["value"]}}, "audioOnly": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "boolean"}}, "required": ["value"]}}, "sdpAnswer": {"schema": {"type": "object", "properties": {"value": {"type": "object", "additionalProperties": false, "properties": {"id": {"type": "string"}, "sdp": {"type": "string"}, "turn_url": {"type": "string"}, "turn_user": {"type": "string"}, "turn_pwd": {"type": "string"}}, "required": ["id", "sdp"]}}, "additionalProperties": false, "required": ["value"]}}, "talkback": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "boolean"}}, "required": ["value"]}}, "stunUrl": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "URL", "type": "string", "pattern": "^(stun?):((?:[a-zA-Z0-9.-]|%[0-9A-F]{2}){3,})(?::(\\d+))?((?:\\/(?:[a-zA-Z0-9-._~!$&'()*+,;=:@]|%[0-9A-F]{2})*)*)(?:\\?((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?(?:#((?:[a-zA-Z0-9-._~!$&'()*+,;=:\\/?@]|%[0-9A-F]{2})*))?$"}}, "required": ["value"]}}}, "commands": {"sdpOffer": {"arguments": [{"name": "id", "schema": {"type": "string"}, "optional": false}, {"name": "sdp", "schema": {"type": "string"}, "optional": false}], "name": "sdpOffer"}, "end": {"arguments": [{"name": "id", "schema": {"type": "string"}, "optional": false}], "name": "end"}, "startTalkback": {"arguments": [{"name": "id", "schema": {"type": "string"}, "optional": false}], "name": "startTalkback"}, "stopTalkback": {"arguments": [{"name": "id", "schema": {"type": "string"}, "optional": false}], "name": "stopTalkback"}}, "id": "webrtc", "version": 1, "i18n": {"description": "Allows for WebRTC signaling to happen", "attributes": {"supportedFeatures": {"description": "SDP Offer options", "label": "SDP offer supported features", "displayTemplate": "{{device.label}} {{attribute}} was updated"}, "audioOnly": {"description": "The stream is audio only", "label": "audio only", "displayTemplate": "{{device.label}} {{attribute}} was updated"}, "sdpAnswer": {"description": "Signaling info for a video source", "label": "live stream", "displayTemplate": "{{device.label}} {{attribute}} was updated"}, "talkback": {"description": "Whether audio is streaming from client to video source", "label": "Talk", "displayTemplate": "{{device.label}} {{attribute}} was updated"}, "stunUrl": {"description": "URL used for STUN connection from the client", "label": "STUN URL", "displayTemplate": "{{device.label}} {{attribute}} was updated"}}, "commands": {"sdpOffer": {"description": "Start the live stream"}, "end": {"description": "Stop the live stream"}, "startTalkback": {"description": "Start the talkback"}, "stopTalkback": {"description": "Stop the talkback"}}}}, {"name": "Wifi Mesh Router", "status": "proposed", "attributes": {"wifiNetworkName": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "required": ["value"]}}, "wifiGuestNetworkName": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}, "required": ["value"]}}, "connectedRouterCount": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}, "required": ["value"]}}, "disconnectedRouterCount": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}, "required": ["value"]}}, "connectedDeviceCount": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveInteger", "type": "integer", "minimum": 0}}, "required": ["value"]}}, "wifiNetworkStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "WifiState", "type": "string", "enum": ["enabled", "disabled", "not configured"]}}, "required": ["value"]}, "values": ["enabled", "disabled", "not configured"], "enumCommands": [{"command": "enableWifiNetwork", "value": "enabled"}, {"command": "disableWifiNetwork", "value": "disabled"}]}, "wifiGuestNetworkStatus": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "WifiState", "type": "string", "enum": ["enabled", "disabled", "not configured"]}}, "required": ["value"]}, "values": ["enabled", "disabled", "not configured"], "enumCommands": [{"command": "enableWifiGuestNetwork", "value": "enabled"}, {"command": "disableWifiGuestNetwork", "value": "disabled"}]}}, "commands": {"enableWifiNetwork": {"arguments": [], "name": "enableWifiNetwork"}, "disableWifiNetwork": {"arguments": [], "name": "disableWifiNetwork"}, "enableWifiGuestNetwork": {"arguments": [], "name": "enableWifiGuestNetwork"}, "disableWifiGuestNetwork": {"arguments": [], "name": "disableWifiGuestNetwork"}}, "id": "wifiMeshRouter", "version": 1, "i18n": {"commands": {"enableWifiNetwork": {"description": "Enable the primary WiFi network"}, "disableWifiGuestNetwork": {"description": "Disable the guest WiFi network"}, "disableWifiNetwork": {"description": "Disable the primary WiFi network"}, "enableWifiGuestNetwork": {"description": "Enable the guest WiFi network"}}, "attributes": {"disconnectedRouterCount": {"description": "A numeric representation of the quantity of disconnected routers in the mesh network", "label": "disconnected router count", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "connectedRouterCount": {"description": "A numeric representation of the quantity of connected routers in the mesh network", "label": "connected router count", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "wifiGuestNetworkStatus": {"description": "The current state of the guest network.  Possible values are \"enabled\", \"disabled\", and \"not configured\"", "label": "wifi guest network status", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "wifiGuestNetworkName": {"description": "A string representation of the guest WiFi network name", "label": "wifi guest network name", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "wifiNetworkStatus": {"description": "The current state of the primary network.  Possible values are \"enabled\", \"disabled\", and \"not configured\"", "label": "wifi network status", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "wifiNetworkName": {"description": "A string representation of the primary WiFi network name", "label": "wifi network name", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}, "connectedDeviceCount": {"description": "A numeric representation of the quantity of connected WiFi devices in the network", "label": "connected device count", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "description": "Allows for basic control of a mesh router"}}, {"name": "Wind Speed", "status": "proposed", "attributes": {"windspeed": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "PositiveNumber", "type": "number", "minimum": 0}, "unit": {"type": "string", "enum": ["m/s"], "default": "m/s"}}, "required": ["value"]}}}, "commands": {}, "id": "windSpeed", "version": 1, "i18n": {"description": "Get the value of wind speed from a weather sensor or anemometer", "attributes": {"windspeed": {"description": "A number representing the current measured wind speed", "label": "wind speed", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}} m/s"}}}}, {"name": "Window Shade Level", "status": "live", "attributes": {"shadeLevel": {"schema": {"title": "IntegerPercent", "type": "object", "additionalProperties": false, "properties": {"value": {"type": "integer", "minimum": 0, "maximum": 100}, "unit": {"type": "string", "enum": ["%"], "default": "%"}}, "required": ["value"]}, "setter": "setShadeLevel"}}, "commands": {"setShadeLevel": {"arguments": [{"name": "shadeLevel", "schema": {"type": "integer", "minimum": 0, "maximum": 100}, "optional": false}], "name": "setShadeLevel"}}, "id": "windowShadeLevel", "version": 1, "i18n": {"description": "Allows for the control of the level of a window shade.", "attributes": {"shadeLevel": {"description": "A number that represents the current level as a function of being open, ``0-100`` in percent; 0 representing completely closed, and 100 representing completely open.", "label": "shade level", "displayTemplate": "{{attribute}} of {{device.label}} is {{value}}%"}}, "commands": {"setShadeLevel": {"arguments": {"level": {"description": "The level value as a function of being open, ``0-100`` in percent; 0 is equivalent to completely closed and 100 is equivalent to completely open"}}, "description": "Set the shade level to the given value."}}}}, {"name": "Window Shade Preset", "status": "live", "attributes": {}, "commands": {"presetPosition": {"arguments": [], "name": "presetPosition"}}, "id": "windowShadePreset", "version": 1, "i18n": {"description": "Allows for the control of the preset of a window shade.", "commands": {"presetPosition": {"description": "Open window shade to a preset position"}}}}, {"name": "Window Shade", "status": "live", "attributes": {"windowShade": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "OpenableState", "type": "string", "enum": ["closed", "closing", "open", "opening", "partially open", "unknown"]}}, "required": ["value"]}, "values": ["closed", "closing", "open", "opening", "partially open", "unknown"], "enumCommands": [{"command": "close", "value": "closed"}, {"command": "open", "value": "open"}], "actedOnBy": ["open", "close", "pause"]}, "supportedWindowShadeCommands": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "array", "items": {"type": "string", "enum": ["open", "close", "pause"]}}}}}}, "commands": {"close": {"arguments": [], "name": "close"}, "open": {"arguments": [], "name": "open"}, "pause": {"arguments": [], "name": "pause"}}, "id": "windowShade", "version": 1, "i18n": {"description": "Allows for the control of the window shade.", "attributes": {"windowShade": {"i18n": {"value": {"closed": {"label": "closed"}, "closing": {"label": "closing\u2026"}, "opening": {"label": "opening\u2026"}, "open": {"label": "open"}, "unknown": {"label": "unknown"}, "partially open": {"label": "partially open"}}}, "label": "window shade", "displayTemplate": "{{device.label}} {{attribute}}: {{value}}"}, "supportedWindowShadeCommands": {"description": "Window shade commands supported by this instance of Window Shade", "i18n": {"value": {"open": {"description": "The window shade supports the open command", "label": "open"}, "close": {"description": "The window shade supports the close command", "label": "close"}, "pause": {"description": "The window shade supports the pause command", "label": "pause"}}}, "label": "supported window shade commands", "displayTemplate": "{{device.label}} {{attribute}}: {{value}}"}}, "commands": {"close": {"description": "Close the window shade"}, "open": {"description": "Open the window shade"}, "pause": {"description": "Pause opening or closing the window shade"}}}}, {"name": "Wireless Operating Mode", "status": "proposed", "attributes": {"wirelessOperatingMode": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"type": "string", "enum": ["whenNeeded", "alwaysOn"]}}, "required": ["value"]}, "values": ["whenNeeded", "alwaysOn"], "setter": "setWirelessOperatingMode"}}, "commands": {"setWirelessOperatingMode": {"arguments": [{"name": "wirelessOperatingMode", "schema": {"type": "string", "enum": ["whenNeeded", "alwaysOn"]}, "optional": false}], "name": "setWirelessOperatingMode"}}, "id": "wirelessOperatingMode", "version": 1, "i18n": {"description": "Allows for the control of the wireless operating mode of a device", "attributes": {"wirelessOperatingMode": {"i18n": {"value": {"alwaysOn": {"description": "the wireless mode of a device is always on", "label": "always on"}, "whenNeeded": {"description": "the wireless mode of a device is only on when needed", "label": "when needed"}}}, "description": "The current wireless operating mode", "label": "wireless operating mode", "displayTemplate": "{{device.label}} {{attribute}} was {{value}}"}}, "commands": {"setWirelessOperatingMode": {"description": "Set the wireless operating mode of a device"}}}}, {"name": "Zw Multichannel", "status": "live", "attributes": {"epEvent": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}, "epInfo": {"schema": {"type": "object", "additionalProperties": false, "properties": {"value": {"title": "String", "type": "string", "maxLength": 255}}}}}, "commands": {"enableEpEvents": {"arguments": [{"name": "enabledEndpoints", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "enableEpEvents"}, "epCmd": {"arguments": [{"name": "endpoint", "schema": {"title": "Number", "type": "number"}, "optional": false}, {"name": "commands", "schema": {"title": "String", "type": "string", "maxLength": 255}, "optional": false}], "name": "epCmd"}}, "id": "zwMultichannel", "version": 1, "i18n": {"description": "Allows for the control of the Zw Multichannel.", "commands": {"enableEpEvents": {"description": "Enable the endpoint Events", "arguments": {"enabledEndpoints": {"description": "The endpoints to be enabled"}}}, "epCmd": {"description": "The command for the endpoint", "arguments": {"endpoint": {"description": "The name of the endpoint"}, "commands": {"description": "The command to be sent to the endpoint"}}}}, "attributes": {"epEvent": {"description": "The event description at the endpoint", "label": "ep event", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}, "epInfo": {"description": "The endpoint information", "label": "ep info", "displayTemplate": "{{attribute}} of {{device.label}} is: {{value}}"}}}}], "autodocs": {"custom.error": "Error: This capability allows the device to report and set error conditions.\nAttributes:\n    error: It represents the current error status of the device.\n\nCommands:\n    setError: This command allows you to set an error condition on the device.\n        Args:\n            error: This argument is used to specify the error condition to be set on the device.", "custom.picturemode": "PictureMode: A capability that allows control over the picture mode settings of a device.\nAttributes:\n    pictureMode: Represents the current picture mode of the device.\n    supportedPictureModes: Lists all the picture modes supported by the device.\n    supportedPictureModesMap: Provides a map of all supported picture modes including their names and corresponding values.\nCommands:\n    setPictureMode: Changes the picture mode of the device.\n        Args:\n            mode: Specifies the picture mode to be set.", "custom.soundmode": "SoundMode: This capability allows the control and monitoring of the sound mode settings of a device.\nAttributes:\n    supportedSoundModesMap: Provides a map of the supported sound modes that the device can utilize.\n    soundMode: Indicates the current sound mode setting of the device.\n    supportedSoundModes: Lists all the sound modes that the device supports.\n\nCommands:\n    setSoundMode: Changes the device's sound mode to the specified setting.\n        Args:\n            mode: The sound mode setting to apply to the device.", "custom.accessibility": "Accessibility: This capability allows the device to manage and control accessibility settings.\nAttributes: \n  No defined attributes for this capability.\n\nCommands:\n    setAccessibility: This command sets the accessibility settings for the device.\n        Args:\n            menuName: Specifies the name of the accessibility menu to be set.\n            menuId: Indicates the identification number of the accessibility menu to be set.\n            option: Defines the specific accessibility option to be set within the menu.", "custom.launchapp": "launchApp: This capability facilitates the launching of a specific application on a device.\nAttributes:\n    No attributes in this capability.\nCommands:\n    launchApp: This command initiates the process of opening a specified application.\n        Args:\n            appId: This argument represents the unique identifier of the application that needs to be launched.\n            appName: This argument denotes the name of the application to be launched.", "custom.recording": "Recording: This capability pertains to devices capable of recording media, such as audio or video.\nAttributes:\n    None\n\nCommands:\n    recordStart: This command initiates the recording process.\n        Args:\n            None\n\n    recordStop: This command halts the recording process.\n        Args:\n            None", "custom.tvsearch": "tvSearch: This capability allows a SmartThings device, such as a smart TV, to perform searches.\n\nAttributes:\n   No specific attributes for this capability.\n\nCommands:\n    search: Initiates a search action on the device.\n        Args:\n            query: Represents the keyword or phrase to search for.\n            url: This could be a specific URL or online source where the device should perform the search.", "custom.disabledCapabilities": "Disabled Capabilities: This capability manages the functionalities of the device that are currently disabled.\nAttributes:\n    disabledCapabilities: Represents the features of the device that are not currently enabled or in use.\n\nCommands: \n    There are no specific commands associated with this capability.", "samsungvd.remoteControl": "Remote Control: This capability allows a device to interact and control other devices remotely.\nAttributes: \n    No specific attributes are documented for this capability.\n\nCommands:\n    send: This command is used to send control signals to the target device.\n        Args:\n            keyValue: This argument represents the specific control instruction or value to be sent.\n            keyState: This argument represents the state of the command being sent.", "samsungvd.ambient": "Ambient: This capability allows control and interaction with ambient devices.\nAttributes:\n    No attributes available for this capability.\n\nCommands:\n    setAmbientOn: This command enables the ambient functionality of the device.\n        Args:\n            No arguments available for this command.", "samsungvd.ambientContent": "Ambient Content: This capability allows the control and management of ambient content on a device. \n\nAttributes:\n    supportedAmbientApps: This attribute lists the apps that are supported for displaying ambient content on the device.\n\nCommands:\n    setAmbientContent: This command sets the ambient content to be displayed on the device.\n        Args:\n            id: This argument specifies the identifier of the ambient content to be displayed.", "samsungvd.ambient18": "Ambient18: This capability manages and controls ambient settings of a device.\nAttributes: \n    (No attributes available for this capability)\nCommands:\n    setAmbientOn: This command is used to turn on the ambient feature of the device.\n        Args:\n            (No arguments available for this command)", "samsungvd.mediaInputSource": "Media Input Source: This capability allows a device to manage and set different media input sources.\n\nAttributes:\n    supportedInputSourcesMap: This attribute represents a mapping of all supported media input sources by the device.\n    inputSource: This attribute indicates the currently active media input source on the device.\n\nCommands:\n    setInputSource: This command allows you to set a specific media input source on the device.\n        Args:\n            id: Represents the identifier of the media input source you wish to set on the device.", "samsungvd.firmwareVersion": "Firmware Version: This capability is related to managing and updating the firmware version of a SmartThings device.\nAttributes:\n    firmwareVersion: This attribute represents the current firmware version installed on the device.\nCommands:\n    setFirmwareVersion: This command is used to update or set the firmware version of the device.\n        Args:\n            version: This argument specifies the new firmware version to be set.", "samsungvd.supportsPowerOnByOcf": "Supports Power On By OCF: This capability indicates whether a device supports being powered on by the Open Connectivity Foundation (OCF) standard.\nAttributes:\n    supportsPowerOnByOcf: This attribute shows if the device supports power on operation by the OCF standard.\nCommands:\n    No specific commands available for this capability.", "sec.diagnosticsInformation": "Diagnostics Information: This capability provides detailed diagnostic information regarding the device.\n\nAttributes:\n    logType: Represents the type of log generated by the device\n    endpoint: Indicates the endpoint used by the device for communication\n    minVersion: Specifies the minimum version of software/firmware required by the device\n    signinPermission: Indicates the permission level required for signing into the device\n    setupId: Identifies the setup process or configuration used by the device\n    protocolType: Specifies the type of protocol used by the device for communication\n    tsId: Represents a unique identifier for the timestamp of the device\n    mnId: Represents a unique identifier for the manufacturer of the device\n    dumpType: Specifies the type of data dump generated by the device for diagnostic purposes\n\nCommands:\n    No specific commands are documented for this capability.", "custom.deviceReportStateConfiguration": "Device Report State Configuration: This capability allows users to configure how a device reports its state, including the frequency and whether it should be reported in real time.\nAttributes:\n    reportStateRealtimePeriod: This attribute represents the period for a device to report its state in real time.\n    reportStateRealtime: This attribute indicates whether the device is set to report its state in real time.\n    reportStatePeriod: This attribute represents the frequency at which the device reports its state.\nCommands:\n    setReportStatePeriod: This command sets the frequency at which the device reports its state.\n        Args:\n            value: This argument sets the value for the report state period.\n    setReportStateRealtime: This command enables or disables real-time state reporting for the device.\n        Args:\n            value: This argument sets the value for the report state in real time (true or false).\n    setReportStateRealtimePeriod: This command sets the period for a device to report its state in real time.\n        Args:\n            value: This argument sets the value for the real-time state report period.", "custom.energyType": "Energy Type: A capability that allows the monitoring and control of a device's energy consumption and saving features.\nAttributes:\n    energySavingSupport: Indicates whether the device supports energy saving functionality.\n    drMaxDuration: Represents the maximum duration of demand response.\n    energyType: Specifies the type of energy used by the device.\n    energySavingLevel: Specifies the current level of energy saving on the device.\n    supportedEnergySavingLevels: Lists the energy saving levels that the device supports.\n    energySavingOperation: Specifies the current operation of the energy saving feature.\n    energySavingOperationSupport: Indicates whether the device supports energy saving operations.\n\nCommands:\n    setEnergySavingLevel: A command that sets the energy saving level of the device.\n        Args:\n            energySavingLevel: The level of energy saving to set on the device.", "custom.fridgeMode": "setFridgeMode\n\tArgs:\n\t\tmode: Specifies the mode to set the fridge in\n\nFridge Mode: This capability enables control over the operating mode of a smart refrigerator.\nAttributes:\n    fridgeModeValue: Indicates the current operating mode of the fridge.\n    fridgeMode: Represents the current mode the fridge is operating in (e.g., normal, vacation, power save).\nCommands:\n    setFridgeMode: Changes the operating mode of the fridge.\n        Args:\n            mode: The desired operating mode for the fridge.", "custom.disabledComponents": "\"Disabled Components\": This capability relates to managing and identifying components of a device that are currently disabled.\nAttributes:\n    disabledComponents: This attribute lists all the components of the device that are currently disabled.\n\nCommands:\n    No commands available for this capability.", "custom.waterFilter": "Water Filter: This capability allows for the monitoring and control of a water filtration system.\nAttributes:\n    waterFilterUsageStep: Indicates the progression or steps in the usage of the water filter.\n    waterFilterResetType: Specifies the type of reset available for the water filter.\n    waterFilterCapacity: Represents the total filtration capacity of the water filter.\n    waterFilterLastResetDate: Logs the most recent date when the water filter was reset.\n    waterFilterUsage: Tracks the current usage status of the water filter.\n    waterFilterStatus: Provides the overall operational status of the water filter.\nCommands:\n    resetWaterFilter: This command allows for the reset of the water filter.\n        Args:\n            No arguments for this command.", "samsungce.softwareUpdate": "Software Update: This capability allows a device to manage and perform software updates.\nAttributes:\n    targetModule: The intended module for the software update.\n    otnDUID: Identifier for over-the-air updates.\n    lastUpdatedDate: The date when the software was last updated.\n    availableModules: List of modules that are available for update.\n    newVersionAvailable: Indicates if a new version of the software is available.\n    operatingState: Represents the current state of the software update process.\n    progress: Indicates the progress of the ongoing software update.\n\nCommands:\n    agreeUpdate: Command to agree and proceed with the update for a specified module.\n        Args:\n            module: The module that the update should be applied to.\n    disagreeUpdate: Command to disagree and halt the update for a specified module.\n        Args:\n            module: The module that the update should not be applied to.", "samsungce.deviceIdentification": "Device Identification: This capability allows the identification of a device by providing attributes such as model name, serial number and other identifying details.\n\nAttributes:\n    micomAssayCode: The code pertaining to the device's internal assay, often used for testing or calibration purposes.\n    modelName: The name of the particular model of the device.\n    serialNumber: The unique serial number assigned to the device for identification.\n    serialNumberExtra: Any additional serial numbers associated with the device.\n    modelClassificationCode: A code that categorizes the model of the device.\n    description: A brief description of the device.\n    binaryId: A binary identifier for the device, often used in digital communications or data storage.\n\nCommands:\n    This capability does not have any associated commands as it's primarily used for identification and classification purposes.", "samsungce.driverVersion": "Driver Version: This capability pertains to the version number of a device driver.\nAttributes:\n    versionNumber: Represents the version number of the device driver.\nCommands:\n    No commands are available for this capability.", "samsungce.powerCool": "Power Cool: This capability is related to cooling devices that have a power cool function, which allows for rapid cooling.\nAttributes:\n    activated: Indicates whether the power cool function is currently active or not.\nCommands:\n    activate: Activates the power cool function.\n        Args: None\n    deactivate: Deactivates the power cool function.\n        Args: None", "samsungce.powerFreeze": "Power Freeze: This capability allows devices to enter a power freeze mode, often used in appliances like refrigerators to rapidly lower temperature.\nAttributes:\n    activated: Indicates if the power freeze mode is currently active or not.\n\nCommands:\n    activate: Command to activate the power freeze mode. No arguments required.\n    deactivate: Command to deactivate the power freeze mode. No arguments required.", "samsungce.viewInside": "View Inside: This capability allows a device to view the contents within a certain area or container and track the last time it was updated.\nAttributes:\n    contents: Describes the current contents inside the specified area or container.\n    lastUpdatedTime: Keeps track of the last time the contents were updated or changed.\n\nCommands:\n    refreshAll: This command refreshes the entire contents of the specified area or container.\n        Args:\n            None\n    refresh: This command refreshes a specific file or item within the specified area or container.\n        Args:\n            fileId: Specifies the identification of the file or item to be refreshed.", "samsungce.runestoneHomeContext": "Runestone Home Context: Capability to manage and modify the home environment context within the Runestone system.\nAttributes:\n    supportedContexts: Represents the available contexts that can be set for the home environment.\n\nCommands:\n    setContextSnapshot: Sets a snapshot of the current context for reference or returning to previous state.\n        Args:\n            contextSnapshot: A snapshot of the current context to be stored.\n    setContext: Updates the current context of the home environment.\n        Args:\n            context: The new context to be set for the home environment.\n    setRecentlyUsedApps: Updates the list of recently used apps in the context.\n        Args:\n            recentlyUsedApps: A list of apps that have been recently used in the current context.", "sec.wifiConfiguration": "configureWifi: Allows the device to set up and modify its wifi connection\n    Args:\n        ssid: Network name to be connected\n        password: Password for the specified network\n        securityType: Type of network security (WEP, WPA, WPA2, etc.)\n        frequency: Desired frequency band (2.4GHz or 5GHz)\n        \nCapability: Wifi configuration: This capability allows a device to manage its WiFi settings such as connecting to a network, selecting a frequency band, and configuring security settings. \n\nAttributes:\n    autoReconnection: Indicates whether the device is set to automatically reconnect to the wifi network when connection is lost.\n    minVersion: Specifies the minimum version of the wifi protocol that is supported by the device.\n    supportedWiFiFreq: Lists the frequency bands (like 2.4GHz or 5GHz) that the device can operate in.\n    supportedAuthType: Lists the types of network security (WEP, WPA, WPA2, etc.) that are supported by the device.\n    protocolType: Indicates the type of WiFi protocol (like 802.11n, 802.11ac, etc.) being used by the device.\n\nCommands:\n    configureWifi: Allows the device to set up and modify its wifi connection\n        Args:\n            ssid: The name of the wifi network to connect to.\n            password: The password of the wifi network to connect to.\n            securityType: The type of security used by the wifi network to connect to.\n            frequency: The frequency band of the wifi network to connect to.", "custom.thermostatSetpointControl": "Thermostat Setpoint Control: This capability allows for the control of thermostat setpoints, including setting minimum and maximum temperature limits. \n\nAttributes: \n    minimumSetpoint: This attribute sets the lowest temperature that the thermostat can be set to.\n    maximumSetpoint: This attribute sets the highest temperature that the thermostat can be set to.\n\nCommands:\n    raiseSetpoint: This command increases the current thermostat setpoint.\n        Args:\n            No arguments required for this command. It simply increases the current setpoint.\n\n    lowerSetpoint: This command decreases the current thermostat setpoint.\n        Args:\n            No arguments required for this command. It simply decreases the current setpoint.", "samsungce.weightMeasurement": "Weight Measurement: This capability allows devices to measure and report weight.\nAttributes:\n    weight: Represents the weight measured by the device.\nCommands:\n    No specific commands associated with this capability.", "samsungce.weightMeasurementCalibration": "Weight Measurement Calibration: Capability to calibrate devices that measure weight\nAttributes: \n    No specific attributes associated with this capability.\n\nCommands:\n    zeroCalibrate: Command to reset or calibrate the weight measurement to zero.\n        Args:\n            No specific arguments associated with this command.", "samsungce.connectionState": "Connection State: A capability that reflects the current connection status of a device.\nAttributes:\n    connectionState: Indicates the current connection status of a device (e.g., connected, disconnected).\nCommands:\n    No commands are associated with this capability.", "samsungce.scaleSettings": "Scale Settings: This capability allows for the management of scale settings in a given device.\nAttributes:\n    enabled: This attribute indicates whether the scale settings for the device are currently enabled or not.\nCommands: \n    No commands are available for this capability.", "samsungce.fridgePantryInfo": "Fridge Pantry Info: This capability provides information related to the pantry in a smart fridge.\nAttributes:\n    name: The name of the pantry. It could be a customizable descriptor or a unique identifier for the pantry.\nCommands:\n    No commands available for this capability.", "samsungce.fridgePantryMode": "Fridge Pantry Mode: This capability controls and monitors the pantry mode of a smart fridge.\nAttributes:\n    mode: Indicates the current pantry mode of the fridge.\n    supportedModes: Lists the supported pantry modes that the fridge can operate in.\nCommands:\n    setMode: Sets the pantry mode of the fridge to a specified mode.\n        Args:\n            mode: The mode to set the fridge's pantry to.", "samsungce.meatAging": "Meat Aging: This capability allows the control and monitoring of a device or appliance used for aging meat.\n\nAttributes:\n    zoneInfo: Provides information about different zones in the device where meat aging can be performed.\n    supportedMeatTypes: Lists the types of meat that the device can support for aging.\n    supportedAgingMethods: Lists the different aging methods the device is capable of.\n    status: Indicates the current status of the meat aging process.\n\nCommands:\n    addAging: Initiates a new meat aging process.\n        Args:\n            agingOption: Specifies the options for the aging process, such as meat type, aging method, and duration.\n    cancelAging: Cancels an ongoing meat aging process.\n        Args:\n            id: Identifies the specific aging process to be cancelled.\n    updateAging: Updates the parameters of an ongoing meat aging process.\n        Args:\n            id: Identifies the specific aging process to be updated.\n            agingOption: Specifies the new options for the aging process, such as meat type, aging method, and duration.", "samsungce.foodDefrost": "Food Defrost: This capability allows for the control and monitoring of a device's food defrosting function, often found in microwave ovens or refrigerators with advanced features.\nAttributes:\n    supportedOptions: This attribute lists the options available for defrosting different types of food.\n    foodType: This attribute indicates the type of food that is being defrosted.\n    weight: This attribute represents the weight of the food item that is being defrosted.\n    operationTime: This attribute shows the total time required for the defrosting operation.\n    remainingTime: This attribute displays the remaining time for the defrosting operation to be completed.\nCommands:\n    setDefrost: This command sets the defrosting parameters for the device.\n        Args:\n            foodType: This argument specifies the type of food to be defrosted.\n            weight: This argument sets the weight of the food item to be defrosted.", "custom.dishwasherOperatingProgress": "Dishwasher Operating Progress: This capability provides information about the operational progress of a smart dishwasher.\n\nAttributes:\n    dishwasherOperatingProgress: Indicates the current progress of the dishwasher's operation cycle.\n\nCommands:\n    No specific commands associated with this capability.", "custom.dishwasherOperatingPercentage": "setDishwasherOperatingPercentage\n\nDishwasher Operating Percentage: This capability allows the monitoring and control of a dishwasher's operating percentage.\n\nAttributes:\n    dishwasherOperatingPercentage: Represents the current operating percentage of the dishwasher.\n\nCommands:\n    setDishwasherOperatingPercentage: Sets the dishwasher's operating percentage to a specific value.\n        Args:\n            percentage: The desired operating percentage for the dishwasher.", "custom.dishwasherDelayStartTime": "\"Dishwasher Delay Start Time\": This capability allows setting or checking the delay start time for a dishwasher.\nAttributes:\n    dishwasherDelayStartTime: The delay start time for a dishwasher.\nCommands:\n    setDishwasherDelayStartTime: Sets the delay start time for a dishwasher.\n        Args:\n            dishwasherDelayStartTime: The new delay start time to set for the dishwasher.", "custom.supportedOptions": "supportedOptions: Allows for the identification and utilization of supported options on a device.\nAttributes:\n    referenceTable: Stores a reference table of available options.\n    supportedCourses: Lists courses or paths of action supported by the device.\nCommands:\n    No commands available for this capability.", "samsungce.dishwasherJobState": "startDishwasherJob\nstopDishwasherJob\npauseDishwasherJob\nresumeDishwasherJob\n\nDishwasher Job State: Manages and tracks the operational status of a dishwasher.\nAttributes:\n    scheduledJobs: Provides information about the dishwasher's scheduled jobs.\n    dishwasherJobState: Reports the current operational state of the dishwasher.\n\nCommands:\n    startDishwasherJob: Initiates a dishwasher job.\n    stopDishwasherJob: Halts the current dishwasher job.\n    pauseDishwasherJob: Temporarily pauses the current dishwasher job.\n    resumeDishwasherJob: Resumes a paused dishwasher job.", "samsungce.dishwasherWashingCourse": "Dishwasher Washing Course: This capability allows control and monitoring of the washing courses in a dishwasher.\n\nAttributes:\n    customCourseCandidates: This attribute likely represents the custom washing courses that the user can set on the dishwasher.\n    washingCourse: This attribute represents the current washing course that the dishwasher is running.\n    supportedCourses: This attribute refers to the list of washing courses that the dishwasher supports.\n\nCommands:\n    setWashingCourse: This command sets the dishwasher to a specified washing course.\n        Args:\n            course: The name of the washing course to set.\n    setCustomCourse: This command allows the user to create and set a custom washing course.\n        Args:\n            course: The name of the custom washing course to set.\n    startWashingCourse: This command starts the specified washing course on the dishwasher.\n        Args:\n            course: The name of the washing course to start.\n    startWashingCourseWithOptions: This command starts a specified washing course with additional options.\n        Args:\n            course: The name of the washing course to start.\n            options: Additional options to apply to the washing course.", "samsungce.dishwasherWashingCourseDetails": "setPredefinedCourse\ngetWaterUsage\ngetEnergyUsage\nArgs: \n\nCapability: Dishwasher Washing Course Details: This capability enables the monitoring and control of specific washing course details for a dishwasher, such as predefined courses, maximum water usage, and maximum energy usage.\nAttributes:\n    predefinedCourses: Specifies the predefined washing courses available in the dishwasher.\n    waterUsageMax: Indicates the maximum amount of water usage for the dishwasher.\n    energyUsageMax: Represents the maximum energy consumption for the dishwasher.\n\nCommands:\n    setPredefinedCourse: Sets a specific predefined washing course.\n        Args:\n            courseName: The name of the predefined washing course to be set.\n    getWaterUsage: Retrieves the maximum water usage of the dishwasher.\n        Args:\n            None\n    getEnergyUsage: Retrieves the maximum energy usage of the dishwasher.\n        Args:\n            None", "samsungce.dishwasherOperation": "Dishwasher Operation: This capability allows control and monitoring of a dishwasher's operation\nAttributes:\n    supportedOperatingState: The supported operating states of the dishwasher\n    operatingState: The current operating state of the dishwasher\n    reservable: Indicates whether the dishwasher can be reserved for use at a later time\n    progressPercentage: The percentage of the current operation that has been completed\n    remainingTimeStr: The remaining time for the current operation in string format\n    operationTime: The time of operation\n    remainingTime: The remaining time for the current operation in minutes\n    timeLeftToStart: The time left before the dishwasher starts its operation\nCommands:\n    resume: Command to resume the dishwasher operation\n    cancel: Command to cancel the current dishwasher operation\n        Args:\n            drain: If true, the dishwasher will drain any remaining water\n    setOperatingState: Command to set the operating state of the dishwasher\n        Args:\n            operatingState: The desired operating state to set\n    start: Command to start the dishwasher\n        Args:\n            option: The option for the wash cycle to start\n    startLater: Command to start the dishwasher at a later time\n        Args:\n            delay: The time to delay the start of the dishwasher operation\n    pause: Command to pause the dishwasher operation.", "samsungce.dishwasherWashingOptions": "Capability: Dishwasher Washing Options: This capability represents the different washing options available in a dishwasher.\nAttributes:\n    dryPlus: Indicates the usage of the dry plus feature in the dishwasher.\n    stormWash: Represents the storm wash feature which provides intense cleaning.\n    hotAirDry: Indicates if the hot air dry option is in use.\n    selectedZone: Highlights the selected washing zone in the dishwasher.\n    speedBooster: Indicates the activation of speed booster feature for faster washing.\n    highTempWash: Represents if the high temperature wash option is selected.\n    sanitizingWash: Indicates if the sanitizing wash feature is in use.\n    zoneBooster: Represents the zone booster feature for focused cleaning.\n    addRinse: Shows if an additional rinse cycle has been added.\n    supportedList: Lists all the supported washing options.\n    rinsePlus: Indicates the activation of rinse plus feature for added rinsing.\n    sanitize: Represents if the sanitize option is selected.\n    steamSoak: Indicates if the steam soak feature is in use.\nCommands:\n    setSelectedZone: Sets the selected washing zone in the dishwasher.\n        Args:\n            selectedZone: The zone to be selected.\n    setSanitize: Activates the sanitize feature.\n        Args:\n            sanitize: Boolean value to activate or deactivate sanitize.\n    setZoneBooster: Sets the zone booster feature.\n        Args:\n            zoneBooster: Boolean value to activate or deactivate zone booster.\n    setDryPlus: Activates the dry plus feature.\n        Args:\n            dryPlus: Boolean value to activate or deactivate dry plus.\n    setAddRinse: Adds an additional rinse cycle.\n        Args:\n            addRinse: Boolean value to add or remove additional rinse.\n    setHotAirDry: Activates the hot air dry feature.\n        Args:\n            hotAirDry: Boolean value to activate or deactivate hot air dry.\n    setStormWash: Sets the storm wash feature.\n        Args:\n            stormWash: Boolean value to activate or deactivate storm wash.\n    setHighTempWash: Selects the high temperature wash option.\n        Args:\n            highTempWash: Boolean value to activate or deactivate high temperature wash.\n    setSanitizingWash: Activates the sanitizing wash feature.\n        Args:\n            sanitizingWash: Boolean value to activate or deactivate sanitizing wash.\n    setSpeedBooster: Sets the speed booster feature.\n        Args:\n            speedBooster: Boolean value to activate or deactivate speed booster.\n    setRinsePlus: Activates the rinse plus feature.\n        Args:\n            rinsePlus: Boolean value to activate or deactivate rinse plus.\n    setOptions: Sets the given options.\n        Args:\n            options: The options to be set.\n    setSteamSoak: Activates the steam soak feature.\n        Args:\n            steamSoak: Boolean value to activate or deactivate steam soak.", "samsungce.kidsLock": "Kids Lock: This capability is likely associated with a lock that is specifically designed for children's use or safety.\nAttributes:\n    lockState: Represents the current state of the kids lock, possibly indicating whether it is locked or unlocked.\nCommands:\n    No commands provided for this capability."}, "capability_db_name": "test_device_capabilities"}
